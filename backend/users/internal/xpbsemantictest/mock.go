// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/athomecomar/athome/backend/users/internal/xpbsemantic (interfaces: CategoriesClient)

// Package xpbsemantictest is a generated GoMock package.
package xpbsemantictest

import (
	context "context"
	pbsemantic "github.com/athomecomar/athome/pb/pbsemantic"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

// MockCategoriesClient is a mock of CategoriesClient interface
type MockCategoriesClient struct {
	ctrl     *gomock.Controller
	recorder *MockCategoriesClientMockRecorder
}

// MockCategoriesClientMockRecorder is the mock recorder for MockCategoriesClient
type MockCategoriesClientMockRecorder struct {
	mock *MockCategoriesClient
}

// NewMockCategoriesClient creates a new mock instance
func NewMockCategoriesClient(ctrl *gomock.Controller) *MockCategoriesClient {
	mock := &MockCategoriesClient{ctrl: ctrl}
	mock.recorder = &MockCategoriesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCategoriesClient) EXPECT() *MockCategoriesClientMockRecorder {
	return m.recorder
}

// RetrieveCategories mocks base method
func (m *MockCategoriesClient) RetrieveCategories(arg0 context.Context, arg1 *emptypb.Empty, arg2 ...grpc.CallOption) (*pbsemantic.RetrieveCategoriesResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "RetrieveCategories", varargs...)
	ret0, _ := ret[0].(*pbsemantic.RetrieveCategoriesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveCategories indicates an expected call of RetrieveCategories
func (mr *MockCategoriesClientMockRecorder) RetrieveCategories(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveCategories", reflect.TypeOf((*MockCategoriesClient)(nil).RetrieveCategories), varargs...)
}

// RetrieveCategory mocks base method
func (m *MockCategoriesClient) RetrieveCategory(arg0 context.Context, arg1 *pbsemantic.RetrieveCategoryRequest, arg2 ...grpc.CallOption) (*pbsemantic.Category, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "RetrieveCategory", varargs...)
	ret0, _ := ret[0].(*pbsemantic.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveCategory indicates an expected call of RetrieveCategory
func (mr *MockCategoriesClientMockRecorder) RetrieveCategory(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveCategory", reflect.TypeOf((*MockCategoriesClient)(nil).RetrieveCategory), varargs...)
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: identifier.proto

package pbidentifier

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ValidateLicenseRequest struct {
	Dni                  uint64   `protobuf:"varint,1,opt,name=dni,proto3" json:"dni,omitempty"`
	License              uint64   `protobuf:"varint,2,opt,name=license,proto3" json:"license,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateLicenseRequest) Reset()         { *m = ValidateLicenseRequest{} }
func (m *ValidateLicenseRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateLicenseRequest) ProtoMessage()    {}
func (*ValidateLicenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5f65ec84694b166, []int{0}
}

func (m *ValidateLicenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateLicenseRequest.Unmarshal(m, b)
}
func (m *ValidateLicenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateLicenseRequest.Marshal(b, m, deterministic)
}
func (m *ValidateLicenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateLicenseRequest.Merge(m, src)
}
func (m *ValidateLicenseRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateLicenseRequest.Size(m)
}
func (m *ValidateLicenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateLicenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateLicenseRequest proto.InternalMessageInfo

func (m *ValidateLicenseRequest) GetDni() uint64 {
	if m != nil {
		return m.Dni
	}
	return 0
}

func (m *ValidateLicenseRequest) GetLicense() uint64 {
	if m != nil {
		return m.License
	}
	return 0
}

type ValidateLicenseResponse struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateLicenseResponse) Reset()         { *m = ValidateLicenseResponse{} }
func (m *ValidateLicenseResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateLicenseResponse) ProtoMessage()    {}
func (*ValidateLicenseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5f65ec84694b166, []int{1}
}

func (m *ValidateLicenseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateLicenseResponse.Unmarshal(m, b)
}
func (m *ValidateLicenseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateLicenseResponse.Marshal(b, m, deterministic)
}
func (m *ValidateLicenseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateLicenseResponse.Merge(m, src)
}
func (m *ValidateLicenseResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateLicenseResponse.Size(m)
}
func (m *ValidateLicenseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateLicenseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateLicenseResponse proto.InternalMessageInfo

func (m *ValidateLicenseResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

type InferByFullnameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname              string   `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InferByFullnameRequest) Reset()         { *m = InferByFullnameRequest{} }
func (m *InferByFullnameRequest) String() string { return proto.CompactTextString(m) }
func (*InferByFullnameRequest) ProtoMessage()    {}
func (*InferByFullnameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5f65ec84694b166, []int{2}
}

func (m *InferByFullnameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InferByFullnameRequest.Unmarshal(m, b)
}
func (m *InferByFullnameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InferByFullnameRequest.Marshal(b, m, deterministic)
}
func (m *InferByFullnameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InferByFullnameRequest.Merge(m, src)
}
func (m *InferByFullnameRequest) XXX_Size() int {
	return xxx_messageInfo_InferByFullnameRequest.Size(m)
}
func (m *InferByFullnameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InferByFullnameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InferByFullnameRequest proto.InternalMessageInfo

func (m *InferByFullnameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InferByFullnameRequest) GetSurname() string {
	if m != nil {
		return m.Surname
	}
	return ""
}

type InferLicenseResponse struct {
	License              uint64   `protobuf:"varint,1,opt,name=license,proto3" json:"license,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InferLicenseResponse) Reset()         { *m = InferLicenseResponse{} }
func (m *InferLicenseResponse) String() string { return proto.CompactTextString(m) }
func (*InferLicenseResponse) ProtoMessage()    {}
func (*InferLicenseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5f65ec84694b166, []int{3}
}

func (m *InferLicenseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InferLicenseResponse.Unmarshal(m, b)
}
func (m *InferLicenseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InferLicenseResponse.Marshal(b, m, deterministic)
}
func (m *InferLicenseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InferLicenseResponse.Merge(m, src)
}
func (m *InferLicenseResponse) XXX_Size() int {
	return xxx_messageInfo_InferLicenseResponse.Size(m)
}
func (m *InferLicenseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InferLicenseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InferLicenseResponse proto.InternalMessageInfo

func (m *InferLicenseResponse) GetLicense() uint64 {
	if m != nil {
		return m.License
	}
	return 0
}

type InferTomeAndFolioResponse struct {
	Tome                 uint64   `protobuf:"varint,1,opt,name=tome,proto3" json:"tome,omitempty"`
	Folio                uint64   `protobuf:"varint,2,opt,name=folio,proto3" json:"folio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InferTomeAndFolioResponse) Reset()         { *m = InferTomeAndFolioResponse{} }
func (m *InferTomeAndFolioResponse) String() string { return proto.CompactTextString(m) }
func (*InferTomeAndFolioResponse) ProtoMessage()    {}
func (*InferTomeAndFolioResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5f65ec84694b166, []int{4}
}

func (m *InferTomeAndFolioResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InferTomeAndFolioResponse.Unmarshal(m, b)
}
func (m *InferTomeAndFolioResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InferTomeAndFolioResponse.Marshal(b, m, deterministic)
}
func (m *InferTomeAndFolioResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InferTomeAndFolioResponse.Merge(m, src)
}
func (m *InferTomeAndFolioResponse) XXX_Size() int {
	return xxx_messageInfo_InferTomeAndFolioResponse.Size(m)
}
func (m *InferTomeAndFolioResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InferTomeAndFolioResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InferTomeAndFolioResponse proto.InternalMessageInfo

func (m *InferTomeAndFolioResponse) GetTome() uint64 {
	if m != nil {
		return m.Tome
	}
	return 0
}

func (m *InferTomeAndFolioResponse) GetFolio() uint64 {
	if m != nil {
		return m.Folio
	}
	return 0
}

type InferDataByCUERequest struct {
	Cue                  uint64   `protobuf:"varint,1,opt,name=cue,proto3" json:"cue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InferDataByCUERequest) Reset()         { *m = InferDataByCUERequest{} }
func (m *InferDataByCUERequest) String() string { return proto.CompactTextString(m) }
func (*InferDataByCUERequest) ProtoMessage()    {}
func (*InferDataByCUERequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5f65ec84694b166, []int{5}
}

func (m *InferDataByCUERequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InferDataByCUERequest.Unmarshal(m, b)
}
func (m *InferDataByCUERequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InferDataByCUERequest.Marshal(b, m, deterministic)
}
func (m *InferDataByCUERequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InferDataByCUERequest.Merge(m, src)
}
func (m *InferDataByCUERequest) XXX_Size() int {
	return xxx_messageInfo_InferDataByCUERequest.Size(m)
}
func (m *InferDataByCUERequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InferDataByCUERequest.DiscardUnknown(m)
}

var xxx_messageInfo_InferDataByCUERequest proto.InternalMessageInfo

func (m *InferDataByCUERequest) GetCue() uint64 {
	if m != nil {
		return m.Cue
	}
	return 0
}

type InferDataByCUEResponse struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsPublic             bool           `protobuf:"varint,2,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsUrban              bool           `protobuf:"varint,3,opt,name=is_urban,json=isUrban,proto3" json:"is_urban,omitempty"`
	Address              string         `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Phone                string         `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	EducationType        *EducationType `protobuf:"bytes,7,opt,name=education_type,json=educationType,proto3" json:"education_type,omitempty"`
	AlumnType            *AlumnType     `protobuf:"bytes,8,opt,name=alumn_type,json=alumnType,proto3" json:"alumn_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *InferDataByCUEResponse) Reset()         { *m = InferDataByCUEResponse{} }
func (m *InferDataByCUEResponse) String() string { return proto.CompactTextString(m) }
func (*InferDataByCUEResponse) ProtoMessage()    {}
func (*InferDataByCUEResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5f65ec84694b166, []int{6}
}

func (m *InferDataByCUEResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InferDataByCUEResponse.Unmarshal(m, b)
}
func (m *InferDataByCUEResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InferDataByCUEResponse.Marshal(b, m, deterministic)
}
func (m *InferDataByCUEResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InferDataByCUEResponse.Merge(m, src)
}
func (m *InferDataByCUEResponse) XXX_Size() int {
	return xxx_messageInfo_InferDataByCUEResponse.Size(m)
}
func (m *InferDataByCUEResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InferDataByCUEResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InferDataByCUEResponse proto.InternalMessageInfo

func (m *InferDataByCUEResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InferDataByCUEResponse) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

func (m *InferDataByCUEResponse) GetIsUrban() bool {
	if m != nil {
		return m.IsUrban
	}
	return false
}

func (m *InferDataByCUEResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *InferDataByCUEResponse) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *InferDataByCUEResponse) GetEducationType() *EducationType {
	if m != nil {
		return m.EducationType
	}
	return nil
}

func (m *InferDataByCUEResponse) GetAlumnType() *AlumnType {
	if m != nil {
		return m.AlumnType
	}
	return nil
}

type EducationType struct {
	Maternal             bool     `protobuf:"varint,1,opt,name=maternal,proto3" json:"maternal,omitempty"`
	Initial              bool     `protobuf:"varint,2,opt,name=initial,proto3" json:"initial,omitempty"`
	Primary              bool     `protobuf:"varint,3,opt,name=primary,proto3" json:"primary,omitempty"`
	HighSchool           bool     `protobuf:"varint,4,opt,name=high_school,json=highSchool,proto3" json:"high_school,omitempty"`
	Technical            bool     `protobuf:"varint,5,opt,name=technical,proto3" json:"technical,omitempty"`
	Superior             bool     `protobuf:"varint,6,opt,name=superior,proto3" json:"superior,omitempty"`
	Courses              bool     `protobuf:"varint,7,opt,name=courses,proto3" json:"courses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EducationType) Reset()         { *m = EducationType{} }
func (m *EducationType) String() string { return proto.CompactTextString(m) }
func (*EducationType) ProtoMessage()    {}
func (*EducationType) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5f65ec84694b166, []int{7}
}

func (m *EducationType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EducationType.Unmarshal(m, b)
}
func (m *EducationType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EducationType.Marshal(b, m, deterministic)
}
func (m *EducationType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EducationType.Merge(m, src)
}
func (m *EducationType) XXX_Size() int {
	return xxx_messageInfo_EducationType.Size(m)
}
func (m *EducationType) XXX_DiscardUnknown() {
	xxx_messageInfo_EducationType.DiscardUnknown(m)
}

var xxx_messageInfo_EducationType proto.InternalMessageInfo

func (m *EducationType) GetMaternal() bool {
	if m != nil {
		return m.Maternal
	}
	return false
}

func (m *EducationType) GetInitial() bool {
	if m != nil {
		return m.Initial
	}
	return false
}

func (m *EducationType) GetPrimary() bool {
	if m != nil {
		return m.Primary
	}
	return false
}

func (m *EducationType) GetHighSchool() bool {
	if m != nil {
		return m.HighSchool
	}
	return false
}

func (m *EducationType) GetTechnical() bool {
	if m != nil {
		return m.Technical
	}
	return false
}

func (m *EducationType) GetSuperior() bool {
	if m != nil {
		return m.Superior
	}
	return false
}

func (m *EducationType) GetCourses() bool {
	if m != nil {
		return m.Courses
	}
	return false
}

type AlumnType struct {
	Adult                bool     `protobuf:"varint,1,opt,name=adult,proto3" json:"adult,omitempty"`
	Special              bool     `protobuf:"varint,2,opt,name=special,proto3" json:"special,omitempty"`
	Normal               bool     `protobuf:"varint,3,opt,name=normal,proto3" json:"normal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlumnType) Reset()         { *m = AlumnType{} }
func (m *AlumnType) String() string { return proto.CompactTextString(m) }
func (*AlumnType) ProtoMessage()    {}
func (*AlumnType) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5f65ec84694b166, []int{8}
}

func (m *AlumnType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlumnType.Unmarshal(m, b)
}
func (m *AlumnType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlumnType.Marshal(b, m, deterministic)
}
func (m *AlumnType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlumnType.Merge(m, src)
}
func (m *AlumnType) XXX_Size() int {
	return xxx_messageInfo_AlumnType.Size(m)
}
func (m *AlumnType) XXX_DiscardUnknown() {
	xxx_messageInfo_AlumnType.DiscardUnknown(m)
}

var xxx_messageInfo_AlumnType proto.InternalMessageInfo

func (m *AlumnType) GetAdult() bool {
	if m != nil {
		return m.Adult
	}
	return false
}

func (m *AlumnType) GetSpecial() bool {
	if m != nil {
		return m.Special
	}
	return false
}

func (m *AlumnType) GetNormal() bool {
	if m != nil {
		return m.Normal
	}
	return false
}

func init() {
	proto.RegisterType((*ValidateLicenseRequest)(nil), "identifier.ValidateLicenseRequest")
	proto.RegisterType((*ValidateLicenseResponse)(nil), "identifier.ValidateLicenseResponse")
	proto.RegisterType((*InferByFullnameRequest)(nil), "identifier.InferByFullnameRequest")
	proto.RegisterType((*InferLicenseResponse)(nil), "identifier.InferLicenseResponse")
	proto.RegisterType((*InferTomeAndFolioResponse)(nil), "identifier.InferTomeAndFolioResponse")
	proto.RegisterType((*InferDataByCUERequest)(nil), "identifier.InferDataByCUERequest")
	proto.RegisterType((*InferDataByCUEResponse)(nil), "identifier.InferDataByCUEResponse")
	proto.RegisterType((*EducationType)(nil), "identifier.EducationType")
	proto.RegisterType((*AlumnType)(nil), "identifier.AlumnType")
}

func init() {
	proto.RegisterFile("identifier.proto", fileDescriptor_f5f65ec84694b166)
}

var fileDescriptor_f5f65ec84694b166 = []byte{
	// 735 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x4d, 0x6b, 0xe3, 0x46,
	0x18, 0x8e, 0x3f, 0x62, 0x4b, 0xaf, 0x49, 0x30, 0x43, 0x3e, 0x14, 0xa7, 0x1f, 0x8e, 0x42, 0x21,
	0xa7, 0xb8, 0xb8, 0xa5, 0x14, 0x4a, 0xa1, 0x51, 0x9b, 0x40, 0x20, 0x85, 0xa0, 0x24, 0x85, 0x96,
	0x82, 0x19, 0x4b, 0x93, 0x68, 0xa8, 0x34, 0xa3, 0xce, 0x8c, 0x5a, 0x74, 0xeb, 0xa1, 0xc7, 0xde,
	0x7a, 0xdf, 0xbf, 0xb2, 0x2c, 0xec, 0x4f, 0x58, 0x58, 0x58, 0xf6, 0x1f, 0xec, 0x3f, 0xc8, 0x25,
	0xcb, 0x8c, 0x25, 0x4b, 0xb6, 0x43, 0xd8, 0xc3, 0xde, 0xf4, 0xbc, 0xef, 0xf3, 0xbc, 0x1f, 0x0f,
	0xf3, 0xda, 0xd0, 0xa7, 0x21, 0x61, 0x8a, 0xde, 0x52, 0x22, 0x8e, 0x53, 0xc1, 0x15, 0x47, 0x50,
	0x45, 0x06, 0xbb, 0x7f, 0xe1, 0x98, 0x86, 0x58, 0x91, 0x51, 0xf9, 0x31, 0x23, 0xb9, 0xd7, 0xb0,
	0xf3, 0x4b, 0x11, 0xb9, 0xa0, 0x01, 0x61, 0x92, 0xf8, 0xe4, 0xcf, 0x8c, 0x48, 0x85, 0x86, 0xd0,
	0x0a, 0x19, 0x75, 0x1a, 0xc3, 0xc6, 0x51, 0xdb, 0xdb, 0xbc, 0xf7, 0x7a, 0x63, 0xbb, 0xff, 0xf0,
	0xe2, 0xf5, 0x68, 0xf8, 0xfc, 0xdf, 0xef, 0x7d, 0x9d, 0x42, 0x0e, 0x74, 0xe3, 0x99, 0xc6, 0x69,
	0x6a, 0x96, 0x5f, 0x42, 0x77, 0x04, 0xbb, 0x2b, 0x55, 0x65, 0xca, 0x99, 0x24, 0x68, 0x0b, 0xd6,
	0xcd, 0x08, 0xa6, 0xb0, 0xe5, 0xcf, 0x80, 0xfb, 0x3b, 0xec, 0x9c, 0xb3, 0x5b, 0x22, 0xbc, 0xfc,
	0x2c, 0x8b, 0x63, 0x86, 0x93, 0xf9, 0x18, 0x9f, 0x42, 0x5b, 0x43, 0x43, 0xb7, 0x3d, 0xfb, 0xde,
	0xeb, 0x88, 0x76, 0xbf, 0xe9, 0x7c, 0xe6, 0x9b, 0x30, 0x3a, 0x84, 0xae, 0xcc, 0x84, 0x61, 0x34,
	0x97, 0x19, 0x65, 0xc6, 0xfd, 0x12, 0xb6, 0x4c, 0xf5, 0xe5, 0x59, 0x6a, 0x0b, 0x34, 0x16, 0x17,
	0x38, 0x85, 0x3d, 0xa3, 0xb8, 0xe6, 0x09, 0x39, 0x61, 0xe1, 0x19, 0x8f, 0x29, 0x9f, 0xcb, 0x10,
	0xb4, 0x15, 0x4f, 0x4a, 0x8d, 0xf9, 0xd6, 0x6b, 0xdd, 0x6a, 0x52, 0xe1, 0xc4, 0x0c, 0xb8, 0xdf,
	0xc1, 0xb6, 0x29, 0xf3, 0x13, 0x56, 0xd8, 0xcb, 0x7f, 0xbc, 0x39, 0x2d, 0xb7, 0x72, 0xa1, 0x15,
	0x64, 0x45, 0x05, 0xaf, 0x7f, 0xef, 0x6d, 0x8c, 0x7b, 0xfd, 0x87, 0xff, 0xdf, 0xbd, 0x6d, 0x0d,
	0xff, 0x79, 0xf3, 0xd2, 0xf6, 0x75, 0xd2, 0xfd, 0xaf, 0x59, 0x98, 0x52, 0x53, 0x57, 0x13, 0x54,
	0xa6, 0x14, 0x4e, 0xec, 0x83, 0x4d, 0xe5, 0x24, 0xcd, 0xa6, 0x31, 0x0d, 0xcc, 0x14, 0x96, 0x6f,
	0x51, 0x79, 0x69, 0x30, 0xda, 0x03, 0x8b, 0xca, 0x49, 0x26, 0xa6, 0x98, 0x39, 0x2d, 0x93, 0xeb,
	0x52, 0x79, 0xa3, 0xa1, 0x36, 0x01, 0x87, 0xa1, 0x20, 0x52, 0x3a, 0x6d, 0x53, 0xae, 0x84, 0x7a,
	0xa7, 0x34, 0xe2, 0x8c, 0x38, 0x1d, 0x13, 0x9f, 0x01, 0xf4, 0x03, 0x6c, 0x92, 0x30, 0x0b, 0xb0,
	0xa2, 0x9c, 0x4d, 0x54, 0x9e, 0x12, 0xa7, 0x3b, 0x6c, 0x1c, 0xf5, 0xc6, 0x7b, 0xc7, 0xb5, 0x17,
	0x78, 0x5a, 0x32, 0xae, 0xf3, 0x94, 0xf8, 0x1b, 0xa4, 0x0e, 0xd1, 0xd7, 0x00, 0x38, 0xce, 0x92,
	0x42, 0x6d, 0x19, 0xf5, 0x76, 0x5d, 0x7d, 0xa2, 0xb3, 0x46, 0x69, 0xe3, 0xf2, 0xd3, 0x7d, 0xd5,
	0x80, 0x8d, 0x85, 0xb2, 0x68, 0x00, 0x56, 0x82, 0x15, 0x11, 0x0c, 0xc7, 0xc5, 0x6b, 0x9a, 0x63,
	0xbd, 0x15, 0x65, 0x54, 0x51, 0x1c, 0x17, 0x5e, 0x94, 0x50, 0x67, 0x52, 0x41, 0x13, 0x2c, 0xf2,
	0xd2, 0x89, 0x02, 0xa2, 0xcf, 0xa1, 0x17, 0xd1, 0xbb, 0x68, 0x22, 0x83, 0x88, 0xf3, 0xd8, 0xb8,
	0x61, 0xf9, 0xa0, 0x43, 0x57, 0x26, 0x82, 0x3e, 0x01, 0x5b, 0x91, 0x20, 0x62, 0x34, 0xc0, 0xb1,
	0xb3, 0x6e, 0xd2, 0x55, 0x40, 0x8f, 0x23, 0xb3, 0x94, 0x08, 0xca, 0x85, 0x71, 0xcc, 0xf2, 0xe7,
	0x58, 0x37, 0x0d, 0x78, 0x26, 0x24, 0x91, 0xc6, 0x2d, 0xcb, 0x2f, 0xa1, 0x7b, 0x05, 0xf6, 0x7c,
	0x5d, 0xed, 0x38, 0x0e, 0xb3, 0x58, 0x95, 0xc7, 0x61, 0x80, 0x16, 0xcb, 0x94, 0x04, 0xb5, 0x5d,
	0x0a, 0x88, 0x76, 0xa0, 0xc3, 0xb8, 0x48, 0x70, 0x5c, 0xac, 0x52, 0xa0, 0xf1, 0xb3, 0x36, 0xc0,
	0xf9, 0xdc, 0x4f, 0x14, 0xc1, 0xfe, 0xd2, 0x39, 0x5e, 0xca, 0x3c, 0x88, 0x78, 0xcc, 0xef, 0xa8,
	0x7e, 0x8c, 0x75, 0xef, 0x1f, 0xff, 0x35, 0x18, 0x1c, 0x3e, 0xc9, 0x99, 0x3d, 0x4b, 0x77, 0x0d,
	0x11, 0xd8, 0xaf, 0x5f, 0x5a, 0x75, 0xce, 0x3f, 0x93, 0x90, 0x06, 0x8b, 0x9d, 0x1e, 0x3f, 0xf8,
	0xc1, 0x70, 0x85, 0xb3, 0xda, 0x26, 0x85, 0x83, 0x95, 0xf3, 0xac, 0x2a, 0x5d, 0xe0, 0xbf, 0x73,
	0x22, 0x3e, 0xa8, 0xd9, 0x17, 0x2b, 0x9c, 0xc7, 0x2e, 0xde, 0x5d, 0x43, 0x02, 0x0e, 0x9f, 0xe8,
	0x78, 0xa2, 0x14, 0x17, 0x8c, 0xe4, 0x1f, 0xb7, 0xe7, 0xaf, 0xb0, 0xb9, 0x78, 0xff, 0xe8, 0x60,
	0x45, 0xba, 0xfc, 0xcb, 0x32, 0x70, 0x9f, 0xa2, 0x94, 0xa5, 0xbd, 0x6f, 0x7f, 0xfb, 0xe6, 0x8e,
	0xaa, 0x28, 0x9b, 0x1e, 0x07, 0x3c, 0x19, 0x61, 0x15, 0xf1, 0x84, 0x04, 0x3c, 0xc1, 0x62, 0x34,
	0xc5, 0xc1, 0x1f, 0x84, 0x85, 0xa3, 0xaa, 0xca, 0x28, 0x9d, 0x56, 0x60, 0xda, 0x31, 0xff, 0x1b,
	0x5f, 0xbd, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x68, 0x4c, 0x46, 0x9f, 0x70, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IdentifierClient is the client API for Identifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdentifierClient interface {
	ValidateLicensePsychologist(ctx context.Context, in *ValidateLicenseRequest, opts ...grpc.CallOption) (*ValidateLicenseResponse, error)
	InferLicenseByFullnameMedic(ctx context.Context, in *InferByFullnameRequest, opts ...grpc.CallOption) (*InferLicenseResponse, error)
	InferTomeAndFolioByFullnameLawyer(ctx context.Context, in *InferByFullnameRequest, opts ...grpc.CallOption) (*InferTomeAndFolioResponse, error)
	InferTomeAndFolioByFullnameAttorney(ctx context.Context, in *InferByFullnameRequest, opts ...grpc.CallOption) (*InferTomeAndFolioResponse, error)
	InferDataByCUE(ctx context.Context, in *InferDataByCUERequest, opts ...grpc.CallOption) (*InferDataByCUEResponse, error)
}

type identifierClient struct {
	cc grpc.ClientConnInterface
}

func NewIdentifierClient(cc grpc.ClientConnInterface) IdentifierClient {
	return &identifierClient{cc}
}

func (c *identifierClient) ValidateLicensePsychologist(ctx context.Context, in *ValidateLicenseRequest, opts ...grpc.CallOption) (*ValidateLicenseResponse, error) {
	out := new(ValidateLicenseResponse)
	err := c.cc.Invoke(ctx, "/identifier.Identifier/ValidateLicensePsychologist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identifierClient) InferLicenseByFullnameMedic(ctx context.Context, in *InferByFullnameRequest, opts ...grpc.CallOption) (*InferLicenseResponse, error) {
	out := new(InferLicenseResponse)
	err := c.cc.Invoke(ctx, "/identifier.Identifier/InferLicenseByFullnameMedic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identifierClient) InferTomeAndFolioByFullnameLawyer(ctx context.Context, in *InferByFullnameRequest, opts ...grpc.CallOption) (*InferTomeAndFolioResponse, error) {
	out := new(InferTomeAndFolioResponse)
	err := c.cc.Invoke(ctx, "/identifier.Identifier/InferTomeAndFolioByFullnameLawyer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identifierClient) InferTomeAndFolioByFullnameAttorney(ctx context.Context, in *InferByFullnameRequest, opts ...grpc.CallOption) (*InferTomeAndFolioResponse, error) {
	out := new(InferTomeAndFolioResponse)
	err := c.cc.Invoke(ctx, "/identifier.Identifier/InferTomeAndFolioByFullnameAttorney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identifierClient) InferDataByCUE(ctx context.Context, in *InferDataByCUERequest, opts ...grpc.CallOption) (*InferDataByCUEResponse, error) {
	out := new(InferDataByCUEResponse)
	err := c.cc.Invoke(ctx, "/identifier.Identifier/InferDataByCUE", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdentifierServer is the server API for Identifier service.
type IdentifierServer interface {
	ValidateLicensePsychologist(context.Context, *ValidateLicenseRequest) (*ValidateLicenseResponse, error)
	InferLicenseByFullnameMedic(context.Context, *InferByFullnameRequest) (*InferLicenseResponse, error)
	InferTomeAndFolioByFullnameLawyer(context.Context, *InferByFullnameRequest) (*InferTomeAndFolioResponse, error)
	InferTomeAndFolioByFullnameAttorney(context.Context, *InferByFullnameRequest) (*InferTomeAndFolioResponse, error)
	InferDataByCUE(context.Context, *InferDataByCUERequest) (*InferDataByCUEResponse, error)
}

// UnimplementedIdentifierServer can be embedded to have forward compatible implementations.
type UnimplementedIdentifierServer struct {
}

func (*UnimplementedIdentifierServer) ValidateLicensePsychologist(ctx context.Context, req *ValidateLicenseRequest) (*ValidateLicenseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateLicensePsychologist not implemented")
}
func (*UnimplementedIdentifierServer) InferLicenseByFullnameMedic(ctx context.Context, req *InferByFullnameRequest) (*InferLicenseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InferLicenseByFullnameMedic not implemented")
}
func (*UnimplementedIdentifierServer) InferTomeAndFolioByFullnameLawyer(ctx context.Context, req *InferByFullnameRequest) (*InferTomeAndFolioResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InferTomeAndFolioByFullnameLawyer not implemented")
}
func (*UnimplementedIdentifierServer) InferTomeAndFolioByFullnameAttorney(ctx context.Context, req *InferByFullnameRequest) (*InferTomeAndFolioResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InferTomeAndFolioByFullnameAttorney not implemented")
}
func (*UnimplementedIdentifierServer) InferDataByCUE(ctx context.Context, req *InferDataByCUERequest) (*InferDataByCUEResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InferDataByCUE not implemented")
}

func RegisterIdentifierServer(s *grpc.Server, srv IdentifierServer) {
	s.RegisterService(&_Identifier_serviceDesc, srv)
}

func _Identifier_ValidateLicensePsychologist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateLicenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentifierServer).ValidateLicensePsychologist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identifier.Identifier/ValidateLicensePsychologist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentifierServer).ValidateLicensePsychologist(ctx, req.(*ValidateLicenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identifier_InferLicenseByFullnameMedic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InferByFullnameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentifierServer).InferLicenseByFullnameMedic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identifier.Identifier/InferLicenseByFullnameMedic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentifierServer).InferLicenseByFullnameMedic(ctx, req.(*InferByFullnameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identifier_InferTomeAndFolioByFullnameLawyer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InferByFullnameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentifierServer).InferTomeAndFolioByFullnameLawyer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identifier.Identifier/InferTomeAndFolioByFullnameLawyer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentifierServer).InferTomeAndFolioByFullnameLawyer(ctx, req.(*InferByFullnameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identifier_InferTomeAndFolioByFullnameAttorney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InferByFullnameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentifierServer).InferTomeAndFolioByFullnameAttorney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identifier.Identifier/InferTomeAndFolioByFullnameAttorney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentifierServer).InferTomeAndFolioByFullnameAttorney(ctx, req.(*InferByFullnameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identifier_InferDataByCUE_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InferDataByCUERequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentifierServer).InferDataByCUE(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identifier.Identifier/InferDataByCUE",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentifierServer).InferDataByCUE(ctx, req.(*InferDataByCUERequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Identifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "identifier.Identifier",
	HandlerType: (*IdentifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateLicensePsychologist",
			Handler:    _Identifier_ValidateLicensePsychologist_Handler,
		},
		{
			MethodName: "InferLicenseByFullnameMedic",
			Handler:    _Identifier_InferLicenseByFullnameMedic_Handler,
		},
		{
			MethodName: "InferTomeAndFolioByFullnameLawyer",
			Handler:    _Identifier_InferTomeAndFolioByFullnameLawyer_Handler,
		},
		{
			MethodName: "InferTomeAndFolioByFullnameAttorney",
			Handler:    _Identifier_InferTomeAndFolioByFullnameAttorney_Handler,
		},
		{
			MethodName: "InferDataByCUE",
			Handler:    _Identifier_InferDataByCUE_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "identifier.proto",
}

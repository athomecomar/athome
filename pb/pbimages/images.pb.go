// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: images.proto

package pbimages

import (
	context "context"
	pbshared "github.com/athomecomar/athome/pb/pbshared"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CloneImagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images map[string]*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CloneImagesResponse) Reset() {
	*x = CloneImagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneImagesResponse) ProtoMessage() {}

func (x *CloneImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneImagesResponse.ProtoReflect.Descriptor instead.
func (*CloneImagesResponse) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{0}
}

func (x *CloneImagesResponse) GetImages() map[string]*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type CloneImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	FromEntityId uint64 `protobuf:"varint,2,opt,name=from_entity_id,json=fromEntityId,proto3" json:"from_entity_id,omitempty"`
	DestEntityId uint64 `protobuf:"varint,3,opt,name=dest_entity_id,json=destEntityId,proto3" json:"dest_entity_id,omitempty"`
	EntityTable  string `protobuf:"bytes,4,opt,name=entity_table,json=entityTable,proto3" json:"entity_table,omitempty"`
}

func (x *CloneImagesRequest) Reset() {
	*x = CloneImagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneImagesRequest) ProtoMessage() {}

func (x *CloneImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneImagesRequest.ProtoReflect.Descriptor instead.
func (*CloneImagesRequest) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{1}
}

func (x *CloneImagesRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CloneImagesRequest) GetFromEntityId() uint64 {
	if x != nil {
		return x.FromEntityId
	}
	return 0
}

func (x *CloneImagesRequest) GetDestEntityId() uint64 {
	if x != nil {
		return x.DestEntityId
	}
	return 0
}

func (x *CloneImagesRequest) GetEntityTable() string {
	if x != nil {
		return x.EntityTable
	}
	return ""
}

type ChangeEntityImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string           `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	From        *pbshared.Entity `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Dest        *pbshared.Entity `protobuf:"bytes,3,opt,name=dest,proto3" json:"dest,omitempty"`
}

func (x *ChangeEntityImagesRequest) Reset() {
	*x = ChangeEntityImagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeEntityImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEntityImagesRequest) ProtoMessage() {}

func (x *ChangeEntityImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEntityImagesRequest.ProtoReflect.Descriptor instead.
func (*ChangeEntityImagesRequest) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{2}
}

func (x *ChangeEntityImagesRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ChangeEntityImagesRequest) GetFrom() *pbshared.Entity {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ChangeEntityImagesRequest) GetDest() *pbshared.Entity {
	if x != nil {
		return x.Dest
	}
	return nil
}

type CreateImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Corpus:
	//	*CreateImageRequest_Metadata_
	//	*CreateImageRequest_Chunk
	Corpus isCreateImageRequest_Corpus `protobuf_oneof:"corpus"`
}

func (x *CreateImageRequest) Reset() {
	*x = CreateImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageRequest) ProtoMessage() {}

func (x *CreateImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageRequest.ProtoReflect.Descriptor instead.
func (*CreateImageRequest) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{3}
}

func (m *CreateImageRequest) GetCorpus() isCreateImageRequest_Corpus {
	if m != nil {
		return m.Corpus
	}
	return nil
}

func (x *CreateImageRequest) GetMetadata() *CreateImageRequest_Metadata {
	if x, ok := x.GetCorpus().(*CreateImageRequest_Metadata_); ok {
		return x.Metadata
	}
	return nil
}

func (x *CreateImageRequest) GetChunk() []byte {
	if x, ok := x.GetCorpus().(*CreateImageRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

type isCreateImageRequest_Corpus interface {
	isCreateImageRequest_Corpus()
}

type CreateImageRequest_Metadata_ struct {
	Metadata *CreateImageRequest_Metadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type CreateImageRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*CreateImageRequest_Metadata_) isCreateImageRequest_Corpus() {}

func (*CreateImageRequest_Chunk) isCreateImageRequest_Corpus() {}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size   int64            `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Uri    string           `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Entity *pbshared.Entity `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{4}
}

func (x *Image) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Image) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Image) GetEntity() *pbshared.Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type CreateImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Image   *Image `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *CreateImageResponse) Reset() {
	*x = CreateImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageResponse) ProtoMessage() {}

func (x *CreateImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageResponse.ProtoReflect.Descriptor instead.
func (*CreateImageResponse) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{5}
}

func (x *CreateImageResponse) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *CreateImageResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type RetrieveImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *pbshared.Entity `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *RetrieveImagesRequest) Reset() {
	*x = RetrieveImagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveImagesRequest) ProtoMessage() {}

func (x *RetrieveImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveImagesRequest.ProtoReflect.Descriptor instead.
func (*RetrieveImagesRequest) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{6}
}

func (x *RetrieveImagesRequest) GetEntity() *pbshared.Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type RetrieveImagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images map[string]*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RetrieveImagesResponse) Reset() {
	*x = RetrieveImagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveImagesResponse) ProtoMessage() {}

func (x *RetrieveImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveImagesResponse.ProtoReflect.Descriptor instead.
func (*RetrieveImagesResponse) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{7}
}

func (x *RetrieveImagesResponse) GetImages() map[string]*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type DeleteImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string           `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Entity      *pbshared.Entity `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *DeleteImagesRequest) Reset() {
	*x = DeleteImagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImagesRequest) ProtoMessage() {}

func (x *DeleteImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImagesRequest.ProtoReflect.Descriptor instead.
func (*DeleteImagesRequest) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteImagesRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *DeleteImagesRequest) GetEntity() *pbshared.Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type CreateImageRequest_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ext         string           `protobuf:"bytes,1,opt,name=ext,proto3" json:"ext,omitempty"`
	AccessToken string           `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Entity      *pbshared.Entity `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *CreateImageRequest_Metadata) Reset() {
	*x = CreateImageRequest_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_images_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageRequest_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageRequest_Metadata) ProtoMessage() {}

func (x *CreateImageRequest_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_images_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageRequest_Metadata.ProtoReflect.Descriptor instead.
func (*CreateImageRequest_Metadata) Descriptor() ([]byte, []int) {
	return file_images_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CreateImageRequest_Metadata) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *CreateImageRequest_Metadata) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateImageRequest_Metadata) GetEntity() *pbshared.Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

var File_images_proto protoreflect.FileDescriptor

var file_images_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x48, 0x0a, 0x0b, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24,
	0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x86, 0x01,
	0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x83, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15, 0x52, 0x03, 0x73, 0x76, 0x67, 0x52, 0x03,
	0x6a, 0x70, 0x67, 0x52, 0x04, 0x6a, 0x70, 0x65, 0x67, 0x52, 0x03, 0x70, 0x6e, 0x67, 0x52, 0x03,
	0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x08,
	0x0a, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x22, 0x55, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x55, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x48, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x60, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x32, 0x8b, 0x03, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x4a, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x51, 0x0a, 0x0e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x1a, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x6e,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a,
	0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x62, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_images_proto_rawDescOnce sync.Once
	file_images_proto_rawDescData = file_images_proto_rawDesc
)

func file_images_proto_rawDescGZIP() []byte {
	file_images_proto_rawDescOnce.Do(func() {
		file_images_proto_rawDescData = protoimpl.X.CompressGZIP(file_images_proto_rawDescData)
	})
	return file_images_proto_rawDescData
}

var file_images_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_images_proto_goTypes = []interface{}{
	(*CloneImagesResponse)(nil),         // 0: images.CloneImagesResponse
	(*CloneImagesRequest)(nil),          // 1: images.CloneImagesRequest
	(*ChangeEntityImagesRequest)(nil),   // 2: images.ChangeEntityImagesRequest
	(*CreateImageRequest)(nil),          // 3: images.CreateImageRequest
	(*Image)(nil),                       // 4: images.Image
	(*CreateImageResponse)(nil),         // 5: images.CreateImageResponse
	(*RetrieveImagesRequest)(nil),       // 6: images.RetrieveImagesRequest
	(*RetrieveImagesResponse)(nil),      // 7: images.RetrieveImagesResponse
	(*DeleteImagesRequest)(nil),         // 8: images.DeleteImagesRequest
	nil,                                 // 9: images.CloneImagesResponse.ImagesEntry
	(*CreateImageRequest_Metadata)(nil), // 10: images.CreateImageRequest.Metadata
	nil,                                 // 11: images.RetrieveImagesResponse.ImagesEntry
	(*pbshared.Entity)(nil),             // 12: shared.Entity
	(*empty.Empty)(nil),                 // 13: google.protobuf.Empty
}
var file_images_proto_depIdxs = []int32{
	9,  // 0: images.CloneImagesResponse.images:type_name -> images.CloneImagesResponse.ImagesEntry
	12, // 1: images.ChangeEntityImagesRequest.from:type_name -> shared.Entity
	12, // 2: images.ChangeEntityImagesRequest.dest:type_name -> shared.Entity
	10, // 3: images.CreateImageRequest.metadata:type_name -> images.CreateImageRequest.Metadata
	12, // 4: images.Image.entity:type_name -> shared.Entity
	4,  // 5: images.CreateImageResponse.image:type_name -> images.Image
	12, // 6: images.RetrieveImagesRequest.entity:type_name -> shared.Entity
	11, // 7: images.RetrieveImagesResponse.images:type_name -> images.RetrieveImagesResponse.ImagesEntry
	12, // 8: images.DeleteImagesRequest.entity:type_name -> shared.Entity
	4,  // 9: images.CloneImagesResponse.ImagesEntry.value:type_name -> images.Image
	12, // 10: images.CreateImageRequest.Metadata.entity:type_name -> shared.Entity
	4,  // 11: images.RetrieveImagesResponse.ImagesEntry.value:type_name -> images.Image
	3,  // 12: images.Images.CreateImage:input_type -> images.CreateImageRequest
	6,  // 13: images.Images.RetrieveImages:input_type -> images.RetrieveImagesRequest
	8,  // 14: images.Images.DeleteImages:input_type -> images.DeleteImagesRequest
	1,  // 15: images.Images.CloneImages:input_type -> images.CloneImagesRequest
	2,  // 16: images.Images.ChangeEntityImages:input_type -> images.ChangeEntityImagesRequest
	5,  // 17: images.Images.CreateImage:output_type -> images.CreateImageResponse
	7,  // 18: images.Images.RetrieveImages:output_type -> images.RetrieveImagesResponse
	13, // 19: images.Images.DeleteImages:output_type -> google.protobuf.Empty
	0,  // 20: images.Images.CloneImages:output_type -> images.CloneImagesResponse
	13, // 21: images.Images.ChangeEntityImages:output_type -> google.protobuf.Empty
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_images_proto_init() }
func file_images_proto_init() {
	if File_images_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_images_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneImagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_images_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneImagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_images_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeEntityImagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_images_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_images_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_images_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_images_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveImagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_images_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveImagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_images_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_images_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageRequest_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_images_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*CreateImageRequest_Metadata_)(nil),
		(*CreateImageRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_images_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_images_proto_goTypes,
		DependencyIndexes: file_images_proto_depIdxs,
		MessageInfos:      file_images_proto_msgTypes,
	}.Build()
	File_images_proto = out.File
	file_images_proto_rawDesc = nil
	file_images_proto_goTypes = nil
	file_images_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ImagesClient is the client API for Images service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImagesClient interface {
	CreateImage(ctx context.Context, opts ...grpc.CallOption) (Images_CreateImageClient, error)
	RetrieveImages(ctx context.Context, in *RetrieveImagesRequest, opts ...grpc.CallOption) (*RetrieveImagesResponse, error)
	DeleteImages(ctx context.Context, in *DeleteImagesRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CloneImages(ctx context.Context, in *CloneImagesRequest, opts ...grpc.CallOption) (*CloneImagesResponse, error)
	ChangeEntityImages(ctx context.Context, in *ChangeEntityImagesRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type imagesClient struct {
	cc grpc.ClientConnInterface
}

func NewImagesClient(cc grpc.ClientConnInterface) ImagesClient {
	return &imagesClient{cc}
}

func (c *imagesClient) CreateImage(ctx context.Context, opts ...grpc.CallOption) (Images_CreateImageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Images_serviceDesc.Streams[0], "/images.Images/CreateImage", opts...)
	if err != nil {
		return nil, err
	}
	x := &imagesCreateImageClient{stream}
	return x, nil
}

type Images_CreateImageClient interface {
	Send(*CreateImageRequest) error
	CloseAndRecv() (*CreateImageResponse, error)
	grpc.ClientStream
}

type imagesCreateImageClient struct {
	grpc.ClientStream
}

func (x *imagesCreateImageClient) Send(m *CreateImageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *imagesCreateImageClient) CloseAndRecv() (*CreateImageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CreateImageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *imagesClient) RetrieveImages(ctx context.Context, in *RetrieveImagesRequest, opts ...grpc.CallOption) (*RetrieveImagesResponse, error) {
	out := new(RetrieveImagesResponse)
	err := c.cc.Invoke(ctx, "/images.Images/RetrieveImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imagesClient) DeleteImages(ctx context.Context, in *DeleteImagesRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/images.Images/DeleteImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imagesClient) CloneImages(ctx context.Context, in *CloneImagesRequest, opts ...grpc.CallOption) (*CloneImagesResponse, error) {
	out := new(CloneImagesResponse)
	err := c.cc.Invoke(ctx, "/images.Images/CloneImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imagesClient) ChangeEntityImages(ctx context.Context, in *ChangeEntityImagesRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/images.Images/ChangeEntityImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImagesServer is the server API for Images service.
type ImagesServer interface {
	CreateImage(Images_CreateImageServer) error
	RetrieveImages(context.Context, *RetrieveImagesRequest) (*RetrieveImagesResponse, error)
	DeleteImages(context.Context, *DeleteImagesRequest) (*empty.Empty, error)
	CloneImages(context.Context, *CloneImagesRequest) (*CloneImagesResponse, error)
	ChangeEntityImages(context.Context, *ChangeEntityImagesRequest) (*empty.Empty, error)
}

// UnimplementedImagesServer can be embedded to have forward compatible implementations.
type UnimplementedImagesServer struct {
}

func (*UnimplementedImagesServer) CreateImage(Images_CreateImageServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateImage not implemented")
}
func (*UnimplementedImagesServer) RetrieveImages(context.Context, *RetrieveImagesRequest) (*RetrieveImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveImages not implemented")
}
func (*UnimplementedImagesServer) DeleteImages(context.Context, *DeleteImagesRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteImages not implemented")
}
func (*UnimplementedImagesServer) CloneImages(context.Context, *CloneImagesRequest) (*CloneImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloneImages not implemented")
}
func (*UnimplementedImagesServer) ChangeEntityImages(context.Context, *ChangeEntityImagesRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeEntityImages not implemented")
}

func RegisterImagesServer(s *grpc.Server, srv ImagesServer) {
	s.RegisterService(&_Images_serviceDesc, srv)
}

func _Images_CreateImage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ImagesServer).CreateImage(&imagesCreateImageServer{stream})
}

type Images_CreateImageServer interface {
	SendAndClose(*CreateImageResponse) error
	Recv() (*CreateImageRequest, error)
	grpc.ServerStream
}

type imagesCreateImageServer struct {
	grpc.ServerStream
}

func (x *imagesCreateImageServer) SendAndClose(m *CreateImageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *imagesCreateImageServer) Recv() (*CreateImageRequest, error) {
	m := new(CreateImageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Images_RetrieveImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImagesServer).RetrieveImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/images.Images/RetrieveImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImagesServer).RetrieveImages(ctx, req.(*RetrieveImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Images_DeleteImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImagesServer).DeleteImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/images.Images/DeleteImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImagesServer).DeleteImages(ctx, req.(*DeleteImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Images_CloneImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloneImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImagesServer).CloneImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/images.Images/CloneImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImagesServer).CloneImages(ctx, req.(*CloneImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Images_ChangeEntityImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeEntityImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImagesServer).ChangeEntityImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/images.Images/ChangeEntityImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImagesServer).ChangeEntityImages(ctx, req.(*ChangeEntityImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Images_serviceDesc = grpc.ServiceDesc{
	ServiceName: "images.Images",
	HandlerType: (*ImagesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RetrieveImages",
			Handler:    _Images_RetrieveImages_Handler,
		},
		{
			MethodName: "DeleteImages",
			Handler:    _Images_DeleteImages_Handler,
		},
		{
			MethodName: "CloneImages",
			Handler:    _Images_CloneImages_Handler,
		},
		{
			MethodName: "ChangeEntityImages",
			Handler:    _Images_ChangeEntityImages_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateImage",
			Handler:       _Images_CreateImage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "images.proto",
}

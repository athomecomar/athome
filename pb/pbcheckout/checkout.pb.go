// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: checkout.proto

package pbcheckout

import (
	context "context"
	pbshared "github.com/athomecomar/athome/pb/pbshared"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AgreeShippingDispatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken     string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	AgreeementToken uint64 `protobuf:"varint,2,opt,name=agreeement_token,json=agreeementToken,proto3" json:"agreeement_token,omitempty"`
}

func (x *AgreeShippingDispatchRequest) Reset() {
	*x = AgreeShippingDispatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreeShippingDispatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreeShippingDispatchRequest) ProtoMessage() {}

func (x *AgreeShippingDispatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreeShippingDispatchRequest.ProtoReflect.Descriptor instead.
func (*AgreeShippingDispatchRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{0}
}

func (x *AgreeShippingDispatchRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AgreeShippingDispatchRequest) GetAgreeementToken() uint64 {
	if x != nil {
		return x.AgreeementToken
	}
	return 0
}

type RetrieveShippingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingId uint64    `protobuf:"varint,1,opt,name=shipping_id,json=shippingId,proto3" json:"shipping_id,omitempty"`
	Shipping   *Shipping `protobuf:"bytes,2,opt,name=shipping,proto3" json:"shipping,omitempty"`
}

func (x *RetrieveShippingResponse) Reset() {
	*x = RetrieveShippingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveShippingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveShippingResponse) ProtoMessage() {}

func (x *RetrieveShippingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveShippingResponse.ProtoReflect.Descriptor instead.
func (*RetrieveShippingResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{1}
}

func (x *RetrieveShippingResponse) GetShippingId() uint64 {
	if x != nil {
		return x.ShippingId
	}
	return 0
}

func (x *RetrieveShippingResponse) GetShipping() *Shipping {
	if x != nil {
		return x.Shipping
	}
	return nil
}

type RetrievePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	PaymentId   uint64 `protobuf:"varint,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *RetrievePaymentRequest) Reset() {
	*x = RetrievePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePaymentRequest) ProtoMessage() {}

func (x *RetrievePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePaymentRequest.ProtoReflect.Descriptor instead.
func (*RetrievePaymentRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{2}
}

func (x *RetrievePaymentRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RetrievePaymentRequest) GetPaymentId() uint64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

type RetrieveShippingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ShippingId  uint64 `protobuf:"varint,2,opt,name=shipping_id,json=shippingId,proto3" json:"shipping_id,omitempty"`
}

func (x *RetrieveShippingRequest) Reset() {
	*x = RetrieveShippingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveShippingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveShippingRequest) ProtoMessage() {}

func (x *RetrieveShippingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveShippingRequest.ProtoReflect.Descriptor instead.
func (*RetrieveShippingRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveShippingRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RetrieveShippingRequest) GetShippingId() uint64 {
	if x != nil {
		return x.ShippingId
	}
	return 0
}

type RetrieveOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	OrderId     uint64 `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *RetrieveOrderRequest) Reset() {
	*x = RetrieveOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveOrderRequest) ProtoMessage() {}

func (x *RetrieveOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveOrderRequest.ProtoReflect.Descriptor instead.
func (*RetrieveOrderRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{4}
}

func (x *RetrieveOrderRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RetrieveOrderRequest) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type ConfirmPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	PurchaseId  uint64 `protobuf:"varint,2,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"`
}

func (x *ConfirmPurchaseRequest) Reset() {
	*x = ConfirmPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPurchaseRequest) ProtoMessage() {}

func (x *ConfirmPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPurchaseRequest.ProtoReflect.Descriptor instead.
func (*ConfirmPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{5}
}

func (x *ConfirmPurchaseRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ConfirmPurchaseRequest) GetPurchaseId() uint64 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

type VerifyCVVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	CardId      uint64 `protobuf:"varint,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	Cvv         uint64 `protobuf:"varint,3,opt,name=cvv,proto3" json:"cvv,omitempty"`
}

func (x *VerifyCVVRequest) Reset() {
	*x = VerifyCVVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCVVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCVVRequest) ProtoMessage() {}

func (x *VerifyCVVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCVVRequest.ProtoReflect.Descriptor instead.
func (*VerifyCVVRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyCVVRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VerifyCVVRequest) GetCardId() uint64 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *VerifyCVVRequest) GetCvv() uint64 {
	if x != nil {
		return x.Cvv
	}
	return 0
}

type RetrieveMyCardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *RetrieveMyCardsRequest) Reset() {
	*x = RetrieveMyCardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveMyCardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveMyCardsRequest) ProtoMessage() {}

func (x *RetrieveMyCardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveMyCardsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveMyCardsRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{7}
}

func (x *RetrieveMyCardsRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type RetrieveMyCardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards map[uint64]*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RetrieveMyCardsResponse) Reset() {
	*x = RetrieveMyCardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveMyCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveMyCardsResponse) ProtoMessage() {}

func (x *RetrieveMyCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveMyCardsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveMyCardsResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{8}
}

func (x *RetrieveMyCardsResponse) GetCards() map[uint64]*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type CreateCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string     `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Card        *CardInput `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *CreateCardRequest) Reset() {
	*x = CreateCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCardRequest) ProtoMessage() {}

func (x *CreateCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCardRequest.ProtoReflect.Descriptor instead.
func (*CreateCardRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{9}
}

func (x *CreateCardRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateCardRequest) GetCard() *CardInput {
	if x != nil {
		return x.Card
	}
	return nil
}

type CreatePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string        `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Payment     *PaymentInput `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *CreatePaymentRequest) Reset() {
	*x = CreatePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequest) ProtoMessage() {}

func (x *CreatePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePaymentRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreatePaymentRequest) GetPayment() *PaymentInput {
	if x != nil {
		return x.Payment
	}
	return nil
}

type CreatePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId uint64   `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Payment   *Payment `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *CreatePaymentResponse) Reset() {
	*x = CreatePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentResponse) ProtoMessage() {}

func (x *CreatePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentResponse.ProtoReflect.Descriptor instead.
func (*CreatePaymentResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePaymentResponse) GetPaymentId() uint64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *CreatePaymentResponse) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type CreateCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId uint64 `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	Card   *Card  `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *CreateCardResponse) Reset() {
	*x = CreateCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCardResponse) ProtoMessage() {}

func (x *CreateCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCardResponse.ProtoReflect.Descriptor instead.
func (*CreateCardResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{12}
}

func (x *CreateCardResponse) GetCardId() uint64 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *CreateCardResponse) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

type UpdateStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	EntityId    uint64 `protobuf:"varint,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *UpdateStateRequest) Reset() {
	*x = UpdateStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStateRequest) ProtoMessage() {}

func (x *UpdateStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateStateRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateStateRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateStateRequest) GetEntityId() uint64 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type RetrieveReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId uint64       `protobuf:"varint,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	Reservation   *Reservation `protobuf:"bytes,2,opt,name=reservation,proto3" json:"reservation,omitempty"`
}

func (x *RetrieveReservationResponse) Reset() {
	*x = RetrieveReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveReservationResponse) ProtoMessage() {}

func (x *RetrieveReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveReservationResponse.ProtoReflect.Descriptor instead.
func (*RetrieveReservationResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{14}
}

func (x *RetrieveReservationResponse) GetReservationId() uint64 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *RetrieveReservationResponse) GetReservation() *Reservation {
	if x != nil {
		return x.Reservation
	}
	return nil
}

type RetrieveBookingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookingId uint64   `protobuf:"varint,1,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	Booking   *Booking `protobuf:"bytes,2,opt,name=booking,proto3" json:"booking,omitempty"`
}

func (x *RetrieveBookingResponse) Reset() {
	*x = RetrieveBookingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveBookingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveBookingResponse) ProtoMessage() {}

func (x *RetrieveBookingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveBookingResponse.ProtoReflect.Descriptor instead.
func (*RetrieveBookingResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{15}
}

func (x *RetrieveBookingResponse) GetBookingId() uint64 {
	if x != nil {
		return x.BookingId
	}
	return 0
}

func (x *RetrieveBookingResponse) GetBooking() *Booking {
	if x != nil {
		return x.Booking
	}
	return nil
}

type RetrievePurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseId uint64    `protobuf:"varint,1,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"`
	Purchase   *Purchase `protobuf:"bytes,2,opt,name=purchase,proto3" json:"purchase,omitempty"`
}

func (x *RetrievePurchaseResponse) Reset() {
	*x = RetrievePurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePurchaseResponse) ProtoMessage() {}

func (x *RetrievePurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePurchaseResponse.ProtoReflect.Descriptor instead.
func (*RetrievePurchaseResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{16}
}

func (x *RetrievePurchaseResponse) GetPurchaseId() uint64 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

func (x *RetrievePurchaseResponse) GetPurchase() *Purchase {
	if x != nil {
		return x.Purchase
	}
	return nil
}

type AssignDestAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken   string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	DestAddressId uint64 `protobuf:"varint,2,opt,name=dest_address_id,json=destAddressId,proto3" json:"dest_address_id,omitempty"`
}

func (x *AssignDestAddressRequest) Reset() {
	*x = AssignDestAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignDestAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignDestAddressRequest) ProtoMessage() {}

func (x *AssignDestAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignDestAddressRequest.ProtoReflect.Descriptor instead.
func (*AssignDestAddressRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{17}
}

func (x *AssignDestAddressRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AssignDestAddressRequest) GetDestAddressId() uint64 {
	if x != nil {
		return x.DestAddressId
	}
	return 0
}

type CreateShippingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                          `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Shipping    *CreateShippingRequest_Shipping `protobuf:"bytes,2,opt,name=shipping,proto3" json:"shipping,omitempty"`
}

func (x *CreateShippingRequest) Reset() {
	*x = CreateShippingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShippingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShippingRequest) ProtoMessage() {}

func (x *CreateShippingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShippingRequest.ProtoReflect.Descriptor instead.
func (*CreateShippingRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{18}
}

func (x *CreateShippingRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateShippingRequest) GetShipping() *CreateShippingRequest_Shipping {
	if x != nil {
		return x.Shipping
	}
	return nil
}

type CreateShippingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingId uint64    `protobuf:"varint,1,opt,name=shipping_id,json=shippingId,proto3" json:"shipping_id,omitempty"`
	Shipping   *Shipping `protobuf:"bytes,2,opt,name=shipping,proto3" json:"shipping,omitempty"`
}

func (x *CreateShippingResponse) Reset() {
	*x = CreateShippingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShippingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShippingResponse) ProtoMessage() {}

func (x *CreateShippingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShippingResponse.ProtoReflect.Descriptor instead.
func (*CreateShippingResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{19}
}

func (x *CreateShippingResponse) GetShippingId() uint64 {
	if x != nil {
		return x.ShippingId
	}
	return 0
}

func (x *CreateShippingResponse) GetShipping() *Shipping {
	if x != nil {
		return x.Shipping
	}
	return nil
}

type Shipping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount               float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	EventId              uint64  `protobuf:"varint,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	DurationInMinutes    uint64  `protobuf:"varint,3,opt,name=duration_in_minutes,json=durationInMinutes,proto3" json:"duration_in_minutes,omitempty"`
	SrcAddressId         uint64  `protobuf:"varint,4,opt,name=src_address_id,json=srcAddressId,proto3" json:"src_address_id,omitempty"`
	DestAddressId        uint64  `protobuf:"varint,5,opt,name=dest_address_id,json=destAddressId,proto3" json:"dest_address_id,omitempty"`
	DistanceInKilometers float64 `protobuf:"fixed64,6,opt,name=distance_in_kilometers,json=distanceInKilometers,proto3" json:"distance_in_kilometers,omitempty"`
	UserId               uint64  `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ShippingMethodId     uint64  `protobuf:"varint,8,opt,name=shipping_method_id,json=shippingMethodId,proto3" json:"shipping_method_id,omitempty"`
}

func (x *Shipping) Reset() {
	*x = Shipping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shipping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shipping) ProtoMessage() {}

func (x *Shipping) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shipping.ProtoReflect.Descriptor instead.
func (*Shipping) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{20}
}

func (x *Shipping) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Shipping) GetEventId() uint64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *Shipping) GetDurationInMinutes() uint64 {
	if x != nil {
		return x.DurationInMinutes
	}
	return 0
}

func (x *Shipping) GetSrcAddressId() uint64 {
	if x != nil {
		return x.SrcAddressId
	}
	return 0
}

func (x *Shipping) GetDestAddressId() uint64 {
	if x != nil {
		return x.DestAddressId
	}
	return 0
}

func (x *Shipping) GetDistanceInKilometers() float64 {
	if x != nil {
		return x.DistanceInKilometers
	}
	return 0
}

func (x *Shipping) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Shipping) GetShippingMethodId() uint64 {
	if x != nil {
		return x.ShippingMethodId
	}
	return 0
}

type RetrieveShippingMethodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string              `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Time        *pbshared.TimeOfDay `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Dow         string              `protobuf:"bytes,3,opt,name=dow,proto3" json:"dow,omitempty"`
}

func (x *RetrieveShippingMethodsRequest) Reset() {
	*x = RetrieveShippingMethodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveShippingMethodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveShippingMethodsRequest) ProtoMessage() {}

func (x *RetrieveShippingMethodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveShippingMethodsRequest.ProtoReflect.Descriptor instead.
func (*RetrieveShippingMethodsRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{21}
}

func (x *RetrieveShippingMethodsRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RetrieveShippingMethodsRequest) GetTime() *pbshared.TimeOfDay {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *RetrieveShippingMethodsRequest) GetDow() string {
	if x != nil {
		return x.Dow
	}
	return ""
}

type ShippingMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount            float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	DurationInMinutes uint64  `protobuf:"varint,2,opt,name=duration_in_minutes,json=durationInMinutes,proto3" json:"duration_in_minutes,omitempty"`
	UserId            uint64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title             string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ShippingMethod) Reset() {
	*x = ShippingMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingMethod) ProtoMessage() {}

func (x *ShippingMethod) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingMethod.ProtoReflect.Descriptor instead.
func (*ShippingMethod) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{22}
}

func (x *ShippingMethod) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ShippingMethod) GetDurationInMinutes() uint64 {
	if x != nil {
		return x.DurationInMinutes
	}
	return 0
}

func (x *ShippingMethod) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ShippingMethod) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type RetrieveShippingMethodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingMethods map[uint64]*ShippingMethod `protobuf:"bytes,1,rep,name=shipping_methods,json=shippingMethods,proto3" json:"shipping_methods,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RetrieveShippingMethodsResponse) Reset() {
	*x = RetrieveShippingMethodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveShippingMethodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveShippingMethodsResponse) ProtoMessage() {}

func (x *RetrieveShippingMethodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveShippingMethodsResponse.ProtoReflect.Descriptor instead.
func (*RetrieveShippingMethodsResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{23}
}

func (x *RetrieveShippingMethodsResponse) GetShippingMethods() map[uint64]*ShippingMethod {
	if x != nil {
		return x.ShippingMethods
	}
	return nil
}

type CreateReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId uint64       `protobuf:"varint,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	Reservation   *Reservation `protobuf:"bytes,2,opt,name=reservation,proto3" json:"reservation,omitempty"`
}

func (x *CreateReservationResponse) Reset() {
	*x = CreateReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationResponse) ProtoMessage() {}

func (x *CreateReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationResponse.ProtoReflect.Descriptor instead.
func (*CreateReservationResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{24}
}

func (x *CreateReservationResponse) GetReservationId() uint64 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *CreateReservationResponse) GetReservation() *Reservation {
	if x != nil {
		return x.Reservation
	}
	return nil
}

type CreatePurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseId uint64    `protobuf:"varint,1,opt,name=purchase_id,json=purchaseId,proto3" json:"purchase_id,omitempty"`
	Purchase   *Purchase `protobuf:"bytes,2,opt,name=purchase,proto3" json:"purchase,omitempty"`
}

func (x *CreatePurchaseResponse) Reset() {
	*x = CreatePurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchaseResponse) ProtoMessage() {}

func (x *CreatePurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchaseResponse.ProtoReflect.Descriptor instead.
func (*CreatePurchaseResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{25}
}

func (x *CreatePurchaseResponse) GetPurchaseId() uint64 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

func (x *CreatePurchaseResponse) GetPurchase() *Purchase {
	if x != nil {
		return x.Purchase
	}
	return nil
}

type CreateBookingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookingId uint64    `protobuf:"varint,1,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	Booking   *Purchase `protobuf:"bytes,2,opt,name=booking,proto3" json:"booking,omitempty"`
}

func (x *CreateBookingResponse) Reset() {
	*x = CreateBookingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBookingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBookingResponse) ProtoMessage() {}

func (x *CreateBookingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBookingResponse.ProtoReflect.Descriptor instead.
func (*CreateBookingResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{26}
}

func (x *CreateBookingResponse) GetBookingId() uint64 {
	if x != nil {
		return x.BookingId
	}
	return 0
}

func (x *CreateBookingResponse) GetBooking() *Purchase {
	if x != nil {
		return x.Booking
	}
	return nil
}

type CreateReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ProductId   uint64 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Days        uint64 `protobuf:"varint,3,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *CreateReservationRequest) Reset() {
	*x = CreateReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationRequest) ProtoMessage() {}

func (x *CreateReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationRequest.ProtoReflect.Descriptor instead.
func (*CreateReservationRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{27}
}

func (x *CreateReservationRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateReservationRequest) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateReservationRequest) GetDays() uint64 {
	if x != nil {
		return x.Days
	}
	return 0
}

type CreateBookingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ServiceId   uint64 `protobuf:"varint,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *CreateBookingRequest) Reset() {
	*x = CreateBookingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBookingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBookingRequest) ProtoMessage() {}

func (x *CreateBookingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBookingRequest.ProtoReflect.Descriptor instead.
func (*CreateBookingRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{28}
}

func (x *CreateBookingRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateBookingRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

type CreatePurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string            `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Items       map[uint64]uint64 `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // { product_id: quantity }
}

func (x *CreatePurchaseRequest) Reset() {
	*x = CreatePurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePurchaseRequest) ProtoMessage() {}

func (x *CreatePurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePurchaseRequest.ProtoReflect.Descriptor instead.
func (*CreatePurchaseRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{29}
}

func (x *CreatePurchaseRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreatePurchaseRequest) GetItems() map[uint64]uint64 {
	if x != nil {
		return x.Items
	}
	return nil
}

type StateMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	States []*StateMachineResponse_StateDefinition `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *StateMachineResponse) Reset() {
	*x = StateMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateMachineResponse) ProtoMessage() {}

func (x *StateMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateMachineResponse.ProtoReflect.Descriptor instead.
func (*StateMachineResponse) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{30}
}

func (x *StateMachineResponse) GetStates() []*StateMachineResponse_StateDefinition {
	if x != nil {
		return x.States
	}
	return nil
}

type Reservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint64            `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp  *Timestamp        `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Items      map[uint64]uint64 `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // { product_id: quantity }
	Days       uint64            `protobuf:"varint,4,opt,name=days,proto3" json:"days,omitempty"`
	Amount     float64           `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"` // calculated at req time
	MerchantId uint64            `protobuf:"varint,6,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
}

func (x *Reservation) Reset() {
	*x = Reservation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reservation) ProtoMessage() {}

func (x *Reservation) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reservation.ProtoReflect.Descriptor instead.
func (*Reservation) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{31}
}

func (x *Reservation) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Reservation) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Reservation) GetItems() map[uint64]uint64 {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Reservation) GetDays() uint64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *Reservation) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Reservation) GetMerchantId() uint64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

type Purchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               uint64            `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp            *Timestamp        `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Items                map[uint64]uint64 `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // { product_id: quantity }
	Amount               float64           `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`                                                                                       // calculated at req time
	SrcAddressId         uint64            `protobuf:"varint,5,opt,name=src_address_id,json=srcAddressId,proto3" json:"src_address_id,omitempty"`
	DestAddressId        uint64            `protobuf:"varint,6,opt,name=dest_address_id,json=destAddressId,proto3" json:"dest_address_id,omitempty"`
	MerchantId           uint64            `protobuf:"varint,7,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	DistanceInKilometers float64           `protobuf:"fixed64,8,opt,name=distance_in_kilometers,json=distanceInKilometers,proto3" json:"distance_in_kilometers,omitempty"`
	ShippingId           uint64            `protobuf:"varint,9,opt,name=shipping_id,json=shippingId,proto3" json:"shipping_id,omitempty"`
}

func (x *Purchase) Reset() {
	*x = Purchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Purchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Purchase) ProtoMessage() {}

func (x *Purchase) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Purchase.ProtoReflect.Descriptor instead.
func (*Purchase) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{32}
}

func (x *Purchase) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Purchase) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Purchase) GetItems() map[uint64]uint64 {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Purchase) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Purchase) GetSrcAddressId() uint64 {
	if x != nil {
		return x.SrcAddressId
	}
	return 0
}

func (x *Purchase) GetDestAddressId() uint64 {
	if x != nil {
		return x.DestAddressId
	}
	return 0
}

func (x *Purchase) GetMerchantId() uint64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *Purchase) GetDistanceInKilometers() float64 {
	if x != nil {
		return x.DistanceInKilometers
	}
	return 0
}

func (x *Purchase) GetShippingId() uint64 {
	if x != nil {
		return x.ShippingId
	}
	return 0
}

type Booking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint64     `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp *Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ServiceId uint64     `protobuf:"varint,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Amount    float64    `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"` // calculated at req time
}

func (x *Booking) Reset() {
	*x = Booking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Booking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Booking) ProtoMessage() {}

func (x *Booking) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Booking.ProtoReflect.Descriptor instead.
func (*Booking) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{33}
}

func (x *Booking) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Booking) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Booking) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *Booking) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type RetrieveCurrentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *RetrieveCurrentRequest) Reset() {
	*x = RetrieveCurrentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCurrentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCurrentRequest) ProtoMessage() {}

func (x *RetrieveCurrentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCurrentRequest.ProtoReflect.Descriptor instead.
func (*RetrieveCurrentRequest) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{34}
}

func (x *RetrieveCurrentRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type StateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Stage     int64                `protobuf:"varint,3,opt,name=stage,proto3" json:"stage,omitempty"`
}

func (x *StateChange) Reset() {
	*x = StateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateChange) ProtoMessage() {}

func (x *StateChange) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateChange.ProtoReflect.Descriptor instead.
func (*StateChange) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{35}
}

func (x *StateChange) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StateChange) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *StateChange) GetStage() int64 {
	if x != nil {
		return x.Stage
	}
	return 0
}

type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{36}
}

func (x *Timestamp) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Timestamp) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PaymentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// amount will be inferred through payment_method_id:installments
	PaymentMethodId uint64           `protobuf:"varint,1,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	Installments    uint64           `protobuf:"varint,2,opt,name=installments,proto3" json:"installments,omitempty"`
	CardId          uint64           `protobuf:"varint,3,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	Order           *pbshared.Entity `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *PaymentInput) Reset() {
	*x = PaymentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentInput) ProtoMessage() {}

func (x *PaymentInput) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentInput.ProtoReflect.Descriptor instead.
func (*PaymentInput) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{37}
}

func (x *PaymentInput) GetPaymentMethodId() uint64 {
	if x != nil {
		return x.PaymentMethodId
	}
	return 0
}

func (x *PaymentInput) GetInstallments() uint64 {
	if x != nil {
		return x.Installments
	}
	return 0
}

func (x *PaymentInput) GetCardId() uint64 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *PaymentInput) GetOrder() *pbshared.Entity {
	if x != nil {
		return x.Order
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          uint64     `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount          float64    `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp       *Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PaymentMethodId uint64     `protobuf:"varint,6,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	Installments    uint64     `protobuf:"varint,7,opt,name=installments,proto3" json:"installments,omitempty"`
	CardId          uint64     `protobuf:"varint,8,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{38}
}

func (x *Payment) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Payment) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payment) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Payment) GetPaymentMethodId() uint64 {
	if x != nil {
		return x.PaymentMethodId
	}
	return 0
}

func (x *Payment) GetInstallments() uint64 {
	if x != nil {
		return x.Installments
	}
	return 0
}

func (x *Payment) GetCardId() uint64 {
	if x != nil {
		return x.CardId
	}
	return 0
}

type CardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number      uint64      `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Cvv         uint64      `protobuf:"varint,2,opt,name=cvv,proto3" json:"cvv,omitempty"`
	ExpiryMonth uint64      `protobuf:"varint,3,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`
	ExpiryYear  uint64      `protobuf:"varint,4,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`
	Holder      *CardHolder `protobuf:"bytes,5,opt,name=holder,proto3" json:"holder,omitempty"`
}

func (x *CardInput) Reset() {
	*x = CardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardInput) ProtoMessage() {}

func (x *CardInput) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardInput.ProtoReflect.Descriptor instead.
func (*CardInput) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{39}
}

func (x *CardInput) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CardInput) GetCvv() uint64 {
	if x != nil {
		return x.Cvv
	}
	return 0
}

func (x *CardInput) GetExpiryMonth() uint64 {
	if x != nil {
		return x.ExpiryMonth
	}
	return 0
}

func (x *CardInput) GetExpiryYear() uint64 {
	if x != nil {
		return x.ExpiryYear
	}
	return 0
}

func (x *CardInput) GetHolder() *CardHolder {
	if x != nil {
		return x.Holder
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastFourDigits uint64      `protobuf:"varint,1,opt,name=last_four_digits,json=lastFourDigits,proto3" json:"last_four_digits,omitempty"`
	ExpiryMonth    uint64      `protobuf:"varint,2,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`
	ExpiryYear     uint64      `protobuf:"varint,3,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`
	Holder         *CardHolder `protobuf:"bytes,4,opt,name=holder,proto3" json:"holder,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{40}
}

func (x *Card) GetLastFourDigits() uint64 {
	if x != nil {
		return x.LastFourDigits
	}
	return 0
}

func (x *Card) GetExpiryMonth() uint64 {
	if x != nil {
		return x.ExpiryMonth
	}
	return 0
}

func (x *Card) GetExpiryYear() uint64 {
	if x != nil {
		return x.ExpiryYear
	}
	return 0
}

func (x *Card) GetHolder() *CardHolder {
	if x != nil {
		return x.Holder
	}
	return nil
}

type CardHolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dni  uint64 `protobuf:"varint,1,opt,name=dni,proto3" json:"dni,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CardHolder) Reset() {
	*x = CardHolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardHolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardHolder) ProtoMessage() {}

func (x *CardHolder) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardHolder.ProtoReflect.Descriptor instead.
func (*CardHolder) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{41}
}

func (x *CardHolder) GetDni() uint64 {
	if x != nil {
		return x.Dni
	}
	return 0
}

func (x *CardHolder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateShippingRequest_Shipping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingMethodId uint64              `protobuf:"varint,1,opt,name=shipping_method_id,json=shippingMethodId,proto3" json:"shipping_method_id,omitempty"`
	Time             *pbshared.TimeOfDay `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Dow              string              `protobuf:"bytes,3,opt,name=dow,proto3" json:"dow,omitempty"`
}

func (x *CreateShippingRequest_Shipping) Reset() {
	*x = CreateShippingRequest_Shipping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShippingRequest_Shipping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShippingRequest_Shipping) ProtoMessage() {}

func (x *CreateShippingRequest_Shipping) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShippingRequest_Shipping.ProtoReflect.Descriptor instead.
func (*CreateShippingRequest_Shipping) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{18, 0}
}

func (x *CreateShippingRequest_Shipping) GetShippingMethodId() uint64 {
	if x != nil {
		return x.ShippingMethodId
	}
	return 0
}

func (x *CreateShippingRequest_Shipping) GetTime() *pbshared.TimeOfDay {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *CreateShippingRequest_Shipping) GetDow() string {
	if x != nil {
		return x.Dow
	}
	return ""
}

type StateMachineResponse_StateDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage       int64  `protobuf:"varint,1,opt,name=stage,proto3" json:"stage,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *StateMachineResponse_StateDefinition) Reset() {
	*x = StateMachineResponse_StateDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkout_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateMachineResponse_StateDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateMachineResponse_StateDefinition) ProtoMessage() {}

func (x *StateMachineResponse_StateDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_checkout_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateMachineResponse_StateDefinition.ProtoReflect.Descriptor instead.
func (*StateMachineResponse_StateDefinition) Descriptor() ([]byte, []int) {
	return file_checkout_proto_rawDescGZIP(), []int{30, 0}
}

func (x *StateMachineResponse_StateDefinition) GetStage() int64 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *StateMachineResponse_StateDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StateMachineResponse_StateDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_checkout_proto protoreflect.FileDescriptor

var file_checkout_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x1c, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6b, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x22, 0x5a, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x5d, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22,
	0x54, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x56, 0x56,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x63, 0x76, 0x76, 0x22, 0x3b, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xa7, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x1a, 0x48, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5f, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0x6b, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x51, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61,
	0x72, 0x64, 0x22, 0x54, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x6b,
	0x0a, 0x18, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x18, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65,
	0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x22, 0xbb, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x44, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0xb8, 0x01, 0x0a, 0x08, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61,
	0x79, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x03, 0x64, 0x6f, 0x77, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x45, 0xfa, 0x42, 0x42, 0x72, 0x40, 0x52, 0x06, 0x6d, 0x6f, 0x6e,
	0x64, 0x61, 0x79, 0x52, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x52, 0x09, 0x77, 0x65,
	0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x52, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61,
	0x79, 0x52, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72,
	0x64, 0x61, 0x79, 0x52, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x52, 0x03, 0x64, 0x6f, 0x77,
	0x22, 0x69, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x22, 0xb8, 0x02, 0x0a, 0x08,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x73,
	0x72, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x72, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6b, 0x69, 0x6c, 0x6f, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x4b, 0x69, 0x6c, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x03, 0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x45, 0xfa, 0x42, 0x42, 0x72, 0x40, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x52,
	0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73,
	0x64, 0x61, 0x79, 0x52, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x52, 0x06, 0x66,
	0x72, 0x69, 0x64, 0x61, 0x79, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x52,
	0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x52, 0x03, 0x64, 0x6f, 0x77, 0x22, 0x87, 0x01, 0x0a,
	0x0e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x10, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x1a, 0x5c, 0x0a, 0x14, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x7b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x69, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x22, 0x70, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64,
	0x61, 0x79, 0x73, 0x22, 0x58, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xb6, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x38, 0x0a, 0x0a,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x5d, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x31, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xa3, 0x03, 0x0a, 0x08, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x72, 0x63, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x73, 0x72, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6b, 0x69, 0x6c, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x4b, 0x69, 0x6c, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x1a, 0x38, 0x0a,
	0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8c, 0x01, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x0c,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76,
	0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x76, 0x76, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x59, 0x65, 0x61, 0x72,
	0x12, 0x2c, 0x0a, 0x06, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0xa2,
	0x01, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x66, 0x6f, 0x75, 0x72, 0x5f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x72, 0x44, 0x69, 0x67, 0x69, 0x74,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x59, 0x65, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6e, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x64, 0x6e, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xef, 0x01, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x1b, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x09,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x56, 0x56, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x56, 0x56, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xca, 0x04, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5e, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x04, 0x50, 0x72, 0x65, 0x76, 0x12,
	0x1c, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x04, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x1c,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12,
	0x1c, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa6, 0x04, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x04,
	0x50, 0x72, 0x65, 0x76, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x04, 0x4e, 0x65, 0x78, 0x74, 0x12,
	0x1c, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1c, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32,
	0xa1, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x20, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x00, 0x32, 0xe8, 0x03, 0x0a, 0x09, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x59, 0x0a, 0x15, 0x41, 0x67, 0x72, 0x65, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1f,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12,
	0x21, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x04, 0x50, 0x72, 0x65, 0x76,
	0x12, 0x1c, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x04, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xcf,
	0x06, 0x0a, 0x09, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1f,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x73,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x20, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x04, 0x50, 0x72,
	0x65, 0x76, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x04, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x1c,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1c, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x70, 0x62, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_checkout_proto_rawDescOnce sync.Once
	file_checkout_proto_rawDescData = file_checkout_proto_rawDesc
)

func file_checkout_proto_rawDescGZIP() []byte {
	file_checkout_proto_rawDescOnce.Do(func() {
		file_checkout_proto_rawDescData = protoimpl.X.CompressGZIP(file_checkout_proto_rawDescData)
	})
	return file_checkout_proto_rawDescData
}

var file_checkout_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_checkout_proto_goTypes = []interface{}{
	(*AgreeShippingDispatchRequest)(nil),         // 0: checkout.AgreeShippingDispatchRequest
	(*RetrieveShippingResponse)(nil),             // 1: checkout.RetrieveShippingResponse
	(*RetrievePaymentRequest)(nil),               // 2: checkout.RetrievePaymentRequest
	(*RetrieveShippingRequest)(nil),              // 3: checkout.RetrieveShippingRequest
	(*RetrieveOrderRequest)(nil),                 // 4: checkout.RetrieveOrderRequest
	(*ConfirmPurchaseRequest)(nil),               // 5: checkout.ConfirmPurchaseRequest
	(*VerifyCVVRequest)(nil),                     // 6: checkout.VerifyCVVRequest
	(*RetrieveMyCardsRequest)(nil),               // 7: checkout.RetrieveMyCardsRequest
	(*RetrieveMyCardsResponse)(nil),              // 8: checkout.RetrieveMyCardsResponse
	(*CreateCardRequest)(nil),                    // 9: checkout.CreateCardRequest
	(*CreatePaymentRequest)(nil),                 // 10: checkout.CreatePaymentRequest
	(*CreatePaymentResponse)(nil),                // 11: checkout.CreatePaymentResponse
	(*CreateCardResponse)(nil),                   // 12: checkout.CreateCardResponse
	(*UpdateStateRequest)(nil),                   // 13: checkout.UpdateStateRequest
	(*RetrieveReservationResponse)(nil),          // 14: checkout.RetrieveReservationResponse
	(*RetrieveBookingResponse)(nil),              // 15: checkout.RetrieveBookingResponse
	(*RetrievePurchaseResponse)(nil),             // 16: checkout.RetrievePurchaseResponse
	(*AssignDestAddressRequest)(nil),             // 17: checkout.AssignDestAddressRequest
	(*CreateShippingRequest)(nil),                // 18: checkout.CreateShippingRequest
	(*CreateShippingResponse)(nil),               // 19: checkout.CreateShippingResponse
	(*Shipping)(nil),                             // 20: checkout.Shipping
	(*RetrieveShippingMethodsRequest)(nil),       // 21: checkout.RetrieveShippingMethodsRequest
	(*ShippingMethod)(nil),                       // 22: checkout.ShippingMethod
	(*RetrieveShippingMethodsResponse)(nil),      // 23: checkout.RetrieveShippingMethodsResponse
	(*CreateReservationResponse)(nil),            // 24: checkout.CreateReservationResponse
	(*CreatePurchaseResponse)(nil),               // 25: checkout.CreatePurchaseResponse
	(*CreateBookingResponse)(nil),                // 26: checkout.CreateBookingResponse
	(*CreateReservationRequest)(nil),             // 27: checkout.CreateReservationRequest
	(*CreateBookingRequest)(nil),                 // 28: checkout.CreateBookingRequest
	(*CreatePurchaseRequest)(nil),                // 29: checkout.CreatePurchaseRequest
	(*StateMachineResponse)(nil),                 // 30: checkout.StateMachineResponse
	(*Reservation)(nil),                          // 31: checkout.Reservation
	(*Purchase)(nil),                             // 32: checkout.Purchase
	(*Booking)(nil),                              // 33: checkout.Booking
	(*RetrieveCurrentRequest)(nil),               // 34: checkout.RetrieveCurrentRequest
	(*StateChange)(nil),                          // 35: checkout.StateChange
	(*Timestamp)(nil),                            // 36: checkout.Timestamp
	(*PaymentInput)(nil),                         // 37: checkout.PaymentInput
	(*Payment)(nil),                              // 38: checkout.Payment
	(*CardInput)(nil),                            // 39: checkout.CardInput
	(*Card)(nil),                                 // 40: checkout.Card
	(*CardHolder)(nil),                           // 41: checkout.CardHolder
	nil,                                          // 42: checkout.RetrieveMyCardsResponse.CardsEntry
	(*CreateShippingRequest_Shipping)(nil),       // 43: checkout.CreateShippingRequest.Shipping
	nil,                                          // 44: checkout.RetrieveShippingMethodsResponse.ShippingMethodsEntry
	nil,                                          // 45: checkout.CreatePurchaseRequest.ItemsEntry
	(*StateMachineResponse_StateDefinition)(nil), // 46: checkout.StateMachineResponse.StateDefinition
	nil,                         // 47: checkout.Reservation.ItemsEntry
	nil,                         // 48: checkout.Purchase.ItemsEntry
	(*pbshared.TimeOfDay)(nil),  // 49: shared.TimeOfDay
	(*timestamp.Timestamp)(nil), // 50: google.protobuf.Timestamp
	(*pbshared.Entity)(nil),     // 51: shared.Entity
	(*empty.Empty)(nil),         // 52: google.protobuf.Empty
}
var file_checkout_proto_depIdxs = []int32{
	20, // 0: checkout.RetrieveShippingResponse.shipping:type_name -> checkout.Shipping
	42, // 1: checkout.RetrieveMyCardsResponse.cards:type_name -> checkout.RetrieveMyCardsResponse.CardsEntry
	39, // 2: checkout.CreateCardRequest.card:type_name -> checkout.CardInput
	37, // 3: checkout.CreatePaymentRequest.payment:type_name -> checkout.PaymentInput
	38, // 4: checkout.CreatePaymentResponse.payment:type_name -> checkout.Payment
	40, // 5: checkout.CreateCardResponse.card:type_name -> checkout.Card
	31, // 6: checkout.RetrieveReservationResponse.reservation:type_name -> checkout.Reservation
	33, // 7: checkout.RetrieveBookingResponse.booking:type_name -> checkout.Booking
	32, // 8: checkout.RetrievePurchaseResponse.purchase:type_name -> checkout.Purchase
	43, // 9: checkout.CreateShippingRequest.shipping:type_name -> checkout.CreateShippingRequest.Shipping
	20, // 10: checkout.CreateShippingResponse.shipping:type_name -> checkout.Shipping
	49, // 11: checkout.RetrieveShippingMethodsRequest.time:type_name -> shared.TimeOfDay
	44, // 12: checkout.RetrieveShippingMethodsResponse.shipping_methods:type_name -> checkout.RetrieveShippingMethodsResponse.ShippingMethodsEntry
	31, // 13: checkout.CreateReservationResponse.reservation:type_name -> checkout.Reservation
	32, // 14: checkout.CreatePurchaseResponse.purchase:type_name -> checkout.Purchase
	32, // 15: checkout.CreateBookingResponse.booking:type_name -> checkout.Purchase
	45, // 16: checkout.CreatePurchaseRequest.items:type_name -> checkout.CreatePurchaseRequest.ItemsEntry
	46, // 17: checkout.StateMachineResponse.states:type_name -> checkout.StateMachineResponse.StateDefinition
	36, // 18: checkout.Reservation.timestamp:type_name -> checkout.Timestamp
	47, // 19: checkout.Reservation.items:type_name -> checkout.Reservation.ItemsEntry
	36, // 20: checkout.Purchase.timestamp:type_name -> checkout.Timestamp
	48, // 21: checkout.Purchase.items:type_name -> checkout.Purchase.ItemsEntry
	36, // 22: checkout.Booking.timestamp:type_name -> checkout.Timestamp
	50, // 23: checkout.StateChange.created_at:type_name -> google.protobuf.Timestamp
	50, // 24: checkout.Timestamp.created_at:type_name -> google.protobuf.Timestamp
	50, // 25: checkout.Timestamp.updated_at:type_name -> google.protobuf.Timestamp
	51, // 26: checkout.PaymentInput.order:type_name -> shared.Entity
	36, // 27: checkout.Payment.timestamp:type_name -> checkout.Timestamp
	41, // 28: checkout.CardInput.holder:type_name -> checkout.CardHolder
	41, // 29: checkout.Card.holder:type_name -> checkout.CardHolder
	40, // 30: checkout.RetrieveMyCardsResponse.CardsEntry.value:type_name -> checkout.Card
	49, // 31: checkout.CreateShippingRequest.Shipping.time:type_name -> shared.TimeOfDay
	22, // 32: checkout.RetrieveShippingMethodsResponse.ShippingMethodsEntry.value:type_name -> checkout.ShippingMethod
	9,  // 33: checkout.Cards.CreateCard:input_type -> checkout.CreateCardRequest
	6,  // 34: checkout.Cards.VerifyCVV:input_type -> checkout.VerifyCVVRequest
	7,  // 35: checkout.Cards.RetrieveMyCards:input_type -> checkout.RetrieveMyCardsRequest
	27, // 36: checkout.Reservations.CreateReservation:input_type -> checkout.CreateReservationRequest
	4,  // 37: checkout.Reservations.Retrieve:input_type -> checkout.RetrieveOrderRequest
	34, // 38: checkout.Reservations.RetrieveCurrent:input_type -> checkout.RetrieveCurrentRequest
	52, // 39: checkout.Reservations.StateMachine:input_type -> google.protobuf.Empty
	13, // 40: checkout.Reservations.Prev:input_type -> checkout.UpdateStateRequest
	13, // 41: checkout.Reservations.Next:input_type -> checkout.UpdateStateRequest
	13, // 42: checkout.Reservations.Cancel:input_type -> checkout.UpdateStateRequest
	28, // 43: checkout.Bookings.CreateBooking:input_type -> checkout.CreateBookingRequest
	4,  // 44: checkout.Bookings.Retrieve:input_type -> checkout.RetrieveOrderRequest
	34, // 45: checkout.Bookings.RetrieveCurrent:input_type -> checkout.RetrieveCurrentRequest
	52, // 46: checkout.Bookings.StateMachine:input_type -> google.protobuf.Empty
	13, // 47: checkout.Bookings.Prev:input_type -> checkout.UpdateStateRequest
	13, // 48: checkout.Bookings.Next:input_type -> checkout.UpdateStateRequest
	13, // 49: checkout.Bookings.Cancel:input_type -> checkout.UpdateStateRequest
	10, // 50: checkout.Payments.CreatePayment:input_type -> checkout.CreatePaymentRequest
	2,  // 51: checkout.Payments.Retrieve:input_type -> checkout.RetrievePaymentRequest
	0,  // 52: checkout.Shippings.AgreeShippingDispatch:input_type -> checkout.AgreeShippingDispatchRequest
	18, // 53: checkout.Shippings.CreateShipping:input_type -> checkout.CreateShippingRequest
	3,  // 54: checkout.Shippings.Retrieve:input_type -> checkout.RetrieveShippingRequest
	13, // 55: checkout.Shippings.Prev:input_type -> checkout.UpdateStateRequest
	13, // 56: checkout.Shippings.Next:input_type -> checkout.UpdateStateRequest
	13, // 57: checkout.Shippings.Cancel:input_type -> checkout.UpdateStateRequest
	29, // 58: checkout.Purchases.CreatePurchase:input_type -> checkout.CreatePurchaseRequest
	17, // 59: checkout.Purchases.AssignDestAddress:input_type -> checkout.AssignDestAddressRequest
	4,  // 60: checkout.Purchases.Retrieve:input_type -> checkout.RetrieveOrderRequest
	21, // 61: checkout.Purchases.RetrieveShippingMethods:input_type -> checkout.RetrieveShippingMethodsRequest
	5,  // 62: checkout.Purchases.ConfirmPurchase:input_type -> checkout.ConfirmPurchaseRequest
	34, // 63: checkout.Purchases.RetrieveCurrent:input_type -> checkout.RetrieveCurrentRequest
	52, // 64: checkout.Purchases.StateMachine:input_type -> google.protobuf.Empty
	13, // 65: checkout.Purchases.Prev:input_type -> checkout.UpdateStateRequest
	13, // 66: checkout.Purchases.Next:input_type -> checkout.UpdateStateRequest
	13, // 67: checkout.Purchases.Cancel:input_type -> checkout.UpdateStateRequest
	12, // 68: checkout.Cards.CreateCard:output_type -> checkout.CreateCardResponse
	52, // 69: checkout.Cards.VerifyCVV:output_type -> google.protobuf.Empty
	8,  // 70: checkout.Cards.RetrieveMyCards:output_type -> checkout.RetrieveMyCardsResponse
	24, // 71: checkout.Reservations.CreateReservation:output_type -> checkout.CreateReservationResponse
	31, // 72: checkout.Reservations.Retrieve:output_type -> checkout.Reservation
	14, // 73: checkout.Reservations.RetrieveCurrent:output_type -> checkout.RetrieveReservationResponse
	30, // 74: checkout.Reservations.StateMachine:output_type -> checkout.StateMachineResponse
	14, // 75: checkout.Reservations.Prev:output_type -> checkout.RetrieveReservationResponse
	14, // 76: checkout.Reservations.Next:output_type -> checkout.RetrieveReservationResponse
	14, // 77: checkout.Reservations.Cancel:output_type -> checkout.RetrieveReservationResponse
	26, // 78: checkout.Bookings.CreateBooking:output_type -> checkout.CreateBookingResponse
	33, // 79: checkout.Bookings.Retrieve:output_type -> checkout.Booking
	15, // 80: checkout.Bookings.RetrieveCurrent:output_type -> checkout.RetrieveBookingResponse
	30, // 81: checkout.Bookings.StateMachine:output_type -> checkout.StateMachineResponse
	15, // 82: checkout.Bookings.Prev:output_type -> checkout.RetrieveBookingResponse
	15, // 83: checkout.Bookings.Next:output_type -> checkout.RetrieveBookingResponse
	15, // 84: checkout.Bookings.Cancel:output_type -> checkout.RetrieveBookingResponse
	11, // 85: checkout.Payments.CreatePayment:output_type -> checkout.CreatePaymentResponse
	38, // 86: checkout.Payments.Retrieve:output_type -> checkout.Payment
	52, // 87: checkout.Shippings.AgreeShippingDispatch:output_type -> google.protobuf.Empty
	19, // 88: checkout.Shippings.CreateShipping:output_type -> checkout.CreateShippingResponse
	20, // 89: checkout.Shippings.Retrieve:output_type -> checkout.Shipping
	1,  // 90: checkout.Shippings.Prev:output_type -> checkout.RetrieveShippingResponse
	1,  // 91: checkout.Shippings.Next:output_type -> checkout.RetrieveShippingResponse
	1,  // 92: checkout.Shippings.Cancel:output_type -> checkout.RetrieveShippingResponse
	25, // 93: checkout.Purchases.CreatePurchase:output_type -> checkout.CreatePurchaseResponse
	52, // 94: checkout.Purchases.AssignDestAddress:output_type -> google.protobuf.Empty
	32, // 95: checkout.Purchases.Retrieve:output_type -> checkout.Purchase
	23, // 96: checkout.Purchases.RetrieveShippingMethods:output_type -> checkout.RetrieveShippingMethodsResponse
	16, // 97: checkout.Purchases.ConfirmPurchase:output_type -> checkout.RetrievePurchaseResponse
	16, // 98: checkout.Purchases.RetrieveCurrent:output_type -> checkout.RetrievePurchaseResponse
	30, // 99: checkout.Purchases.StateMachine:output_type -> checkout.StateMachineResponse
	16, // 100: checkout.Purchases.Prev:output_type -> checkout.RetrievePurchaseResponse
	16, // 101: checkout.Purchases.Next:output_type -> checkout.RetrievePurchaseResponse
	16, // 102: checkout.Purchases.Cancel:output_type -> checkout.RetrievePurchaseResponse
	68, // [68:103] is the sub-list for method output_type
	33, // [33:68] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_checkout_proto_init() }
func file_checkout_proto_init() {
	if File_checkout_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_checkout_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreeShippingDispatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveShippingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveShippingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCVVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveMyCardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveMyCardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveBookingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignDestAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShippingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShippingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shipping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveShippingMethodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveShippingMethodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBookingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBookingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reservation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Purchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Booking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCurrentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardHolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShippingRequest_Shipping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkout_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateMachineResponse_StateDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checkout_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_checkout_proto_goTypes,
		DependencyIndexes: file_checkout_proto_depIdxs,
		MessageInfos:      file_checkout_proto_msgTypes,
	}.Build()
	File_checkout_proto = out.File
	file_checkout_proto_rawDesc = nil
	file_checkout_proto_goTypes = nil
	file_checkout_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CardsClient is the client API for Cards service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CardsClient interface {
	CreateCard(ctx context.Context, in *CreateCardRequest, opts ...grpc.CallOption) (*CreateCardResponse, error)
	VerifyCVV(ctx context.Context, in *VerifyCVVRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	RetrieveMyCards(ctx context.Context, in *RetrieveMyCardsRequest, opts ...grpc.CallOption) (*RetrieveMyCardsResponse, error)
}

type cardsClient struct {
	cc grpc.ClientConnInterface
}

func NewCardsClient(cc grpc.ClientConnInterface) CardsClient {
	return &cardsClient{cc}
}

func (c *cardsClient) CreateCard(ctx context.Context, in *CreateCardRequest, opts ...grpc.CallOption) (*CreateCardResponse, error) {
	out := new(CreateCardResponse)
	err := c.cc.Invoke(ctx, "/checkout.Cards/CreateCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardsClient) VerifyCVV(ctx context.Context, in *VerifyCVVRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/checkout.Cards/VerifyCVV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardsClient) RetrieveMyCards(ctx context.Context, in *RetrieveMyCardsRequest, opts ...grpc.CallOption) (*RetrieveMyCardsResponse, error) {
	out := new(RetrieveMyCardsResponse)
	err := c.cc.Invoke(ctx, "/checkout.Cards/RetrieveMyCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardsServer is the server API for Cards service.
type CardsServer interface {
	CreateCard(context.Context, *CreateCardRequest) (*CreateCardResponse, error)
	VerifyCVV(context.Context, *VerifyCVVRequest) (*empty.Empty, error)
	RetrieveMyCards(context.Context, *RetrieveMyCardsRequest) (*RetrieveMyCardsResponse, error)
}

// UnimplementedCardsServer can be embedded to have forward compatible implementations.
type UnimplementedCardsServer struct {
}

func (*UnimplementedCardsServer) CreateCard(context.Context, *CreateCardRequest) (*CreateCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCard not implemented")
}
func (*UnimplementedCardsServer) VerifyCVV(context.Context, *VerifyCVVRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyCVV not implemented")
}
func (*UnimplementedCardsServer) RetrieveMyCards(context.Context, *RetrieveMyCardsRequest) (*RetrieveMyCardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveMyCards not implemented")
}

func RegisterCardsServer(s *grpc.Server, srv CardsServer) {
	s.RegisterService(&_Cards_serviceDesc, srv)
}

func _Cards_CreateCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardsServer).CreateCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Cards/CreateCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardsServer).CreateCard(ctx, req.(*CreateCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cards_VerifyCVV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyCVVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardsServer).VerifyCVV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Cards/VerifyCVV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardsServer).VerifyCVV(ctx, req.(*VerifyCVVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cards_RetrieveMyCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveMyCardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardsServer).RetrieveMyCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Cards/RetrieveMyCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardsServer).RetrieveMyCards(ctx, req.(*RetrieveMyCardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cards_serviceDesc = grpc.ServiceDesc{
	ServiceName: "checkout.Cards",
	HandlerType: (*CardsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCard",
			Handler:    _Cards_CreateCard_Handler,
		},
		{
			MethodName: "VerifyCVV",
			Handler:    _Cards_VerifyCVV_Handler,
		},
		{
			MethodName: "RetrieveMyCards",
			Handler:    _Cards_RetrieveMyCards_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checkout.proto",
}

// ReservationsClient is the client API for Reservations service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReservationsClient interface {
	CreateReservation(ctx context.Context, in *CreateReservationRequest, opts ...grpc.CallOption) (*CreateReservationResponse, error)
	Retrieve(ctx context.Context, in *RetrieveOrderRequest, opts ...grpc.CallOption) (*Reservation, error)
	RetrieveCurrent(ctx context.Context, in *RetrieveCurrentRequest, opts ...grpc.CallOption) (*RetrieveReservationResponse, error)
	StateMachine(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StateMachineResponse, error)
	Prev(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveReservationResponse, error)
	Next(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveReservationResponse, error)
	Cancel(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveReservationResponse, error)
}

type reservationsClient struct {
	cc grpc.ClientConnInterface
}

func NewReservationsClient(cc grpc.ClientConnInterface) ReservationsClient {
	return &reservationsClient{cc}
}

func (c *reservationsClient) CreateReservation(ctx context.Context, in *CreateReservationRequest, opts ...grpc.CallOption) (*CreateReservationResponse, error) {
	out := new(CreateReservationResponse)
	err := c.cc.Invoke(ctx, "/checkout.Reservations/CreateReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reservationsClient) Retrieve(ctx context.Context, in *RetrieveOrderRequest, opts ...grpc.CallOption) (*Reservation, error) {
	out := new(Reservation)
	err := c.cc.Invoke(ctx, "/checkout.Reservations/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reservationsClient) RetrieveCurrent(ctx context.Context, in *RetrieveCurrentRequest, opts ...grpc.CallOption) (*RetrieveReservationResponse, error) {
	out := new(RetrieveReservationResponse)
	err := c.cc.Invoke(ctx, "/checkout.Reservations/RetrieveCurrent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reservationsClient) StateMachine(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StateMachineResponse, error) {
	out := new(StateMachineResponse)
	err := c.cc.Invoke(ctx, "/checkout.Reservations/StateMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reservationsClient) Prev(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveReservationResponse, error) {
	out := new(RetrieveReservationResponse)
	err := c.cc.Invoke(ctx, "/checkout.Reservations/Prev", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reservationsClient) Next(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveReservationResponse, error) {
	out := new(RetrieveReservationResponse)
	err := c.cc.Invoke(ctx, "/checkout.Reservations/Next", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reservationsClient) Cancel(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveReservationResponse, error) {
	out := new(RetrieveReservationResponse)
	err := c.cc.Invoke(ctx, "/checkout.Reservations/Cancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReservationsServer is the server API for Reservations service.
type ReservationsServer interface {
	CreateReservation(context.Context, *CreateReservationRequest) (*CreateReservationResponse, error)
	Retrieve(context.Context, *RetrieveOrderRequest) (*Reservation, error)
	RetrieveCurrent(context.Context, *RetrieveCurrentRequest) (*RetrieveReservationResponse, error)
	StateMachine(context.Context, *empty.Empty) (*StateMachineResponse, error)
	Prev(context.Context, *UpdateStateRequest) (*RetrieveReservationResponse, error)
	Next(context.Context, *UpdateStateRequest) (*RetrieveReservationResponse, error)
	Cancel(context.Context, *UpdateStateRequest) (*RetrieveReservationResponse, error)
}

// UnimplementedReservationsServer can be embedded to have forward compatible implementations.
type UnimplementedReservationsServer struct {
}

func (*UnimplementedReservationsServer) CreateReservation(context.Context, *CreateReservationRequest) (*CreateReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReservation not implemented")
}
func (*UnimplementedReservationsServer) Retrieve(context.Context, *RetrieveOrderRequest) (*Reservation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (*UnimplementedReservationsServer) RetrieveCurrent(context.Context, *RetrieveCurrentRequest) (*RetrieveReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCurrent not implemented")
}
func (*UnimplementedReservationsServer) StateMachine(context.Context, *empty.Empty) (*StateMachineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateMachine not implemented")
}
func (*UnimplementedReservationsServer) Prev(context.Context, *UpdateStateRequest) (*RetrieveReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Prev not implemented")
}
func (*UnimplementedReservationsServer) Next(context.Context, *UpdateStateRequest) (*RetrieveReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Next not implemented")
}
func (*UnimplementedReservationsServer) Cancel(context.Context, *UpdateStateRequest) (*RetrieveReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cancel not implemented")
}

func RegisterReservationsServer(s *grpc.Server, srv ReservationsServer) {
	s.RegisterService(&_Reservations_serviceDesc, srv)
}

func _Reservations_CreateReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationsServer).CreateReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Reservations/CreateReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationsServer).CreateReservation(ctx, req.(*CreateReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reservations_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationsServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Reservations/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationsServer).Retrieve(ctx, req.(*RetrieveOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reservations_RetrieveCurrent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCurrentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationsServer).RetrieveCurrent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Reservations/RetrieveCurrent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationsServer).RetrieveCurrent(ctx, req.(*RetrieveCurrentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reservations_StateMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationsServer).StateMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Reservations/StateMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationsServer).StateMachine(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reservations_Prev_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationsServer).Prev(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Reservations/Prev",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationsServer).Prev(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reservations_Next_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationsServer).Next(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Reservations/Next",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationsServer).Next(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reservations_Cancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationsServer).Cancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Reservations/Cancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationsServer).Cancel(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reservations_serviceDesc = grpc.ServiceDesc{
	ServiceName: "checkout.Reservations",
	HandlerType: (*ReservationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateReservation",
			Handler:    _Reservations_CreateReservation_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _Reservations_Retrieve_Handler,
		},
		{
			MethodName: "RetrieveCurrent",
			Handler:    _Reservations_RetrieveCurrent_Handler,
		},
		{
			MethodName: "StateMachine",
			Handler:    _Reservations_StateMachine_Handler,
		},
		{
			MethodName: "Prev",
			Handler:    _Reservations_Prev_Handler,
		},
		{
			MethodName: "Next",
			Handler:    _Reservations_Next_Handler,
		},
		{
			MethodName: "Cancel",
			Handler:    _Reservations_Cancel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checkout.proto",
}

// BookingsClient is the client API for Bookings service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookingsClient interface {
	CreateBooking(ctx context.Context, in *CreateBookingRequest, opts ...grpc.CallOption) (*CreateBookingResponse, error)
	Retrieve(ctx context.Context, in *RetrieveOrderRequest, opts ...grpc.CallOption) (*Booking, error)
	RetrieveCurrent(ctx context.Context, in *RetrieveCurrentRequest, opts ...grpc.CallOption) (*RetrieveBookingResponse, error)
	StateMachine(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StateMachineResponse, error)
	Prev(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveBookingResponse, error)
	Next(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveBookingResponse, error)
	Cancel(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveBookingResponse, error)
}

type bookingsClient struct {
	cc grpc.ClientConnInterface
}

func NewBookingsClient(cc grpc.ClientConnInterface) BookingsClient {
	return &bookingsClient{cc}
}

func (c *bookingsClient) CreateBooking(ctx context.Context, in *CreateBookingRequest, opts ...grpc.CallOption) (*CreateBookingResponse, error) {
	out := new(CreateBookingResponse)
	err := c.cc.Invoke(ctx, "/checkout.Bookings/CreateBooking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingsClient) Retrieve(ctx context.Context, in *RetrieveOrderRequest, opts ...grpc.CallOption) (*Booking, error) {
	out := new(Booking)
	err := c.cc.Invoke(ctx, "/checkout.Bookings/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingsClient) RetrieveCurrent(ctx context.Context, in *RetrieveCurrentRequest, opts ...grpc.CallOption) (*RetrieveBookingResponse, error) {
	out := new(RetrieveBookingResponse)
	err := c.cc.Invoke(ctx, "/checkout.Bookings/RetrieveCurrent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingsClient) StateMachine(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StateMachineResponse, error) {
	out := new(StateMachineResponse)
	err := c.cc.Invoke(ctx, "/checkout.Bookings/StateMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingsClient) Prev(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveBookingResponse, error) {
	out := new(RetrieveBookingResponse)
	err := c.cc.Invoke(ctx, "/checkout.Bookings/Prev", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingsClient) Next(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveBookingResponse, error) {
	out := new(RetrieveBookingResponse)
	err := c.cc.Invoke(ctx, "/checkout.Bookings/Next", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingsClient) Cancel(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveBookingResponse, error) {
	out := new(RetrieveBookingResponse)
	err := c.cc.Invoke(ctx, "/checkout.Bookings/Cancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookingsServer is the server API for Bookings service.
type BookingsServer interface {
	CreateBooking(context.Context, *CreateBookingRequest) (*CreateBookingResponse, error)
	Retrieve(context.Context, *RetrieveOrderRequest) (*Booking, error)
	RetrieveCurrent(context.Context, *RetrieveCurrentRequest) (*RetrieveBookingResponse, error)
	StateMachine(context.Context, *empty.Empty) (*StateMachineResponse, error)
	Prev(context.Context, *UpdateStateRequest) (*RetrieveBookingResponse, error)
	Next(context.Context, *UpdateStateRequest) (*RetrieveBookingResponse, error)
	Cancel(context.Context, *UpdateStateRequest) (*RetrieveBookingResponse, error)
}

// UnimplementedBookingsServer can be embedded to have forward compatible implementations.
type UnimplementedBookingsServer struct {
}

func (*UnimplementedBookingsServer) CreateBooking(context.Context, *CreateBookingRequest) (*CreateBookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBooking not implemented")
}
func (*UnimplementedBookingsServer) Retrieve(context.Context, *RetrieveOrderRequest) (*Booking, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (*UnimplementedBookingsServer) RetrieveCurrent(context.Context, *RetrieveCurrentRequest) (*RetrieveBookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCurrent not implemented")
}
func (*UnimplementedBookingsServer) StateMachine(context.Context, *empty.Empty) (*StateMachineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateMachine not implemented")
}
func (*UnimplementedBookingsServer) Prev(context.Context, *UpdateStateRequest) (*RetrieveBookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Prev not implemented")
}
func (*UnimplementedBookingsServer) Next(context.Context, *UpdateStateRequest) (*RetrieveBookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Next not implemented")
}
func (*UnimplementedBookingsServer) Cancel(context.Context, *UpdateStateRequest) (*RetrieveBookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cancel not implemented")
}

func RegisterBookingsServer(s *grpc.Server, srv BookingsServer) {
	s.RegisterService(&_Bookings_serviceDesc, srv)
}

func _Bookings_CreateBooking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBookingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingsServer).CreateBooking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Bookings/CreateBooking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingsServer).CreateBooking(ctx, req.(*CreateBookingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookings_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingsServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Bookings/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingsServer).Retrieve(ctx, req.(*RetrieveOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookings_RetrieveCurrent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCurrentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingsServer).RetrieveCurrent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Bookings/RetrieveCurrent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingsServer).RetrieveCurrent(ctx, req.(*RetrieveCurrentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookings_StateMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingsServer).StateMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Bookings/StateMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingsServer).StateMachine(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookings_Prev_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingsServer).Prev(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Bookings/Prev",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingsServer).Prev(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookings_Next_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingsServer).Next(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Bookings/Next",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingsServer).Next(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookings_Cancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingsServer).Cancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Bookings/Cancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingsServer).Cancel(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bookings_serviceDesc = grpc.ServiceDesc{
	ServiceName: "checkout.Bookings",
	HandlerType: (*BookingsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBooking",
			Handler:    _Bookings_CreateBooking_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _Bookings_Retrieve_Handler,
		},
		{
			MethodName: "RetrieveCurrent",
			Handler:    _Bookings_RetrieveCurrent_Handler,
		},
		{
			MethodName: "StateMachine",
			Handler:    _Bookings_StateMachine_Handler,
		},
		{
			MethodName: "Prev",
			Handler:    _Bookings_Prev_Handler,
		},
		{
			MethodName: "Next",
			Handler:    _Bookings_Next_Handler,
		},
		{
			MethodName: "Cancel",
			Handler:    _Bookings_Cancel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checkout.proto",
}

// PaymentsClient is the client API for Payments service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentsClient interface {
	CreatePayment(ctx context.Context, in *CreatePaymentRequest, opts ...grpc.CallOption) (*CreatePaymentResponse, error)
	Retrieve(ctx context.Context, in *RetrievePaymentRequest, opts ...grpc.CallOption) (*Payment, error)
}

type paymentsClient struct {
	cc grpc.ClientConnInterface
}

func NewPaymentsClient(cc grpc.ClientConnInterface) PaymentsClient {
	return &paymentsClient{cc}
}

func (c *paymentsClient) CreatePayment(ctx context.Context, in *CreatePaymentRequest, opts ...grpc.CallOption) (*CreatePaymentResponse, error) {
	out := new(CreatePaymentResponse)
	err := c.cc.Invoke(ctx, "/checkout.Payments/CreatePayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentsClient) Retrieve(ctx context.Context, in *RetrievePaymentRequest, opts ...grpc.CallOption) (*Payment, error) {
	out := new(Payment)
	err := c.cc.Invoke(ctx, "/checkout.Payments/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentsServer is the server API for Payments service.
type PaymentsServer interface {
	CreatePayment(context.Context, *CreatePaymentRequest) (*CreatePaymentResponse, error)
	Retrieve(context.Context, *RetrievePaymentRequest) (*Payment, error)
}

// UnimplementedPaymentsServer can be embedded to have forward compatible implementations.
type UnimplementedPaymentsServer struct {
}

func (*UnimplementedPaymentsServer) CreatePayment(context.Context, *CreatePaymentRequest) (*CreatePaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePayment not implemented")
}
func (*UnimplementedPaymentsServer) Retrieve(context.Context, *RetrievePaymentRequest) (*Payment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}

func RegisterPaymentsServer(s *grpc.Server, srv PaymentsServer) {
	s.RegisterService(&_Payments_serviceDesc, srv)
}

func _Payments_CreatePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentsServer).CreatePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Payments/CreatePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentsServer).CreatePayment(ctx, req.(*CreatePaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payments_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrievePaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentsServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Payments/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentsServer).Retrieve(ctx, req.(*RetrievePaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Payments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "checkout.Payments",
	HandlerType: (*PaymentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePayment",
			Handler:    _Payments_CreatePayment_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _Payments_Retrieve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checkout.proto",
}

// ShippingsClient is the client API for Shippings service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShippingsClient interface {
	AgreeShippingDispatch(ctx context.Context, in *AgreeShippingDispatchRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateShipping(ctx context.Context, in *CreateShippingRequest, opts ...grpc.CallOption) (*CreateShippingResponse, error)
	Retrieve(ctx context.Context, in *RetrieveShippingRequest, opts ...grpc.CallOption) (*Shipping, error)
	Prev(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveShippingResponse, error)
	Next(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveShippingResponse, error)
	Cancel(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveShippingResponse, error)
}

type shippingsClient struct {
	cc grpc.ClientConnInterface
}

func NewShippingsClient(cc grpc.ClientConnInterface) ShippingsClient {
	return &shippingsClient{cc}
}

func (c *shippingsClient) AgreeShippingDispatch(ctx context.Context, in *AgreeShippingDispatchRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/checkout.Shippings/AgreeShippingDispatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingsClient) CreateShipping(ctx context.Context, in *CreateShippingRequest, opts ...grpc.CallOption) (*CreateShippingResponse, error) {
	out := new(CreateShippingResponse)
	err := c.cc.Invoke(ctx, "/checkout.Shippings/CreateShipping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingsClient) Retrieve(ctx context.Context, in *RetrieveShippingRequest, opts ...grpc.CallOption) (*Shipping, error) {
	out := new(Shipping)
	err := c.cc.Invoke(ctx, "/checkout.Shippings/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingsClient) Prev(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveShippingResponse, error) {
	out := new(RetrieveShippingResponse)
	err := c.cc.Invoke(ctx, "/checkout.Shippings/Prev", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingsClient) Next(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveShippingResponse, error) {
	out := new(RetrieveShippingResponse)
	err := c.cc.Invoke(ctx, "/checkout.Shippings/Next", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingsClient) Cancel(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrieveShippingResponse, error) {
	out := new(RetrieveShippingResponse)
	err := c.cc.Invoke(ctx, "/checkout.Shippings/Cancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShippingsServer is the server API for Shippings service.
type ShippingsServer interface {
	AgreeShippingDispatch(context.Context, *AgreeShippingDispatchRequest) (*empty.Empty, error)
	CreateShipping(context.Context, *CreateShippingRequest) (*CreateShippingResponse, error)
	Retrieve(context.Context, *RetrieveShippingRequest) (*Shipping, error)
	Prev(context.Context, *UpdateStateRequest) (*RetrieveShippingResponse, error)
	Next(context.Context, *UpdateStateRequest) (*RetrieveShippingResponse, error)
	Cancel(context.Context, *UpdateStateRequest) (*RetrieveShippingResponse, error)
}

// UnimplementedShippingsServer can be embedded to have forward compatible implementations.
type UnimplementedShippingsServer struct {
}

func (*UnimplementedShippingsServer) AgreeShippingDispatch(context.Context, *AgreeShippingDispatchRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgreeShippingDispatch not implemented")
}
func (*UnimplementedShippingsServer) CreateShipping(context.Context, *CreateShippingRequest) (*CreateShippingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShipping not implemented")
}
func (*UnimplementedShippingsServer) Retrieve(context.Context, *RetrieveShippingRequest) (*Shipping, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (*UnimplementedShippingsServer) Prev(context.Context, *UpdateStateRequest) (*RetrieveShippingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Prev not implemented")
}
func (*UnimplementedShippingsServer) Next(context.Context, *UpdateStateRequest) (*RetrieveShippingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Next not implemented")
}
func (*UnimplementedShippingsServer) Cancel(context.Context, *UpdateStateRequest) (*RetrieveShippingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cancel not implemented")
}

func RegisterShippingsServer(s *grpc.Server, srv ShippingsServer) {
	s.RegisterService(&_Shippings_serviceDesc, srv)
}

func _Shippings_AgreeShippingDispatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgreeShippingDispatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingsServer).AgreeShippingDispatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Shippings/AgreeShippingDispatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingsServer).AgreeShippingDispatch(ctx, req.(*AgreeShippingDispatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shippings_CreateShipping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShippingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingsServer).CreateShipping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Shippings/CreateShipping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingsServer).CreateShipping(ctx, req.(*CreateShippingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shippings_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveShippingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingsServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Shippings/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingsServer).Retrieve(ctx, req.(*RetrieveShippingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shippings_Prev_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingsServer).Prev(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Shippings/Prev",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingsServer).Prev(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shippings_Next_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingsServer).Next(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Shippings/Next",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingsServer).Next(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shippings_Cancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingsServer).Cancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Shippings/Cancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingsServer).Cancel(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Shippings_serviceDesc = grpc.ServiceDesc{
	ServiceName: "checkout.Shippings",
	HandlerType: (*ShippingsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AgreeShippingDispatch",
			Handler:    _Shippings_AgreeShippingDispatch_Handler,
		},
		{
			MethodName: "CreateShipping",
			Handler:    _Shippings_CreateShipping_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _Shippings_Retrieve_Handler,
		},
		{
			MethodName: "Prev",
			Handler:    _Shippings_Prev_Handler,
		},
		{
			MethodName: "Next",
			Handler:    _Shippings_Next_Handler,
		},
		{
			MethodName: "Cancel",
			Handler:    _Shippings_Cancel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checkout.proto",
}

// PurchasesClient is the client API for Purchases service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PurchasesClient interface {
	CreatePurchase(ctx context.Context, in *CreatePurchaseRequest, opts ...grpc.CallOption) (*CreatePurchaseResponse, error)
	AssignDestAddress(ctx context.Context, in *AssignDestAddressRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Retrieve(ctx context.Context, in *RetrieveOrderRequest, opts ...grpc.CallOption) (*Purchase, error)
	RetrieveShippingMethods(ctx context.Context, in *RetrieveShippingMethodsRequest, opts ...grpc.CallOption) (*RetrieveShippingMethodsResponse, error)
	ConfirmPurchase(ctx context.Context, in *ConfirmPurchaseRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error)
	RetrieveCurrent(ctx context.Context, in *RetrieveCurrentRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error)
	StateMachine(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StateMachineResponse, error)
	Prev(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error)
	Next(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error)
	Cancel(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error)
}

type purchasesClient struct {
	cc grpc.ClientConnInterface
}

func NewPurchasesClient(cc grpc.ClientConnInterface) PurchasesClient {
	return &purchasesClient{cc}
}

func (c *purchasesClient) CreatePurchase(ctx context.Context, in *CreatePurchaseRequest, opts ...grpc.CallOption) (*CreatePurchaseResponse, error) {
	out := new(CreatePurchaseResponse)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/CreatePurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purchasesClient) AssignDestAddress(ctx context.Context, in *AssignDestAddressRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/AssignDestAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purchasesClient) Retrieve(ctx context.Context, in *RetrieveOrderRequest, opts ...grpc.CallOption) (*Purchase, error) {
	out := new(Purchase)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purchasesClient) RetrieveShippingMethods(ctx context.Context, in *RetrieveShippingMethodsRequest, opts ...grpc.CallOption) (*RetrieveShippingMethodsResponse, error) {
	out := new(RetrieveShippingMethodsResponse)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/RetrieveShippingMethods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purchasesClient) ConfirmPurchase(ctx context.Context, in *ConfirmPurchaseRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error) {
	out := new(RetrievePurchaseResponse)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/ConfirmPurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purchasesClient) RetrieveCurrent(ctx context.Context, in *RetrieveCurrentRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error) {
	out := new(RetrievePurchaseResponse)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/RetrieveCurrent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purchasesClient) StateMachine(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StateMachineResponse, error) {
	out := new(StateMachineResponse)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/StateMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purchasesClient) Prev(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error) {
	out := new(RetrievePurchaseResponse)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/Prev", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purchasesClient) Next(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error) {
	out := new(RetrievePurchaseResponse)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/Next", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purchasesClient) Cancel(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*RetrievePurchaseResponse, error) {
	out := new(RetrievePurchaseResponse)
	err := c.cc.Invoke(ctx, "/checkout.Purchases/Cancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PurchasesServer is the server API for Purchases service.
type PurchasesServer interface {
	CreatePurchase(context.Context, *CreatePurchaseRequest) (*CreatePurchaseResponse, error)
	AssignDestAddress(context.Context, *AssignDestAddressRequest) (*empty.Empty, error)
	Retrieve(context.Context, *RetrieveOrderRequest) (*Purchase, error)
	RetrieveShippingMethods(context.Context, *RetrieveShippingMethodsRequest) (*RetrieveShippingMethodsResponse, error)
	ConfirmPurchase(context.Context, *ConfirmPurchaseRequest) (*RetrievePurchaseResponse, error)
	RetrieveCurrent(context.Context, *RetrieveCurrentRequest) (*RetrievePurchaseResponse, error)
	StateMachine(context.Context, *empty.Empty) (*StateMachineResponse, error)
	Prev(context.Context, *UpdateStateRequest) (*RetrievePurchaseResponse, error)
	Next(context.Context, *UpdateStateRequest) (*RetrievePurchaseResponse, error)
	Cancel(context.Context, *UpdateStateRequest) (*RetrievePurchaseResponse, error)
}

// UnimplementedPurchasesServer can be embedded to have forward compatible implementations.
type UnimplementedPurchasesServer struct {
}

func (*UnimplementedPurchasesServer) CreatePurchase(context.Context, *CreatePurchaseRequest) (*CreatePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePurchase not implemented")
}
func (*UnimplementedPurchasesServer) AssignDestAddress(context.Context, *AssignDestAddressRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignDestAddress not implemented")
}
func (*UnimplementedPurchasesServer) Retrieve(context.Context, *RetrieveOrderRequest) (*Purchase, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (*UnimplementedPurchasesServer) RetrieveShippingMethods(context.Context, *RetrieveShippingMethodsRequest) (*RetrieveShippingMethodsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveShippingMethods not implemented")
}
func (*UnimplementedPurchasesServer) ConfirmPurchase(context.Context, *ConfirmPurchaseRequest) (*RetrievePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmPurchase not implemented")
}
func (*UnimplementedPurchasesServer) RetrieveCurrent(context.Context, *RetrieveCurrentRequest) (*RetrievePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCurrent not implemented")
}
func (*UnimplementedPurchasesServer) StateMachine(context.Context, *empty.Empty) (*StateMachineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateMachine not implemented")
}
func (*UnimplementedPurchasesServer) Prev(context.Context, *UpdateStateRequest) (*RetrievePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Prev not implemented")
}
func (*UnimplementedPurchasesServer) Next(context.Context, *UpdateStateRequest) (*RetrievePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Next not implemented")
}
func (*UnimplementedPurchasesServer) Cancel(context.Context, *UpdateStateRequest) (*RetrievePurchaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cancel not implemented")
}

func RegisterPurchasesServer(s *grpc.Server, srv PurchasesServer) {
	s.RegisterService(&_Purchases_serviceDesc, srv)
}

func _Purchases_CreatePurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).CreatePurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/CreatePurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).CreatePurchase(ctx, req.(*CreatePurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Purchases_AssignDestAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignDestAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).AssignDestAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/AssignDestAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).AssignDestAddress(ctx, req.(*AssignDestAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Purchases_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).Retrieve(ctx, req.(*RetrieveOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Purchases_RetrieveShippingMethods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveShippingMethodsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).RetrieveShippingMethods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/RetrieveShippingMethods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).RetrieveShippingMethods(ctx, req.(*RetrieveShippingMethodsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Purchases_ConfirmPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmPurchaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).ConfirmPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/ConfirmPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).ConfirmPurchase(ctx, req.(*ConfirmPurchaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Purchases_RetrieveCurrent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCurrentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).RetrieveCurrent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/RetrieveCurrent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).RetrieveCurrent(ctx, req.(*RetrieveCurrentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Purchases_StateMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).StateMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/StateMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).StateMachine(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Purchases_Prev_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).Prev(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/Prev",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).Prev(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Purchases_Next_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).Next(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/Next",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).Next(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Purchases_Cancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurchasesServer).Cancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Purchases/Cancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurchasesServer).Cancel(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Purchases_serviceDesc = grpc.ServiceDesc{
	ServiceName: "checkout.Purchases",
	HandlerType: (*PurchasesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePurchase",
			Handler:    _Purchases_CreatePurchase_Handler,
		},
		{
			MethodName: "AssignDestAddress",
			Handler:    _Purchases_AssignDestAddress_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _Purchases_Retrieve_Handler,
		},
		{
			MethodName: "RetrieveShippingMethods",
			Handler:    _Purchases_RetrieveShippingMethods_Handler,
		},
		{
			MethodName: "ConfirmPurchase",
			Handler:    _Purchases_ConfirmPurchase_Handler,
		},
		{
			MethodName: "RetrieveCurrent",
			Handler:    _Purchases_RetrieveCurrent_Handler,
		},
		{
			MethodName: "StateMachine",
			Handler:    _Purchases_StateMachine_Handler,
		},
		{
			MethodName: "Prev",
			Handler:    _Purchases_Prev_Handler,
		},
		{
			MethodName: "Next",
			Handler:    _Purchases_Next_Handler,
		},
		{
			MethodName: "Cancel",
			Handler:    _Purchases_Cancel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checkout.proto",
}

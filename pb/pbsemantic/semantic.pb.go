// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: semantic.proto

package pbsemantic

import (
	context "context"
	pbshared "github.com/athomecomar/athome/pb/pbshared"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RetrieveShippingCategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxVolWeight float64 `protobuf:"fixed64,1,opt,name=max_vol_weight,json=maxVolWeight,proto3" json:"max_vol_weight,omitempty"`
}

func (x *RetrieveShippingCategoriesRequest) Reset() {
	*x = RetrieveShippingCategoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveShippingCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveShippingCategoriesRequest) ProtoMessage() {}

func (x *RetrieveShippingCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveShippingCategoriesRequest.ProtoReflect.Descriptor instead.
func (*RetrieveShippingCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{0}
}

func (x *RetrieveShippingCategoriesRequest) GetMaxVolWeight() float64 {
	if x != nil {
		return x.MaxVolWeight
	}
	return 0
}

type RetrieveCategoriesByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryIds []uint64 `protobuf:"varint,1,rep,packed,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`
}

func (x *RetrieveCategoriesByIdRequest) Reset() {
	*x = RetrieveCategoriesByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCategoriesByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCategoriesByIdRequest) ProtoMessage() {}

func (x *RetrieveCategoriesByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCategoriesByIdRequest.ProtoReflect.Descriptor instead.
func (*RetrieveCategoriesByIdRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{1}
}

func (x *RetrieveCategoriesByIdRequest) GetCategoryIds() []uint64 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

type RetrieveCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId uint64 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
}

func (x *RetrieveCategoryRequest) Reset() {
	*x = RetrieveCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCategoryRequest) ProtoMessage() {}

func (x *RetrieveCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCategoryRequest.ProtoReflect.Descriptor instead.
func (*RetrieveCategoryRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveCategoryRequest) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ParentId               uint64               `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Childs                 map[uint64]*Category `protobuf:"bytes,3,rep,name=childs,proto3" json:"childs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IdentificationTemplate string               `protobuf:"bytes,4,opt,name=identification_template,json=identificationTemplate,proto3" json:"identification_template,omitempty"`
	MaxVolWeight           float64              `protobuf:"fixed64,5,opt,name=max_vol_weight,json=maxVolWeight,proto3" json:"max_vol_weight,omitempty"` // in case of being
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{3}
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Category) GetChilds() map[uint64]*Category {
	if x != nil {
		return x.Childs
	}
	return nil
}

func (x *Category) GetIdentificationTemplate() string {
	if x != nil {
		return x.IdentificationTemplate
	}
	return ""
}

func (x *Category) GetMaxVolWeight() float64 {
	if x != nil {
		return x.MaxVolWeight
	}
	return 0
}

type AttributeSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId uint64 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ValueType  string `protobuf:"bytes,3,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
}

func (x *AttributeSchema) Reset() {
	*x = AttributeSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeSchema) ProtoMessage() {}

func (x *AttributeSchema) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeSchema.ProtoReflect.Descriptor instead.
func (*AttributeSchema) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{4}
}

func (x *AttributeSchema) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AttributeSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttributeSchema) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

type RetrieveCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories map[uint64]*Category `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RetrieveCategoriesResponse) Reset() {
	*x = RetrieveCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCategoriesResponse) ProtoMessage() {}

func (x *RetrieveCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCategoriesResponse.ProtoReflect.Descriptor instead.
func (*RetrieveCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{5}
}

func (x *RetrieveCategoriesResponse) GetCategories() map[uint64]*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

type RetrieveAttributeSchemasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId uint64 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
}

func (x *RetrieveAttributeSchemasRequest) Reset() {
	*x = RetrieveAttributeSchemasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveAttributeSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveAttributeSchemasRequest) ProtoMessage() {}

func (x *RetrieveAttributeSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveAttributeSchemasRequest.ProtoReflect.Descriptor instead.
func (*RetrieveAttributeSchemasRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{6}
}

func (x *RetrieveAttributeSchemasRequest) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type RetrieveAttributeDatasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *pbshared.Entity `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *RetrieveAttributeDatasRequest) Reset() {
	*x = RetrieveAttributeDatasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveAttributeDatasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveAttributeDatasRequest) ProtoMessage() {}

func (x *RetrieveAttributeDatasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveAttributeDatasRequest.ProtoReflect.Descriptor instead.
func (*RetrieveAttributeDatasRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{7}
}

func (x *RetrieveAttributeDatasRequest) GetEntity() *pbshared.Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type DeleteAttributeDatasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string           `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Entity      *pbshared.Entity `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *DeleteAttributeDatasRequest) Reset() {
	*x = DeleteAttributeDatasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAttributeDatasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAttributeDatasRequest) ProtoMessage() {}

func (x *DeleteAttributeDatasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAttributeDatasRequest.ProtoReflect.Descriptor instead.
func (*DeleteAttributeDatasRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAttributeDatasRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *DeleteAttributeDatasRequest) GetEntity() *pbshared.Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type RetrieveAttributeSchemasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes map[uint64]*AttributeSchema `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RetrieveAttributeSchemasResponse) Reset() {
	*x = RetrieveAttributeSchemasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveAttributeSchemasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveAttributeSchemasResponse) ProtoMessage() {}

func (x *RetrieveAttributeSchemasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveAttributeSchemasResponse.ProtoReflect.Descriptor instead.
func (*RetrieveAttributeSchemasResponse) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{9}
}

func (x *RetrieveAttributeSchemasResponse) GetAttributes() map[uint64]*AttributeSchema {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type RetrieveAttributeDatasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes map[uint64]*AttributeData `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RetrieveAttributeDatasResponse) Reset() {
	*x = RetrieveAttributeDatasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveAttributeDatasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveAttributeDatasResponse) ProtoMessage() {}

func (x *RetrieveAttributeDatasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveAttributeDatasResponse.ProtoReflect.Descriptor instead.
func (*RetrieveAttributeDatasResponse) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{10}
}

func (x *RetrieveAttributeDatasResponse) GetAttributes() map[uint64]*AttributeData {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type SetAttributeDatasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeDataId uint64         `protobuf:"varint,1,opt,name=attribute_data_id,json=attributeDataId,proto3" json:"attribute_data_id,omitempty"`
	Data            *AttributeData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetAttributeDatasResponse) Reset() {
	*x = SetAttributeDatasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttributeDatasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttributeDatasResponse) ProtoMessage() {}

func (x *SetAttributeDatasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttributeDatasResponse.ProtoReflect.Descriptor instead.
func (*SetAttributeDatasResponse) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{11}
}

func (x *SetAttributeDatasResponse) GetAttributeDataId() uint64 {
	if x != nil {
		return x.AttributeDataId
	}
	return 0
}

func (x *SetAttributeDatasResponse) GetData() *AttributeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CloneAttributeDatasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes map[uint64]*AttributeData `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CloneAttributeDatasResponse) Reset() {
	*x = CloneAttributeDatasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneAttributeDatasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneAttributeDatasResponse) ProtoMessage() {}

func (x *CloneAttributeDatasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneAttributeDatasResponse.ProtoReflect.Descriptor instead.
func (*CloneAttributeDatasResponse) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{12}
}

func (x *CloneAttributeDatasResponse) GetAttributes() map[uint64]*AttributeData {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type SetAttributeDatasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Corpus:
	//	*SetAttributeDatasRequest_Authorization_
	//	*SetAttributeDatasRequest_Data
	Corpus isSetAttributeDatasRequest_Corpus `protobuf_oneof:"corpus"`
}

func (x *SetAttributeDatasRequest) Reset() {
	*x = SetAttributeDatasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttributeDatasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttributeDatasRequest) ProtoMessage() {}

func (x *SetAttributeDatasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttributeDatasRequest.ProtoReflect.Descriptor instead.
func (*SetAttributeDatasRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{13}
}

func (m *SetAttributeDatasRequest) GetCorpus() isSetAttributeDatasRequest_Corpus {
	if m != nil {
		return m.Corpus
	}
	return nil
}

func (x *SetAttributeDatasRequest) GetAuthorization() *SetAttributeDatasRequest_Authorization {
	if x, ok := x.GetCorpus().(*SetAttributeDatasRequest_Authorization_); ok {
		return x.Authorization
	}
	return nil
}

func (x *SetAttributeDatasRequest) GetData() *AttributeData {
	if x, ok := x.GetCorpus().(*SetAttributeDatasRequest_Data); ok {
		return x.Data
	}
	return nil
}

type isSetAttributeDatasRequest_Corpus interface {
	isSetAttributeDatasRequest_Corpus()
}

type SetAttributeDatasRequest_Authorization_ struct {
	Authorization *SetAttributeDatasRequest_Authorization `protobuf:"bytes,1,opt,name=authorization,proto3,oneof"`
}

type SetAttributeDatasRequest_Data struct {
	Data *AttributeData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SetAttributeDatasRequest_Authorization_) isSetAttributeDatasRequest_Corpus() {}

func (*SetAttributeDatasRequest_Data) isSetAttributeDatasRequest_Corpus() {}

type ChangeEntityAttributeDatasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string           `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	From        *pbshared.Entity `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Dest        *pbshared.Entity `protobuf:"bytes,3,opt,name=dest,proto3" json:"dest,omitempty"`
}

func (x *ChangeEntityAttributeDatasRequest) Reset() {
	*x = ChangeEntityAttributeDatasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeEntityAttributeDatasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEntityAttributeDatasRequest) ProtoMessage() {}

func (x *ChangeEntityAttributeDatasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEntityAttributeDatasRequest.ProtoReflect.Descriptor instead.
func (*ChangeEntityAttributeDatasRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{14}
}

func (x *ChangeEntityAttributeDatasRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ChangeEntityAttributeDatasRequest) GetFrom() *pbshared.Entity {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ChangeEntityAttributeDatasRequest) GetDest() *pbshared.Entity {
	if x != nil {
		return x.Dest
	}
	return nil
}

type CloneAttributeDatasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	FromEntityId uint64 `protobuf:"varint,2,opt,name=from_entity_id,json=fromEntityId,proto3" json:"from_entity_id,omitempty"`
	DestEntityId uint64 `protobuf:"varint,3,opt,name=dest_entity_id,json=destEntityId,proto3" json:"dest_entity_id,omitempty"`
	EntityTable  string `protobuf:"bytes,4,opt,name=entity_table,json=entityTable,proto3" json:"entity_table,omitempty"`
}

func (x *CloneAttributeDatasRequest) Reset() {
	*x = CloneAttributeDatasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneAttributeDatasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneAttributeDatasRequest) ProtoMessage() {}

func (x *CloneAttributeDatasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneAttributeDatasRequest.ProtoReflect.Descriptor instead.
func (*CloneAttributeDatasRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{15}
}

func (x *CloneAttributeDatasRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CloneAttributeDatasRequest) GetFromEntityId() uint64 {
	if x != nil {
		return x.FromEntityId
	}
	return 0
}

func (x *CloneAttributeDatasRequest) GetDestEntityId() uint64 {
	if x != nil {
		return x.DestEntityId
	}
	return 0
}

func (x *CloneAttributeDatasRequest) GetEntityTable() string {
	if x != nil {
		return x.EntityTable
	}
	return ""
}

type AttributeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaId uint64   `protobuf:"varint,1,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Values   []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AttributeData) Reset() {
	*x = AttributeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeData) ProtoMessage() {}

func (x *AttributeData) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeData.ProtoReflect.Descriptor instead.
func (*AttributeData) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{16}
}

func (x *AttributeData) GetSchemaId() uint64 {
	if x != nil {
		return x.SchemaId
	}
	return 0
}

func (x *AttributeData) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type PredictCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *PredictCategoryRequest) Reset() {
	*x = PredictCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictCategoryRequest) ProtoMessage() {}

func (x *PredictCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictCategoryRequest.ProtoReflect.Descriptor instead.
func (*PredictCategoryRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{17}
}

func (x *PredictCategoryRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type PredictCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId uint64    `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Category   *Category `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Score      float64   `protobuf:"fixed64,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *PredictCategoryResponse) Reset() {
	*x = PredictCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictCategoryResponse) ProtoMessage() {}

func (x *PredictCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictCategoryResponse.ProtoReflect.Descriptor instead.
func (*PredictCategoryResponse) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{18}
}

func (x *PredictCategoryResponse) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *PredictCategoryResponse) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *PredictCategoryResponse) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type RetrieveCategoriesByRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RetrieveCategoriesByRoleRequest) Reset() {
	*x = RetrieveCategoriesByRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCategoriesByRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCategoriesByRoleRequest) ProtoMessage() {}

func (x *RetrieveCategoriesByRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCategoriesByRoleRequest.ProtoReflect.Descriptor instead.
func (*RetrieveCategoriesByRoleRequest) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{19}
}

func (x *RetrieveCategoriesByRoleRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type SetAttributeDatasRequest_Authorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string           `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // from which assigns the user_id col
	Entity      *pbshared.Entity `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *SetAttributeDatasRequest_Authorization) Reset() {
	*x = SetAttributeDatasRequest_Authorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semantic_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttributeDatasRequest_Authorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttributeDatasRequest_Authorization) ProtoMessage() {}

func (x *SetAttributeDatasRequest_Authorization) ProtoReflect() protoreflect.Message {
	mi := &file_semantic_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttributeDatasRequest_Authorization.ProtoReflect.Descriptor instead.
func (*SetAttributeDatasRequest_Authorization) Descriptor() ([]byte, []int) {
	return file_semantic_proto_rawDescGZIP(), []int{13, 0}
}

func (x *SetAttributeDatasRequest_Authorization) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *SetAttributeDatasRequest_Authorization) GetEntity() *pbshared.Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

var File_semantic_proto protoreflect.FileDescriptor

var file_semantic_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x21, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61,
	0x78, 0x5f, 0x76, 0x6f, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x56, 0x6f, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x42, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x22, 0xa1, 0x02, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x17, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x6f, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x56, 0x6f, 0x6c, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x4d, 0x0a, 0x0b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x65, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x1a,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x1a, 0x51, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x42, 0x0a, 0x1f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x68, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xd8, 0x01, 0x0a, 0x20, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x58, 0x0a, 0x0f, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd2, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x1a, 0x56, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69,
	0x63, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x74, 0x0a, 0x19, 0x53, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xcc, 0x01, 0x0a, 0x1b, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e,
	0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x56, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x89, 0x02, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x0d,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x53,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x5a, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x21,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x22, 0xae, 0x01, 0x0a,
	0x1a, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24,
	0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x44, 0x0a,
	0x0d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x1f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xfa, 0x42, 0x28, 0x72, 0x26, 0x52, 0x10,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x32, 0xf0, 0x04, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x54, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e,
	0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x1a, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x73,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x73, 0x12, 0x29, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x11, 0x53, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x22,
	0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x32, 0xae, 0x01,
	0x0a, 0x09, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x12, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x6d, 0x61,
	0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e,
	0x74, 0x69, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x32, 0xe2,
	0x07, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x5c, 0x0a, 0x0f, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20,
	0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x10, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e,
	0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x16,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69,
	0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x73, 0x12, 0x29, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69,
	0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x12, 0x22, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e,
	0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x63, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x2b, 0x2e,
	0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x65,
	0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x43, 0x6c, 0x6f,
	0x6e, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x70, 0x62, 0x73, 0x65, 0x6d, 0x61, 0x6e,
	0x74, 0x69, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_semantic_proto_rawDescOnce sync.Once
	file_semantic_proto_rawDescData = file_semantic_proto_rawDesc
)

func file_semantic_proto_rawDescGZIP() []byte {
	file_semantic_proto_rawDescOnce.Do(func() {
		file_semantic_proto_rawDescData = protoimpl.X.CompressGZIP(file_semantic_proto_rawDescData)
	})
	return file_semantic_proto_rawDescData
}

var file_semantic_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_semantic_proto_goTypes = []interface{}{
	(*RetrieveShippingCategoriesRequest)(nil),      // 0: semantic.RetrieveShippingCategoriesRequest
	(*RetrieveCategoriesByIdRequest)(nil),          // 1: semantic.RetrieveCategoriesByIdRequest
	(*RetrieveCategoryRequest)(nil),                // 2: semantic.RetrieveCategoryRequest
	(*Category)(nil),                               // 3: semantic.Category
	(*AttributeSchema)(nil),                        // 4: semantic.AttributeSchema
	(*RetrieveCategoriesResponse)(nil),             // 5: semantic.RetrieveCategoriesResponse
	(*RetrieveAttributeSchemasRequest)(nil),        // 6: semantic.RetrieveAttributeSchemasRequest
	(*RetrieveAttributeDatasRequest)(nil),          // 7: semantic.RetrieveAttributeDatasRequest
	(*DeleteAttributeDatasRequest)(nil),            // 8: semantic.DeleteAttributeDatasRequest
	(*RetrieveAttributeSchemasResponse)(nil),       // 9: semantic.RetrieveAttributeSchemasResponse
	(*RetrieveAttributeDatasResponse)(nil),         // 10: semantic.RetrieveAttributeDatasResponse
	(*SetAttributeDatasResponse)(nil),              // 11: semantic.SetAttributeDatasResponse
	(*CloneAttributeDatasResponse)(nil),            // 12: semantic.CloneAttributeDatasResponse
	(*SetAttributeDatasRequest)(nil),               // 13: semantic.SetAttributeDatasRequest
	(*ChangeEntityAttributeDatasRequest)(nil),      // 14: semantic.ChangeEntityAttributeDatasRequest
	(*CloneAttributeDatasRequest)(nil),             // 15: semantic.CloneAttributeDatasRequest
	(*AttributeData)(nil),                          // 16: semantic.AttributeData
	(*PredictCategoryRequest)(nil),                 // 17: semantic.PredictCategoryRequest
	(*PredictCategoryResponse)(nil),                // 18: semantic.PredictCategoryResponse
	(*RetrieveCategoriesByRoleRequest)(nil),        // 19: semantic.RetrieveCategoriesByRoleRequest
	nil,                                            // 20: semantic.Category.ChildsEntry
	nil,                                            // 21: semantic.RetrieveCategoriesResponse.CategoriesEntry
	nil,                                            // 22: semantic.RetrieveAttributeSchemasResponse.AttributesEntry
	nil,                                            // 23: semantic.RetrieveAttributeDatasResponse.AttributesEntry
	nil,                                            // 24: semantic.CloneAttributeDatasResponse.AttributesEntry
	(*SetAttributeDatasRequest_Authorization)(nil), // 25: semantic.SetAttributeDatasRequest.Authorization
	(*pbshared.Entity)(nil),                        // 26: shared.Entity
	(*empty.Empty)(nil),                            // 27: google.protobuf.Empty
}
var file_semantic_proto_depIdxs = []int32{
	20, // 0: semantic.Category.childs:type_name -> semantic.Category.ChildsEntry
	21, // 1: semantic.RetrieveCategoriesResponse.categories:type_name -> semantic.RetrieveCategoriesResponse.CategoriesEntry
	26, // 2: semantic.RetrieveAttributeDatasRequest.entity:type_name -> shared.Entity
	26, // 3: semantic.DeleteAttributeDatasRequest.entity:type_name -> shared.Entity
	22, // 4: semantic.RetrieveAttributeSchemasResponse.attributes:type_name -> semantic.RetrieveAttributeSchemasResponse.AttributesEntry
	23, // 5: semantic.RetrieveAttributeDatasResponse.attributes:type_name -> semantic.RetrieveAttributeDatasResponse.AttributesEntry
	16, // 6: semantic.SetAttributeDatasResponse.data:type_name -> semantic.AttributeData
	24, // 7: semantic.CloneAttributeDatasResponse.attributes:type_name -> semantic.CloneAttributeDatasResponse.AttributesEntry
	25, // 8: semantic.SetAttributeDatasRequest.authorization:type_name -> semantic.SetAttributeDatasRequest.Authorization
	16, // 9: semantic.SetAttributeDatasRequest.data:type_name -> semantic.AttributeData
	26, // 10: semantic.ChangeEntityAttributeDatasRequest.from:type_name -> shared.Entity
	26, // 11: semantic.ChangeEntityAttributeDatasRequest.dest:type_name -> shared.Entity
	3,  // 12: semantic.PredictCategoryResponse.category:type_name -> semantic.Category
	3,  // 13: semantic.Category.ChildsEntry.value:type_name -> semantic.Category
	3,  // 14: semantic.RetrieveCategoriesResponse.CategoriesEntry.value:type_name -> semantic.Category
	4,  // 15: semantic.RetrieveAttributeSchemasResponse.AttributesEntry.value:type_name -> semantic.AttributeSchema
	16, // 16: semantic.RetrieveAttributeDatasResponse.AttributesEntry.value:type_name -> semantic.AttributeData
	16, // 17: semantic.CloneAttributeDatasResponse.AttributesEntry.value:type_name -> semantic.AttributeData
	26, // 18: semantic.SetAttributeDatasRequest.Authorization.entity:type_name -> shared.Entity
	27, // 19: semantic.ServiceProviders.RetrieveCategories:input_type -> google.protobuf.Empty
	0,  // 20: semantic.ServiceProviders.RetrieveShippingCategories:input_type -> semantic.RetrieveShippingCategoriesRequest
	2,  // 21: semantic.ServiceProviders.RetrieveCategory:input_type -> semantic.RetrieveCategoryRequest
	6,  // 22: semantic.ServiceProviders.RetrieveAttributeSchemas:input_type -> semantic.RetrieveAttributeSchemasRequest
	7,  // 23: semantic.ServiceProviders.RetrieveAttributeDatas:input_type -> semantic.RetrieveAttributeDatasRequest
	13, // 24: semantic.ServiceProviders.SetAttributeDatas:input_type -> semantic.SetAttributeDatasRequest
	27, // 25: semantic.Merchants.RetrieveCategories:input_type -> google.protobuf.Empty
	2,  // 26: semantic.Merchants.RetrieveCategory:input_type -> semantic.RetrieveCategoryRequest
	17, // 27: semantic.Products.PredictCategory:input_type -> semantic.PredictCategoryRequest
	2,  // 28: semantic.Products.RetrieveCategory:input_type -> semantic.RetrieveCategoryRequest
	27, // 29: semantic.Products.RetrieveCategories:input_type -> google.protobuf.Empty
	1,  // 30: semantic.Products.RetrieveCategoriesById:input_type -> semantic.RetrieveCategoriesByIdRequest
	6,  // 31: semantic.Products.RetrieveAttributeSchemas:input_type -> semantic.RetrieveAttributeSchemasRequest
	7,  // 32: semantic.Products.RetrieveAttributeDatas:input_type -> semantic.RetrieveAttributeDatasRequest
	13, // 33: semantic.Products.SetAttributeDatas:input_type -> semantic.SetAttributeDatasRequest
	14, // 34: semantic.Products.ChangeEntityAttributeDatas:input_type -> semantic.ChangeEntityAttributeDatasRequest
	15, // 35: semantic.Products.CloneAttributeDatas:input_type -> semantic.CloneAttributeDatasRequest
	8,  // 36: semantic.Products.DeleteAttributeDatas:input_type -> semantic.DeleteAttributeDatasRequest
	5,  // 37: semantic.ServiceProviders.RetrieveCategories:output_type -> semantic.RetrieveCategoriesResponse
	5,  // 38: semantic.ServiceProviders.RetrieveShippingCategories:output_type -> semantic.RetrieveCategoriesResponse
	3,  // 39: semantic.ServiceProviders.RetrieveCategory:output_type -> semantic.Category
	9,  // 40: semantic.ServiceProviders.RetrieveAttributeSchemas:output_type -> semantic.RetrieveAttributeSchemasResponse
	10, // 41: semantic.ServiceProviders.RetrieveAttributeDatas:output_type -> semantic.RetrieveAttributeDatasResponse
	11, // 42: semantic.ServiceProviders.SetAttributeDatas:output_type -> semantic.SetAttributeDatasResponse
	5,  // 43: semantic.Merchants.RetrieveCategories:output_type -> semantic.RetrieveCategoriesResponse
	3,  // 44: semantic.Merchants.RetrieveCategory:output_type -> semantic.Category
	18, // 45: semantic.Products.PredictCategory:output_type -> semantic.PredictCategoryResponse
	3,  // 46: semantic.Products.RetrieveCategory:output_type -> semantic.Category
	5,  // 47: semantic.Products.RetrieveCategories:output_type -> semantic.RetrieveCategoriesResponse
	5,  // 48: semantic.Products.RetrieveCategoriesById:output_type -> semantic.RetrieveCategoriesResponse
	9,  // 49: semantic.Products.RetrieveAttributeSchemas:output_type -> semantic.RetrieveAttributeSchemasResponse
	10, // 50: semantic.Products.RetrieveAttributeDatas:output_type -> semantic.RetrieveAttributeDatasResponse
	11, // 51: semantic.Products.SetAttributeDatas:output_type -> semantic.SetAttributeDatasResponse
	27, // 52: semantic.Products.ChangeEntityAttributeDatas:output_type -> google.protobuf.Empty
	12, // 53: semantic.Products.CloneAttributeDatas:output_type -> semantic.CloneAttributeDatasResponse
	27, // 54: semantic.Products.DeleteAttributeDatas:output_type -> google.protobuf.Empty
	37, // [37:55] is the sub-list for method output_type
	19, // [19:37] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_semantic_proto_init() }
func file_semantic_proto_init() {
	if File_semantic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_semantic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveShippingCategoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCategoriesByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveAttributeSchemasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveAttributeDatasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAttributeDatasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveAttributeSchemasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveAttributeDatasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAttributeDatasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneAttributeDatasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAttributeDatasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeEntityAttributeDatasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneAttributeDatasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCategoriesByRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semantic_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAttributeDatasRequest_Authorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_semantic_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*SetAttributeDatasRequest_Authorization_)(nil),
		(*SetAttributeDatasRequest_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_semantic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_semantic_proto_goTypes,
		DependencyIndexes: file_semantic_proto_depIdxs,
		MessageInfos:      file_semantic_proto_msgTypes,
	}.Build()
	File_semantic_proto = out.File
	file_semantic_proto_rawDesc = nil
	file_semantic_proto_goTypes = nil
	file_semantic_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServiceProvidersClient is the client API for ServiceProviders service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceProvidersClient interface {
	RetrieveCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error)
	RetrieveShippingCategories(ctx context.Context, in *RetrieveShippingCategoriesRequest, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error)
	RetrieveCategory(ctx context.Context, in *RetrieveCategoryRequest, opts ...grpc.CallOption) (*Category, error)
	RetrieveAttributeSchemas(ctx context.Context, in *RetrieveAttributeSchemasRequest, opts ...grpc.CallOption) (*RetrieveAttributeSchemasResponse, error)
	RetrieveAttributeDatas(ctx context.Context, in *RetrieveAttributeDatasRequest, opts ...grpc.CallOption) (*RetrieveAttributeDatasResponse, error)
	SetAttributeDatas(ctx context.Context, opts ...grpc.CallOption) (ServiceProviders_SetAttributeDatasClient, error)
}

type serviceProvidersClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceProvidersClient(cc grpc.ClientConnInterface) ServiceProvidersClient {
	return &serviceProvidersClient{cc}
}

func (c *serviceProvidersClient) RetrieveCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error) {
	out := new(RetrieveCategoriesResponse)
	err := c.cc.Invoke(ctx, "/semantic.ServiceProviders/RetrieveCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceProvidersClient) RetrieveShippingCategories(ctx context.Context, in *RetrieveShippingCategoriesRequest, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error) {
	out := new(RetrieveCategoriesResponse)
	err := c.cc.Invoke(ctx, "/semantic.ServiceProviders/RetrieveShippingCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceProvidersClient) RetrieveCategory(ctx context.Context, in *RetrieveCategoryRequest, opts ...grpc.CallOption) (*Category, error) {
	out := new(Category)
	err := c.cc.Invoke(ctx, "/semantic.ServiceProviders/RetrieveCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceProvidersClient) RetrieveAttributeSchemas(ctx context.Context, in *RetrieveAttributeSchemasRequest, opts ...grpc.CallOption) (*RetrieveAttributeSchemasResponse, error) {
	out := new(RetrieveAttributeSchemasResponse)
	err := c.cc.Invoke(ctx, "/semantic.ServiceProviders/RetrieveAttributeSchemas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceProvidersClient) RetrieveAttributeDatas(ctx context.Context, in *RetrieveAttributeDatasRequest, opts ...grpc.CallOption) (*RetrieveAttributeDatasResponse, error) {
	out := new(RetrieveAttributeDatasResponse)
	err := c.cc.Invoke(ctx, "/semantic.ServiceProviders/RetrieveAttributeDatas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceProvidersClient) SetAttributeDatas(ctx context.Context, opts ...grpc.CallOption) (ServiceProviders_SetAttributeDatasClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServiceProviders_serviceDesc.Streams[0], "/semantic.ServiceProviders/SetAttributeDatas", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceProvidersSetAttributeDatasClient{stream}
	return x, nil
}

type ServiceProviders_SetAttributeDatasClient interface {
	Send(*SetAttributeDatasRequest) error
	Recv() (*SetAttributeDatasResponse, error)
	grpc.ClientStream
}

type serviceProvidersSetAttributeDatasClient struct {
	grpc.ClientStream
}

func (x *serviceProvidersSetAttributeDatasClient) Send(m *SetAttributeDatasRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *serviceProvidersSetAttributeDatasClient) Recv() (*SetAttributeDatasResponse, error) {
	m := new(SetAttributeDatasResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ServiceProvidersServer is the server API for ServiceProviders service.
type ServiceProvidersServer interface {
	RetrieveCategories(context.Context, *empty.Empty) (*RetrieveCategoriesResponse, error)
	RetrieveShippingCategories(context.Context, *RetrieveShippingCategoriesRequest) (*RetrieveCategoriesResponse, error)
	RetrieveCategory(context.Context, *RetrieveCategoryRequest) (*Category, error)
	RetrieveAttributeSchemas(context.Context, *RetrieveAttributeSchemasRequest) (*RetrieveAttributeSchemasResponse, error)
	RetrieveAttributeDatas(context.Context, *RetrieveAttributeDatasRequest) (*RetrieveAttributeDatasResponse, error)
	SetAttributeDatas(ServiceProviders_SetAttributeDatasServer) error
}

// UnimplementedServiceProvidersServer can be embedded to have forward compatible implementations.
type UnimplementedServiceProvidersServer struct {
}

func (*UnimplementedServiceProvidersServer) RetrieveCategories(context.Context, *empty.Empty) (*RetrieveCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCategories not implemented")
}
func (*UnimplementedServiceProvidersServer) RetrieveShippingCategories(context.Context, *RetrieveShippingCategoriesRequest) (*RetrieveCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveShippingCategories not implemented")
}
func (*UnimplementedServiceProvidersServer) RetrieveCategory(context.Context, *RetrieveCategoryRequest) (*Category, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCategory not implemented")
}
func (*UnimplementedServiceProvidersServer) RetrieveAttributeSchemas(context.Context, *RetrieveAttributeSchemasRequest) (*RetrieveAttributeSchemasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveAttributeSchemas not implemented")
}
func (*UnimplementedServiceProvidersServer) RetrieveAttributeDatas(context.Context, *RetrieveAttributeDatasRequest) (*RetrieveAttributeDatasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveAttributeDatas not implemented")
}
func (*UnimplementedServiceProvidersServer) SetAttributeDatas(ServiceProviders_SetAttributeDatasServer) error {
	return status.Errorf(codes.Unimplemented, "method SetAttributeDatas not implemented")
}

func RegisterServiceProvidersServer(s *grpc.Server, srv ServiceProvidersServer) {
	s.RegisterService(&_ServiceProviders_serviceDesc, srv)
}

func _ServiceProviders_RetrieveCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceProvidersServer).RetrieveCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.ServiceProviders/RetrieveCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceProvidersServer).RetrieveCategories(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceProviders_RetrieveShippingCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveShippingCategoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceProvidersServer).RetrieveShippingCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.ServiceProviders/RetrieveShippingCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceProvidersServer).RetrieveShippingCategories(ctx, req.(*RetrieveShippingCategoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceProviders_RetrieveCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceProvidersServer).RetrieveCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.ServiceProviders/RetrieveCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceProvidersServer).RetrieveCategory(ctx, req.(*RetrieveCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceProviders_RetrieveAttributeSchemas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveAttributeSchemasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceProvidersServer).RetrieveAttributeSchemas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.ServiceProviders/RetrieveAttributeSchemas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceProvidersServer).RetrieveAttributeSchemas(ctx, req.(*RetrieveAttributeSchemasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceProviders_RetrieveAttributeDatas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveAttributeDatasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceProvidersServer).RetrieveAttributeDatas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.ServiceProviders/RetrieveAttributeDatas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceProvidersServer).RetrieveAttributeDatas(ctx, req.(*RetrieveAttributeDatasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceProviders_SetAttributeDatas_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ServiceProvidersServer).SetAttributeDatas(&serviceProvidersSetAttributeDatasServer{stream})
}

type ServiceProviders_SetAttributeDatasServer interface {
	Send(*SetAttributeDatasResponse) error
	Recv() (*SetAttributeDatasRequest, error)
	grpc.ServerStream
}

type serviceProvidersSetAttributeDatasServer struct {
	grpc.ServerStream
}

func (x *serviceProvidersSetAttributeDatasServer) Send(m *SetAttributeDatasResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *serviceProvidersSetAttributeDatasServer) Recv() (*SetAttributeDatasRequest, error) {
	m := new(SetAttributeDatasRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ServiceProviders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "semantic.ServiceProviders",
	HandlerType: (*ServiceProvidersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RetrieveCategories",
			Handler:    _ServiceProviders_RetrieveCategories_Handler,
		},
		{
			MethodName: "RetrieveShippingCategories",
			Handler:    _ServiceProviders_RetrieveShippingCategories_Handler,
		},
		{
			MethodName: "RetrieveCategory",
			Handler:    _ServiceProviders_RetrieveCategory_Handler,
		},
		{
			MethodName: "RetrieveAttributeSchemas",
			Handler:    _ServiceProviders_RetrieveAttributeSchemas_Handler,
		},
		{
			MethodName: "RetrieveAttributeDatas",
			Handler:    _ServiceProviders_RetrieveAttributeDatas_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SetAttributeDatas",
			Handler:       _ServiceProviders_SetAttributeDatas_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "semantic.proto",
}

// MerchantsClient is the client API for Merchants service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MerchantsClient interface {
	RetrieveCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error)
	RetrieveCategory(ctx context.Context, in *RetrieveCategoryRequest, opts ...grpc.CallOption) (*Category, error)
}

type merchantsClient struct {
	cc grpc.ClientConnInterface
}

func NewMerchantsClient(cc grpc.ClientConnInterface) MerchantsClient {
	return &merchantsClient{cc}
}

func (c *merchantsClient) RetrieveCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error) {
	out := new(RetrieveCategoriesResponse)
	err := c.cc.Invoke(ctx, "/semantic.Merchants/RetrieveCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantsClient) RetrieveCategory(ctx context.Context, in *RetrieveCategoryRequest, opts ...grpc.CallOption) (*Category, error) {
	out := new(Category)
	err := c.cc.Invoke(ctx, "/semantic.Merchants/RetrieveCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MerchantsServer is the server API for Merchants service.
type MerchantsServer interface {
	RetrieveCategories(context.Context, *empty.Empty) (*RetrieveCategoriesResponse, error)
	RetrieveCategory(context.Context, *RetrieveCategoryRequest) (*Category, error)
}

// UnimplementedMerchantsServer can be embedded to have forward compatible implementations.
type UnimplementedMerchantsServer struct {
}

func (*UnimplementedMerchantsServer) RetrieveCategories(context.Context, *empty.Empty) (*RetrieveCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCategories not implemented")
}
func (*UnimplementedMerchantsServer) RetrieveCategory(context.Context, *RetrieveCategoryRequest) (*Category, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCategory not implemented")
}

func RegisterMerchantsServer(s *grpc.Server, srv MerchantsServer) {
	s.RegisterService(&_Merchants_serviceDesc, srv)
}

func _Merchants_RetrieveCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantsServer).RetrieveCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Merchants/RetrieveCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantsServer).RetrieveCategories(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Merchants_RetrieveCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantsServer).RetrieveCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Merchants/RetrieveCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantsServer).RetrieveCategory(ctx, req.(*RetrieveCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Merchants_serviceDesc = grpc.ServiceDesc{
	ServiceName: "semantic.Merchants",
	HandlerType: (*MerchantsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RetrieveCategories",
			Handler:    _Merchants_RetrieveCategories_Handler,
		},
		{
			MethodName: "RetrieveCategory",
			Handler:    _Merchants_RetrieveCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "semantic.proto",
}

// ProductsClient is the client API for Products service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductsClient interface {
	PredictCategory(ctx context.Context, opts ...grpc.CallOption) (Products_PredictCategoryClient, error)
	RetrieveCategory(ctx context.Context, in *RetrieveCategoryRequest, opts ...grpc.CallOption) (*Category, error)
	RetrieveCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error)
	RetrieveCategoriesById(ctx context.Context, in *RetrieveCategoriesByIdRequest, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error)
	RetrieveAttributeSchemas(ctx context.Context, in *RetrieveAttributeSchemasRequest, opts ...grpc.CallOption) (*RetrieveAttributeSchemasResponse, error)
	RetrieveAttributeDatas(ctx context.Context, in *RetrieveAttributeDatasRequest, opts ...grpc.CallOption) (*RetrieveAttributeDatasResponse, error)
	SetAttributeDatas(ctx context.Context, opts ...grpc.CallOption) (Products_SetAttributeDatasClient, error)
	ChangeEntityAttributeDatas(ctx context.Context, in *ChangeEntityAttributeDatasRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CloneAttributeDatas(ctx context.Context, in *CloneAttributeDatasRequest, opts ...grpc.CallOption) (*CloneAttributeDatasResponse, error)
	DeleteAttributeDatas(ctx context.Context, in *DeleteAttributeDatasRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type productsClient struct {
	cc grpc.ClientConnInterface
}

func NewProductsClient(cc grpc.ClientConnInterface) ProductsClient {
	return &productsClient{cc}
}

func (c *productsClient) PredictCategory(ctx context.Context, opts ...grpc.CallOption) (Products_PredictCategoryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Products_serviceDesc.Streams[0], "/semantic.Products/PredictCategory", opts...)
	if err != nil {
		return nil, err
	}
	x := &productsPredictCategoryClient{stream}
	return x, nil
}

type Products_PredictCategoryClient interface {
	Send(*PredictCategoryRequest) error
	Recv() (*PredictCategoryResponse, error)
	grpc.ClientStream
}

type productsPredictCategoryClient struct {
	grpc.ClientStream
}

func (x *productsPredictCategoryClient) Send(m *PredictCategoryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *productsPredictCategoryClient) Recv() (*PredictCategoryResponse, error) {
	m := new(PredictCategoryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *productsClient) RetrieveCategory(ctx context.Context, in *RetrieveCategoryRequest, opts ...grpc.CallOption) (*Category, error) {
	out := new(Category)
	err := c.cc.Invoke(ctx, "/semantic.Products/RetrieveCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productsClient) RetrieveCategories(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error) {
	out := new(RetrieveCategoriesResponse)
	err := c.cc.Invoke(ctx, "/semantic.Products/RetrieveCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productsClient) RetrieveCategoriesById(ctx context.Context, in *RetrieveCategoriesByIdRequest, opts ...grpc.CallOption) (*RetrieveCategoriesResponse, error) {
	out := new(RetrieveCategoriesResponse)
	err := c.cc.Invoke(ctx, "/semantic.Products/RetrieveCategoriesById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productsClient) RetrieveAttributeSchemas(ctx context.Context, in *RetrieveAttributeSchemasRequest, opts ...grpc.CallOption) (*RetrieveAttributeSchemasResponse, error) {
	out := new(RetrieveAttributeSchemasResponse)
	err := c.cc.Invoke(ctx, "/semantic.Products/RetrieveAttributeSchemas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productsClient) RetrieveAttributeDatas(ctx context.Context, in *RetrieveAttributeDatasRequest, opts ...grpc.CallOption) (*RetrieveAttributeDatasResponse, error) {
	out := new(RetrieveAttributeDatasResponse)
	err := c.cc.Invoke(ctx, "/semantic.Products/RetrieveAttributeDatas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productsClient) SetAttributeDatas(ctx context.Context, opts ...grpc.CallOption) (Products_SetAttributeDatasClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Products_serviceDesc.Streams[1], "/semantic.Products/SetAttributeDatas", opts...)
	if err != nil {
		return nil, err
	}
	x := &productsSetAttributeDatasClient{stream}
	return x, nil
}

type Products_SetAttributeDatasClient interface {
	Send(*SetAttributeDatasRequest) error
	Recv() (*SetAttributeDatasResponse, error)
	grpc.ClientStream
}

type productsSetAttributeDatasClient struct {
	grpc.ClientStream
}

func (x *productsSetAttributeDatasClient) Send(m *SetAttributeDatasRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *productsSetAttributeDatasClient) Recv() (*SetAttributeDatasResponse, error) {
	m := new(SetAttributeDatasResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *productsClient) ChangeEntityAttributeDatas(ctx context.Context, in *ChangeEntityAttributeDatasRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/semantic.Products/ChangeEntityAttributeDatas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productsClient) CloneAttributeDatas(ctx context.Context, in *CloneAttributeDatasRequest, opts ...grpc.CallOption) (*CloneAttributeDatasResponse, error) {
	out := new(CloneAttributeDatasResponse)
	err := c.cc.Invoke(ctx, "/semantic.Products/CloneAttributeDatas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productsClient) DeleteAttributeDatas(ctx context.Context, in *DeleteAttributeDatasRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/semantic.Products/DeleteAttributeDatas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductsServer is the server API for Products service.
type ProductsServer interface {
	PredictCategory(Products_PredictCategoryServer) error
	RetrieveCategory(context.Context, *RetrieveCategoryRequest) (*Category, error)
	RetrieveCategories(context.Context, *empty.Empty) (*RetrieveCategoriesResponse, error)
	RetrieveCategoriesById(context.Context, *RetrieveCategoriesByIdRequest) (*RetrieveCategoriesResponse, error)
	RetrieveAttributeSchemas(context.Context, *RetrieveAttributeSchemasRequest) (*RetrieveAttributeSchemasResponse, error)
	RetrieveAttributeDatas(context.Context, *RetrieveAttributeDatasRequest) (*RetrieveAttributeDatasResponse, error)
	SetAttributeDatas(Products_SetAttributeDatasServer) error
	ChangeEntityAttributeDatas(context.Context, *ChangeEntityAttributeDatasRequest) (*empty.Empty, error)
	CloneAttributeDatas(context.Context, *CloneAttributeDatasRequest) (*CloneAttributeDatasResponse, error)
	DeleteAttributeDatas(context.Context, *DeleteAttributeDatasRequest) (*empty.Empty, error)
}

// UnimplementedProductsServer can be embedded to have forward compatible implementations.
type UnimplementedProductsServer struct {
}

func (*UnimplementedProductsServer) PredictCategory(Products_PredictCategoryServer) error {
	return status.Errorf(codes.Unimplemented, "method PredictCategory not implemented")
}
func (*UnimplementedProductsServer) RetrieveCategory(context.Context, *RetrieveCategoryRequest) (*Category, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCategory not implemented")
}
func (*UnimplementedProductsServer) RetrieveCategories(context.Context, *empty.Empty) (*RetrieveCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCategories not implemented")
}
func (*UnimplementedProductsServer) RetrieveCategoriesById(context.Context, *RetrieveCategoriesByIdRequest) (*RetrieveCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCategoriesById not implemented")
}
func (*UnimplementedProductsServer) RetrieveAttributeSchemas(context.Context, *RetrieveAttributeSchemasRequest) (*RetrieveAttributeSchemasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveAttributeSchemas not implemented")
}
func (*UnimplementedProductsServer) RetrieveAttributeDatas(context.Context, *RetrieveAttributeDatasRequest) (*RetrieveAttributeDatasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveAttributeDatas not implemented")
}
func (*UnimplementedProductsServer) SetAttributeDatas(Products_SetAttributeDatasServer) error {
	return status.Errorf(codes.Unimplemented, "method SetAttributeDatas not implemented")
}
func (*UnimplementedProductsServer) ChangeEntityAttributeDatas(context.Context, *ChangeEntityAttributeDatasRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeEntityAttributeDatas not implemented")
}
func (*UnimplementedProductsServer) CloneAttributeDatas(context.Context, *CloneAttributeDatasRequest) (*CloneAttributeDatasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloneAttributeDatas not implemented")
}
func (*UnimplementedProductsServer) DeleteAttributeDatas(context.Context, *DeleteAttributeDatasRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAttributeDatas not implemented")
}

func RegisterProductsServer(s *grpc.Server, srv ProductsServer) {
	s.RegisterService(&_Products_serviceDesc, srv)
}

func _Products_PredictCategory_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProductsServer).PredictCategory(&productsPredictCategoryServer{stream})
}

type Products_PredictCategoryServer interface {
	Send(*PredictCategoryResponse) error
	Recv() (*PredictCategoryRequest, error)
	grpc.ServerStream
}

type productsPredictCategoryServer struct {
	grpc.ServerStream
}

func (x *productsPredictCategoryServer) Send(m *PredictCategoryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *productsPredictCategoryServer) Recv() (*PredictCategoryRequest, error) {
	m := new(PredictCategoryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Products_RetrieveCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductsServer).RetrieveCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Products/RetrieveCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductsServer).RetrieveCategory(ctx, req.(*RetrieveCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Products_RetrieveCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductsServer).RetrieveCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Products/RetrieveCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductsServer).RetrieveCategories(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Products_RetrieveCategoriesById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCategoriesByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductsServer).RetrieveCategoriesById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Products/RetrieveCategoriesById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductsServer).RetrieveCategoriesById(ctx, req.(*RetrieveCategoriesByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Products_RetrieveAttributeSchemas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveAttributeSchemasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductsServer).RetrieveAttributeSchemas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Products/RetrieveAttributeSchemas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductsServer).RetrieveAttributeSchemas(ctx, req.(*RetrieveAttributeSchemasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Products_RetrieveAttributeDatas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveAttributeDatasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductsServer).RetrieveAttributeDatas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Products/RetrieveAttributeDatas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductsServer).RetrieveAttributeDatas(ctx, req.(*RetrieveAttributeDatasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Products_SetAttributeDatas_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProductsServer).SetAttributeDatas(&productsSetAttributeDatasServer{stream})
}

type Products_SetAttributeDatasServer interface {
	Send(*SetAttributeDatasResponse) error
	Recv() (*SetAttributeDatasRequest, error)
	grpc.ServerStream
}

type productsSetAttributeDatasServer struct {
	grpc.ServerStream
}

func (x *productsSetAttributeDatasServer) Send(m *SetAttributeDatasResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *productsSetAttributeDatasServer) Recv() (*SetAttributeDatasRequest, error) {
	m := new(SetAttributeDatasRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Products_ChangeEntityAttributeDatas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeEntityAttributeDatasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductsServer).ChangeEntityAttributeDatas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Products/ChangeEntityAttributeDatas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductsServer).ChangeEntityAttributeDatas(ctx, req.(*ChangeEntityAttributeDatasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Products_CloneAttributeDatas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloneAttributeDatasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductsServer).CloneAttributeDatas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Products/CloneAttributeDatas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductsServer).CloneAttributeDatas(ctx, req.(*CloneAttributeDatasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Products_DeleteAttributeDatas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAttributeDatasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductsServer).DeleteAttributeDatas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/semantic.Products/DeleteAttributeDatas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductsServer).DeleteAttributeDatas(ctx, req.(*DeleteAttributeDatasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Products_serviceDesc = grpc.ServiceDesc{
	ServiceName: "semantic.Products",
	HandlerType: (*ProductsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RetrieveCategory",
			Handler:    _Products_RetrieveCategory_Handler,
		},
		{
			MethodName: "RetrieveCategories",
			Handler:    _Products_RetrieveCategories_Handler,
		},
		{
			MethodName: "RetrieveCategoriesById",
			Handler:    _Products_RetrieveCategoriesById_Handler,
		},
		{
			MethodName: "RetrieveAttributeSchemas",
			Handler:    _Products_RetrieveAttributeSchemas_Handler,
		},
		{
			MethodName: "RetrieveAttributeDatas",
			Handler:    _Products_RetrieveAttributeDatas_Handler,
		},
		{
			MethodName: "ChangeEntityAttributeDatas",
			Handler:    _Products_ChangeEntityAttributeDatas_Handler,
		},
		{
			MethodName: "CloneAttributeDatas",
			Handler:    _Products_CloneAttributeDatas_Handler,
		},
		{
			MethodName: "DeleteAttributeDatas",
			Handler:    _Products_DeleteAttributeDatas_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PredictCategory",
			Handler:       _Products_PredictCategory_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SetAttributeDatas",
			Handler:       _Products_SetAttributeDatas_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "semantic.proto",
}

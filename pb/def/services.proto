syntax = "proto3";

import "shared/time.proto";
import "validate/validate.proto";
import "google/protobuf/empty.proto";

option go_package = "./pbservices";

package services;

service Viewer{
  rpc SearchServices (SearchServicesRequest) returns (SearchServicesResponse){}

  rpc SearchAvailableShippings (SearchAvailableShippingsRequest) returns (SearchAvailableShippingsResponse){}

  rpc RetrieveServiceDetail (RetrieveServiceDetailRequest) returns (ServiceDetail){}
}


service Calendars{
  rpc CreateCalendar (CreateCalendarRequest) returns (CreateCalendarResponse) {}
  rpc RetrieveCalendar (RetrieveCalendarRequest) returns (CalendarDetail) {}
  rpc RetrieveMyCalendars (RetrieveMyCalendarsRequest) returns (RetrieveMyCalendarsResponse) {}

  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse){}

  rpc ConfirmEvent(ConfirmEventRequest) returns (google.protobuf.Empty){}
}

service Register{
  rpc RetrieveRegistry (RetrieveRegistryRequest) returns (RegistryDetail) {}
  rpc DeleteRegistry (DeleteRegistryRequest) returns (google.protobuf.Empty) {}

  rpc Prev (PrevRequest) returns (google.protobuf.Empty) {}

  rpc First (FirstRequest) returns (FirstResponse) {}
  rpc Second (SecondRequest) returns (google.protobuf.Empty) {}
  rpc Third (ThirdRequest) returns (ThirdResponse) {}
}

message SearchAvailableShippingsRequest {
  shared.TimeOfDay start = 1;
  shared.TimeOfDay end = 2;
  string dow = 3 [(validate.rules).string = {in:
    ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
  }];
  uint64 max_vol_weight = 4;
}

message SearchAvailableShippingsResponse {
  map <uint64, ServiceSearchResult> services = 1;
}

message SearchServicesRequest {
  string query = 1;
  PageRequest page = 2;
}

message SearchServicesResponse {
  map <uint64, ServiceSearchResult> services = 1;
  PageResponse page = 2;
}

message PageRequest {
  string cursor = 1;
  uint64 size = 2;
}

message PageResponse {
  string next_cursor = 1;
  uint64 total_size = 2;
}

message RetrieveServiceDetailRequest {
  uint64 service_id = 1;
}

message ServiceSearchResult {
  message Service{
    string title = 1;
    Price price = 2;
    uint64 address_id = 3;
    uint64 calendar_id = 4;
  }
  Service service = 1;
  User user = 2;
}

message ServiceDetail {
  Service service = 1;
  User user = 2;
  Address address = 3;
  CalendarDetail calendar = 4;
}

message User {
  string name = 1;
  string surname = 2;
}

message Address {
  string zipcode = 1;
  string street = 2;
  uint64 number = 3;
  uint64 floor = 4;
  string department = 5;
}

message RetrieveCalendarRequest {
  uint64 calendar_id = 1;
}

message RetrieveMyCalendarsRequest {
  string access_token = 1;
}

message RetrieveMyCalendarsResponse {
  map<uint64, CalendarDetail> calendars = 1;
}

message Event {
  uint64 calendar_id = 1;
  uint64 claimant_id = 2;  // buyer user
  string dow = 3 [(validate.rules).string = {in:
    ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
  }];
  shared.TimeOfDay start = 4;
  shared.TimeOfDay end = 5;
  uint64 order_id = 6;
  bool is_confirmed = 7;
}

message RetrieveRegistryRequest {
  string access_token = 1;
}

message DeleteRegistryRequest {
  string access_token = 1;
}

message Registry{
  uint64 stage = 1;
  FirstRequest.Body first = 2;
  SecondRequest.Body second = 3;
  ThirdRequest.Body third = 4;
}

message RegistryDetail {
  uint64 registry_id = 1;
  Registry registry = 2;
  Calendar calendar = 3;
  map<uint64, Availability> availabilities = 4;
}

message Service {
  uint64 address_id = 1;
  string title = 2;
  uint64 duration_in_minutes = 3;
  Price price = 4;
  uint64 calendar_id = 5;
  uint64 user_id = 6;
}

message PrevRequest {
  string access_token = 1;
}

message FirstRequest {
  message Body {
    uint64 address_id = 1;
  }
  string access_token = 1;
  Body body = 2;
}

message FirstResponse {
  uint64 registry_id = 1;
}

message SecondRequest {
  message Body {
    string title = 1;
    uint64 duration_in_minutes = 2;
    Price price = 3;
  }
  string access_token = 1;
  Body body = 2;
}

message ThirdRequest {
  message Body {
    uint64 calendar_id = 1;
  }

  string access_token = 1;
  Body body = 2;
}

message ThirdResponse {
  uint64 service_id = 1;
  Service service = 2;
}

message CreateCalendarRequest {
  string access_token = 1;
  Calendar calendar = 2;
  repeated Availability availabilities = 3;
}

message Calendar {
  string name = 1;
  uint64 group_id = 2;
  uint64 user_id = 3;
}

message CalendarDetail{
  Calendar calendar = 1;
  map<uint64,Availability> availabilities = 2;
  map<uint64,Event> events = 3;
}

message CreateEventRequest {
  string access_token = 1;
  uint64 calendar_id = 2;
  Event event = 3;
}

message ConfirmEventRequest {
  string access_token = 1;
  uint64 event_id = 2;
}

message CreateEventResponse {
  uint64 event_id = 1;
  Event event = 2;
}

message CreateCalendarResponse {
  uint64 calendar_id = 1;
  Calendar calendar = 2;
  map<uint64,Availability> availabilities = 3;
}

message Availability {
  uint64 calendar_id = 1;
  string dow = 2 [(validate.rules).string = {in:
    ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
  }];
  shared.TimeOfDay start = 3;
  shared.TimeOfDay end = 4;
}

message Price {
  double min = 1;
  double max = 2;
}

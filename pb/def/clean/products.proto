syntax = "proto3";

import "validate/validate.proto";
import "google/protobuf/empty.proto";

option go_package = "./pbproducts";

package products;

//service Manager {
// rpc
//}

service Viewer {
  rpc SearchProducts (SearchProductsRequest) returns (SearchProductsResponse){}
  rpc RetrieveProducts (RetrieveProductsRequest) returns (RetrieveProductsResponse){}

  rpc RetrieveProductDetail (RetrieveProductDetailRequest) returns (ProductDetail){}
}

message RetrieveProductsRequest {
  repeated uint64 ids = 1;
}

message RetrieveProductsResponse {
  map<uint64, Product> products = 1;
}

message SearchProductsRequest {
  string query = 1;
  PageRequest page = 2;
}

message SearchProductsResponse {
  map <uint64, ProductSearchResult> products = 1;
  PageResponse page = 2;
}

message RetrieveProductDetailRequest {
  uint64 product_id = 1;
}


message Product {
  string title = 1;
  uint64 category_id = 2;
  double price = 3;
  uint64 stock = 4;
  uint64 user_id = 6;
}

message Image {
  string uri = 1;
}


message ProductDetail {
  Product product = 1;
  User user = 2;
  map<uint64, Attribute> attributes = 3;
  map<string, Image> images = 4;
}

message ProductSearchResult {
  message Product {
    string title = 1;
    double price = 2;
  }
  Product product = 1;
  User user = 2;
  map<string, Image> images = 3;
}

message User {
  string name = 1;
  string surname = 2;
  string image_url = 3;
}

message Attribute {
  string name = 1;
  uint64 schema_id = 2;
  string value_type = 3;
  repeated string values = 4;
}

service Creator {
  rpc Next (StageChangeRequest) returns (StageChangeResponse) {}
  rpc Prev (StageChangeRequest) returns (StageChangeResponse) {}

  rpc First (stream FirstRequest) returns (FirstResponse) {}
  rpc Second (stream SecondRequest) returns (google.protobuf.Empty) {}
  rpc Third (stream ThirdRequest) returns (google.protobuf.Empty) {}

  rpc CloneDraftLine (CloneDraftLineRequest) returns (CloneDraftLineResponse) {}
  rpc DeleteDraftLine (DeleteDraftLineRequest) returns (google.protobuf.Empty) {}

  rpc RetrieveDraft(RetrieveDraftRequest) returns (DraftDetail) {}
  rpc DeleteDraft (DeleteDraftRequest) returns (google.protobuf.Empty) {}
}

message StageChangeRequest{
  string access_token = 1;
}

message StageChangeResponse{
  uint64 size = 1;
}

message DraftLine {
  uint64 draft_line_id = 1;
  DraftLineFirst first = 2;
  DraftLineSecond second = 3;
  DraftLineThird third = 4;
}

message DraftLineFirst {
  string title = 2;
  uint64 category_id = 3;
}

message DraftLineSecond {
  double price = 1;
  uint64 stock = 2;
  repeated AttributeData attributes = 3;
}

message DraftLineThird{
}

message FirstRequest{
  oneof corpus{
    string access_token = 1;

    DraftLineFirst draft_line = 2; // consider that, if sending two eq titles, it'll
    // return an err
  }
}

message FirstResponse{
  uint64 draft_id = 1;
}

message SecondRequest{
  message Body {
    uint64 draft_line_id = 1;
    DraftLineSecond draft_line = 2;
  }

  oneof corpus{
    string access_token = 1;
    Body body = 2;
  }
}

message ThirdRequest {
  message Body {
    uint64 draft_line_id = 1;
    DraftLineThird draft_line = 2;
  }

  oneof corpus{
    string access_token = 1;
    Body body = 2;
  }
}

message AttributeData {
  uint64 schema_id = 1;
  repeated string values = 2;
}

message DeleteDraftRequest {
  string access_token = 1;
}

message DeleteDraftLineRequest {
  string access_token = 1;
  uint64 draft_line_id = 2;
}

message CloneDraftLineRequest {
  string access_token = 1;
  uint64 draft_line_id = 2;
}

message CloneDraftLineResponse {
  DraftLine draft_line = 1;
}

message RetrieveDraftRequest{
  string access_token = 1;
}

message Draft {
  uint64 stage = 1;
  uint64 user_id = 2;
}

message DraftDetail{
  uint64 draft_id = 1;
  Draft draft = 2;
  map<uint64, DraftLine> lines = 3;
}

message PageRequest {
  string cursor = 1;
  uint64 size = 2;
}

message PageResponse {
  string next_cursor = 1;
  uint64 total_size = 2;
}


syntax = "proto3";

import "validate/validate.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "shared/time.proto";
import "shared/entity.proto";

option go_package = "./pbcheckout";

package checkout;

service Cards {
  rpc CreateCard(CreateCardRequest) returns (CreateCardResponse){}
  rpc VerifyCVV(VerifyCVVRequest) returns (google.protobuf.Empty){}
  rpc RetrieveMyCards(RetrieveMyCardsRequest) returns (RetrieveMyCardsResponse){}
}

service Reservations {
  rpc CreateReservation (CreateReservationRequest) returns (CreateReservationResponse){}

  rpc Retrieve (RetrieveOrderRequest) returns (Reservation){}

  rpc RetrieveCurrent (RetrieveCurrentRequest) returns (RetrieveReservationResponse){}
  rpc StateMachine (google.protobuf.Empty) returns (StateMachineResponse){}

  rpc Prev(UpdateStateRequest) returns (RetrieveReservationResponse){}
  rpc Next(UpdateStateRequest) returns (RetrieveReservationResponse){}

  rpc Cancel(UpdateStateRequest) returns (RetrieveReservationResponse){}
}

service Bookings {
  rpc CreateBooking (CreateBookingRequest) returns (CreateBookingResponse){}

  rpc Retrieve (RetrieveOrderRequest) returns (Booking){}

  rpc RetrieveCurrent (RetrieveCurrentRequest) returns (RetrieveBookingResponse){}
  rpc StateMachine (google.protobuf.Empty) returns (StateMachineResponse){}

  rpc Prev(UpdateStateRequest) returns (RetrieveBookingResponse){}
  rpc Next(UpdateStateRequest) returns (RetrieveBookingResponse){}

  rpc Cancel(UpdateStateRequest) returns (RetrieveBookingResponse){}
}

service Payments {
  rpc CreatePayment(CreatePaymentRequest) returns(CreatePaymentResponse){}
  rpc Retrieve (RetrievePaymentRequest) returns (Payment){}
}

service Shippings {
  rpc CreateShipping(CreateShippingRequest) returns (CreateShippingResponse){}
  rpc Retrieve (RetrieveShippingRequest) returns (Shipping){}

  rpc Prev(UpdateStateRequest) returns (RetrieveShippingResponse){}
  rpc Next(UpdateStateRequest) returns (RetrieveShippingResponse){}
  rpc Cancel(UpdateStateRequest) returns (RetrievePurchaseResponse){}
}

message RetrieveShippingResponse {
  uint64 shipping_id = 1;
  Shipping shipping = 2;
}

service Purchases {
  rpc CreatePurchase (CreatePurchaseRequest) returns (CreatePurchaseResponse){}

  rpc AssignDestAddress(AssignDestAddressRequest) returns (google.protobuf.Empty){}

  rpc Retrieve (RetrieveOrderRequest) returns (Purchase){}

  rpc RetrieveShippingMethods(RetrieveShippingMethodsRequest) returns (RetrieveShippingMethodsResponse) {}

  rpc ConfirmPurchase(ConfirmPurchaseRequest) returns(RetrievePurchaseResponse){}

  rpc RetrieveCurrent (RetrieveCurrentRequest) returns (RetrievePurchaseResponse){}
  rpc StateMachine (google.protobuf.Empty) returns (StateMachineResponse){}

  rpc Prev(UpdateStateRequest) returns (RetrievePurchaseResponse){}
  rpc Next(UpdateStateRequest) returns (RetrievePurchaseResponse){}

  rpc Cancel(UpdateStateRequest) returns (RetrievePurchaseResponse){}
}

message RetrievePaymentRequest {
  string access_token = 1;
  uint64 payment_id = 2;
}

message RetrieveShippingRequest {
  string access_token = 1;
  uint64 shipping_id = 2;
}

message RetrieveOrderRequest {
  string access_token = 1;
  uint64 order_id = 2;
}

message ConfirmPurchaseRequest {
  string access_token = 1;
  uint64 purchase_id = 2;
}

message VerifyCVVRequest{
  string access_token = 1;
  uint64 card_id = 2;
  uint64 cvv = 3;
}

message RetrieveMyCardsRequest{
  string access_token = 1;
}

message RetrieveMyCardsResponse{
  map<uint64, Card> cards = 1;
}

message CreateCardRequest{
  string access_token = 1;
  CardInput card = 2;
}

message CreatePaymentRequest{
  string access_token = 1;
  PaymentInput payment = 2;
}

message CreatePaymentResponse{
  uint64 payment_id = 1;
  Payment payment = 2;
}

message CreateCardResponse{
  uint64 card_id = 1;
  Card card = 2;
}

message UpdateStateRequest{
  string access_token = 1;
}

message RetrieveReservationResponse{
  uint64 reservation_id = 1;
  Reservation reservation = 2;
}

message RetrieveBookingResponse{
  uint64 booking_id = 1;
  Booking booking = 2;
}

message RetrievePurchaseResponse{
  uint64 purchase_id = 1;
  Purchase purchase = 2;
}

message AssignDestAddressRequest{
  string access_token = 1;
  uint64 dest_address_id = 2;
}

message CreateShippingRequest{
  message Shipping {
    uint64 shipping_method_id = 1;
    shared.TimeOfDay time = 2;
    string dow = 3;
  }
  string access_token = 1;
  Shipping shipping = 2;
}

message CreateShippingResponse{
  uint64 shipping_id = 1;
  Shipping shipping = 2;
}

message Shipping{
  double amount = 1;
  uint64 event_id = 2;
  uint64 duration_in_minutes = 3;
  uint64 src_address_id = 4;
  uint64 dest_address_id = 5;
  double distance_in_kilometers = 6;
  uint64 user_id = 7;
  uint64 shipping_method_id = 8;
}

message RetrieveShippingMethodsRequest {
  string access_token = 1;
  shared.TimeOfDay time = 2;
  string dow = 3;
}

message ShippingMethod  {
  double amount = 1;
  uint64 duration_in_minutes = 2;
  uint64 user_id = 3;
  string title = 4;
}

message RetrieveShippingMethodsResponse {
  map<uint64, ShippingMethod> shipping_methods = 1;
}

message CreateReservationResponse {
  uint64 reservation_id = 1;
  Reservation reservation = 2;
}

message CreatePurchaseResponse {
  uint64 purchase_id = 1;
  Purchase purchase = 2;
}

message CreateBookingResponse {
  uint64 booking_id = 1;
  Purchase booking = 2;
}

message CreateReservationRequest {
  string access_token = 1;
  uint64 product_id = 2;
  uint64 days = 3;
}

message CreateBookingRequest {
  string access_token = 1;
  uint64 service_id = 2;
}

message CreatePurchaseRequest {
  string access_token = 1;
  map<uint64,uint64> items = 2; // { product_id: quantity }
}

message StateMachineResponse {
  message StateDefinition {
    int64 stage = 1;
    string name = 2;
    string description = 3;
  }
  repeated StateDefinition states = 1;
}

message Reservation {
  uint64 user_id = 1;
  Timestamp timestamp = 2;
  map<uint64,uint64> items = 3; // { product_id: quantity }
  uint64 days = 4;
  double amount = 5;  // calculated at req time
  uint64 merchant_id = 6;
}

message Purchase {
  uint64 user_id = 1;
  Timestamp timestamp = 2;
  map<uint64,uint64> items = 3; // { product_id: quantity }
  double amount = 4;  // calculated at req time
  uint64 src_address_id = 5;
  uint64 dest_address_id = 6;
  uint64 merchant_id = 7;
  double distance_in_kilometers = 8;
  uint64 shipping_id = 9;
}

message Booking {
  uint64 user_id = 1;
  Timestamp timestamp = 2;
  uint64 service_id = 3;
  double amount = 4;  // calculated at req time
}

message RetrieveCurrentRequest {
  string access_token = 1;
}

message StateChange {
  string name = 1;
  google.protobuf.Timestamp created_at = 2;
  int64 stage = 3;
}

message Shipment {
  uint64 purchase_id = 1;
  map<uint64, StateChange> state_changes = 2;
  uint64 shipping_method_id = 3;
  Timestamp timestamp = 4;
}

message Timestamp{
  google.protobuf.Timestamp created_at = 1;
  google.protobuf.Timestamp updated_at = 2;
}

message PaymentInput {
  // amount will be inferred through payment_method_id:installments
  uint64 payment_method_id = 1;
  uint64 installments = 2;
  uint64 card_id = 3;
  shared.Entity order = 4;
}

message Payment {
  uint64 user_id = 1;
  double amount = 2;
  Timestamp timestamp = 3;
  uint64 payment_method_id = 6;
  uint64 installments = 7;
  uint64 card_id = 8;
}

message CardInput {
  uint64 number = 1;
  uint64 cvv = 2;
  uint64 expiry_month = 3;
  uint64 expiry_year = 4;
  CardHolder holder = 5;
}

message Card {
  uint64 last_four_digits = 1;
  uint64 expiry_month = 2;
  uint64 expiry_year = 3;
  CardHolder holder = 4;
}

message CardHolder {
  uint64 dni = 1;
  string name = 2;
}


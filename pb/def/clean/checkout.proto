syntax = "proto3";

import "validate/validate.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "shared/time.proto";
import "shared/entity.proto";

option go_package = "./pbcheckout";

package checkout;

service Reservations {
  rpc CreateReservation (CreateReservationRequest) returns (CreateReservationResponse){}

  rpc RetrieveCurrent (RetrieveCurrentRequest) returns (RetrieveReservationResponse){}
  rpc StateMachine (google.protobuf.Empty) returns (StateMachineResponse){}

  rpc Prev(UpdateOrderStateRequest) returns (RetrieveReservationResponse){}
  rpc Next(UpdateOrderStateRequest) returns (RetrieveReservationResponse){}

  rpc Cancel(UpdateOrderStateRequest) returns (RetrieveReservationResponse){}
}

service Bookings {
  rpc CreateBooking (CreateBookingRequest) returns (CreateBookingResponse){}

  rpc RetrieveCurrent (RetrieveCurrentRequest) returns (RetrieveBookingResponse){}
  rpc StateMachine (google.protobuf.Empty) returns (StateMachineResponse){}

  rpc Prev(UpdateOrderStateRequest) returns (RetrieveBookingResponse){}
  rpc Next(UpdateOrderStateRequest) returns (RetrieveBookingResponse){}

  rpc Cancel(UpdateOrderStateRequest) returns (RetrieveBookingResponse){}
}

service Purchases {
  rpc CreatePurchase (CreatePurchaseRequest) returns (CreatePurchaseResponse){}

  rpc AssignDestAddress(AssignDestAddressRequest) returns (google.protobuf.Empty){}

  rpc AssignShippingMethod(AssignShippingMethodRequest) returns (google.protobuf.Empty){}
  rpc RetrieveShippingMethods(RetrieveShippingMethodsRequest) returns (RetrieveShippingMethodsResponse) {}

  rpc RetrieveCurrent (RetrieveCurrentRequest) returns (RetrievePurchaseResponse){}
  rpc StateMachine (google.protobuf.Empty) returns (StateMachineResponse){}

  rpc Prev(UpdateOrderStateRequest) returns (RetrievePurchaseResponse){}
  rpc Next(UpdateOrderStateRequest) returns (RetrievePurchaseResponse){}

  rpc Cancel(UpdateOrderStateRequest) returns (RetrievePurchaseResponse){}
}

message UpdateOrderStateRequest{
  string access_token = 1;
}

message RetrieveReservationResponse{
  uint64 reservation_id = 1;
  Reservation reservation = 2;
}

message RetrieveBookingResponse{
  uint64 booking_id = 1;
  Booking booking = 2;
}

message RetrievePurchaseResponse{
  uint64 purchase_id = 1;
  Purchase purchase = 2;
}

message AssignDestAddressRequest{
  string access_token = 1;
  uint64 dest_address_id = 2;
}

message AssignShippingMethodRequest{
  string access_token = 1;
  uint64 service_id = 2;
}

message RetrieveShippingMethodsRequest {
  string access_token = 1;
  shared.TimeOfDay time = 2;
  string dow = 3;
}

message ShippingMethod{
  Shipping service = 1;
  User user = 2;
}

message Shipping  {
  double price = 1;
  uint64 duration_in_minutes = 2;
  string title = 3;
}

message User {
  string name = 1;
  string surname = 2;
  string image_url = 3;
  uint64 address_id = 4;
}

message RetrieveShippingMethodsResponse {
  map<uint64, ShippingMethod> shipping_methods = 1;
}

message CreateReservationResponse {
  uint64 reservation_id = 1;
  Reservation reservation = 2;
}

message CreatePurchaseResponse {
  uint64 purchase_id = 1;
  Purchase purchase = 2;
}

message CreateBookingResponse {
  uint64 booking_id = 1;
  Purchase booking = 2;
}

message CreateReservationRequest {
  string access_token = 1;
  uint64 product_id = 2;
  uint64 days = 3;
}

message CreateBookingRequest {
  string access_token = 1;
  uint64 service_id = 2;
}

message CreatePurchaseRequest {
  string access_token = 1;
  map<uint64,uint64> items = 2; // { product_id: quantity }
}

message StateMachineResponse {
  message StateDefinition {
    int64 stage = 1;
    string name = 2;
    string description = 3;
  }
  repeated StateDefinition states = 1;
}

message Reservation {
  uint64 user_id = 1;
  map<uint64, StateChange> state_changes = 2;
  Timestamp timestamp = 3;
  uint64 product_id = 4;
  uint64 days = 5;
  double amount = 6;  // calculated at req time
}

message Purchase {
  uint64 user_id = 1;
  map<uint64, StateChange> state_changes = 2;
  Timestamp timestamp = 3;
  map<uint64,uint64> items = 4; // { product_id: quantity }
  double amount = 5;  // calculated at req time
  uint64 src_address_id = 6;
  uint64 dest_address_id = 7;
  uint64 merchant_id = 8;
  double distance_in_kilometers = 9;
  uint64 shipping_id = 10;
}

message Booking {
  uint64 user_id = 1;
  map<uint64, StateChange> state_changes = 2;
  Timestamp timestamp = 3;
  uint64 service_id = 4;
  double amount = 5;  // calculated at req time
}

message RetrieveCurrentRequest {
  string access_token = 1;
}

message StateChange {
  string name = 1;
  google.protobuf.Timestamp created_at = 2;
  int64 stage = 3;
}

message Shipment {
  uint64 purchase_id = 1;
  map<uint64, StateChange> state_changes = 2;
  uint64 service_id = 3;
  Timestamp timestamp = 4;
}

message Timestamp{
  google.protobuf.Timestamp created_at = 1;
  google.protobuf.Timestamp updated_at = 2;
}

message Payment {
  shared.Entity entity = 1;
  uint64 user_id = 2;
  double amount = 3;
  Timestamp timestamp = 4;
  Card card = 5;
  map<uint64, StateChange> state_changes = 6;
}

message Card {
  uint64 number = 1;
  uint64 cvv = 2;
  uint64 expiry_month = 3;
  uint64 expiry_year = 4;
  CardHolder holder = 5;
}

message CardHolder {
  uint64 dni = 1;
  string name = 2;
  string surname = 3;
}


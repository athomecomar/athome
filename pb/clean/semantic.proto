syntax = "proto3";

import "validate/validate.proto";
import "google/protobuf/empty.proto";

option go_package = "./pbsemantic";

package semantic;

service ServiceProviders {
  rpc RetrieveCategories (google.protobuf.Empty) returns (RetrieveCategoriesResponse) {}
}

service Merchants {
  rpc RetrieveCategories (google.protobuf.Empty) returns (RetrieveCategoriesResponse) {}
}

service Products {
  rpc PredictCategory(stream PredictCategoryRequest) returns (stream PredictCategoryResponse) {}

  rpc RetrieveCategories (google.protobuf.Empty) returns (RetrieveCategoriesResponse) {}
  rpc RetrieveAttributesSchema(RetrieveAttributesSchemaRequest) returns (RetrieveAttributesSchemaResponse) {}
  rpc RetrieveAttributesData(RetrieveAttributesDataRequest) returns (RetrieveAttributesDataResponse) {}

  rpc SetAttributesData(stream SetAttributesDataRequest) returns (stream SetAttributesDataResponse) {}
  rpc CloneAttributesData(CloneAttributesDataRequest) returns (CloneAttributesDataResponse) {}
}

message Category {
  uint64 id = 1;
  string name = 2;

  uint64 parent_id = 3;
  repeated Category childs = 4;
}

message AttributeSchema {
  uint64 id = 1;
  uint64 category_id =  2;

  string name = 3;
  string value_type = 4;
}

message RetrieveCategoriesResponse {
  repeated Category categories = 1;
}

message RetrieveAttributesSchemaRequest {
  uint64 category_id = 1;
}

message RetrieveAttributesDataRequest {
  uint64 entity_id = 1;
  string entity_table = 2;
}

message RetrieveAttributesSchemaResponse {
  repeated AttributeSchema attributes = 1;
}

message RetrieveAttributesDataResponse {
  repeated SetAttributesDataResponse attributes = 1;
}

message SetAttributesDataResponse {
  uint64 attribute_data_id = 1;
  AttributeData data = 2;
}

message CloneAttributesDataResponse {
  repeated SetAttributesDataResponse attributes = 1;
}

message SetAttributesDataRequest {
  message Authorization {
    string access_token = 1; // from which assigns the user_id col
    uint64 entity_id = 2;
    string entity_table = 3;
  }

  oneof corpus {
    Authorization authorization = 1;
    AttributeData data = 2;
  }
}

message CloneAttributesDataRequest {
  string access_token = 1;
  uint64 from_entity_id = 2;
  uint64 dest_entity_id = 3;
  string entity_table = 4;
}

message AttributeData {
  uint64 schema_id = 1;
  repeated string values = 2;
}

message PredictCategoryRequest {
  string title = 1;
}

message PredictCategoryResponse {
  Category category = 1;
  double score = 2;
}


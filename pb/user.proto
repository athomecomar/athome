syntax = "proto3";

import "validate/validate.proto";
import "google/protobuf/empty.proto";

option go_package = "./pbuser";

package user;

service User {
  rpc Sign (SignRequest) returns (SignResponse) {}

  rpc SignIn (SignInRequest) returns (SignInResponse) {}
  rpc SignOut (SignOutRequest) returns (google.protobuf.Empty) {}

  rpc SwitchRole (SwitchRoleRequest) returns (SignResponse) {}

  rpc SignUpStart (SignUpStartRequest) returns (SignUpStartResponse) {}
  rpc SignUpShared (SignUpSharedRequest) returns (SignUpSharedResponse) {}
  rpc SignUpEnd (SignUpEndRequest) returns (SignUpEndResponse) {}

  rpc FetchOnboarding (FetchOnboardingRequest) returns (FetchOnboardingResponse) {}

  rpc FetchSelectableCategories (FetchSelectableCategoriesRequest) returns (FetchSelectableCategoriesResponse) {}

  rpc ForgotPassword (ForgotPasswordRequest) returns (google.protobuf.Empty) {}
  rpc ResetPassword (ResetPasswordRequest) returns (google.protobuf.Empty) {}
}

message FetchSelectableCategoriesRequest {
  uint64 onboarding_id = 1;
}

message FetchSelectableCategoriesResponse {
  repeated Category categories = 1;
}

message Category {
  string name = 1;
  repeated Category childs = 2;
}

message SwitchRoleRequest {
  string access_token = 1;
  string role = 2 [(validate.rules).string = {in: ["service-provider", "consumer", "merchant"]}];
  string password = 3;
}

message SignOutRequest {
  string access_token = 1;
}

message ResetPasswordRequest {
  string token = 1;
  string password = 2 [(validate.rules).string = {min_len: 6, max_len: 25}];
}

message ForgotPasswordRequest {
  string email = 1 [(validate.rules).string = {email: true}];
}

message FetchOnboardingRequest {
  uint64 onboarding_id = 1;
}

message FetchOnboardingResponse{
  string role = 1;
  string email = 2;
  string name = 3;
  string surname = 4;
  int64 stage = 5;
}

message SignUpStartRequest {
  string role = 1 [(validate.rules).string = {in: ["service-provider", "consumer", "merchant"]}];
}

message SignUpStartResponse{
  uint64 onboarding_id = 1;
}

message SignUpSharedRequest {
  uint64 onboarding_id = 1;
  string email = 2 [(validate.rules).string = {email: true}];
  string name = 3 [(validate.rules).string = {min_len: 2, max_len: 30}];
  string surname = 4 [(validate.rules).string = {min_len: 2, max_len: 30}];
}

message SignUpSharedResponse{
  uint64 onboarding_id = 1;
}

message SignUpEndRequest{
  uint64 onboarding_id = 1;
  string password = 2 [(validate.rules).string = {min_len: 6, max_len: 25}];
}

message SignUpEndResponse {
  SignInUser user = 1;
}

message SignInRequest {
  string email = 1 [(validate.rules).string = {email: true}];
  string password = 2 [(validate.rules).string = {min_len: 6, max_len: 25}];
}

message SignInResponse {
  repeated SignInUser users = 1;
  uint64 sign_token_exp_ns = 7;

}

message SignInUser {
  uint64 id = 1;
  string sign_token = 2;
  string role = 3;
  string name = 4;
  string surname = 5;
  string email = 6;
}

message SignRequest {
  string sign_token = 1;
}

message SignResponse {
  string access_token = 1;
  string refresh_token = 2;

  uint64 access_token_exp_ns = 3;
  uint64 refresh_token_exp_ns = 4;
}

syntax = "proto3";

import "validate/validate.proto";

option go_package = "./pbidentifier";

package identifier;

service Identifier {
  rpc ValidateLicensePsychologist (ValidateLicenseRequest) returns (ValidateLicenseResponse) {}

  rpc InferLicenseByFullnameMedic (InferByFullnameRequest) returns (InferLicenseResponse) {}

  rpc InferTomeAndFolioByFullnameLawyer (InferByFullnameRequest) returns (InferTomeAndFolioResponse) {}

  rpc InferTomeAndFolioByFullnameAttorney (InferByFullnameRequest) returns (InferTomeAndFolioResponse) {}

  rpc InferDataByCUE (InferDataByCUERequest) returns (InferDataByCUEResponse) {}
}

message ValidateLicenseRequest{
  uint64 dni = 2 [(validate.rules).uint64 = {gt: 999999, lt: 99999999}];
  uint64 license = 3;
}

message ValidateLicenseResponse{
  bool valid = 1;
}

message InferByFullnameRequest{
  string name = 2 [(validate.rules).string = {min_len: 2, max_len: 30}];
  string surname = 3 [(validate.rules).string = {min_len: 2, max_len: 30}];
}

message InferLicenseResponse{
  uint64 license = 1;
}

message InferTomeAndFolioResponse{
  uint64 tome = 1;
  uint64 folio = 2;
}

message InferDataByCUERequest{
  uint64 cue = 1 [(validate.rules).uint64 = {gt: 20000000, lt: 999999999}];
}

message InferDataByCUEResponse{
  string name = 1;
  bool is_public = 2;
  bool is_urban = 3;
  string address = 4;
  string phone = 6;
  EducationType education_type = 7;
  AlumnType alumn_type = 8;
}

message EducationType {
  bool maternal = 1;
  bool initial  = 2;
  bool primary  = 3;
  bool high_school  = 4;
  bool technical = 5;
  bool superior = 6;
  bool courses = 7;
}

message AlumnType {
  bool adult = 1;
  bool special = 2;
  bool normal = 3;
}
